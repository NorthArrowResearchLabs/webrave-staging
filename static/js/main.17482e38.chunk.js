(this["webpackJsonp@riverscapes/app-webrave"]=this["webpackJsonp@riverscapes/app-webrave"]||[]).push([[0],{11:function(e,t,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),n=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||r(t,e,a)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.typeDefs=void 0,n(a(411),t),n(a(460),t),n(a(296),t);var i=a(461);Object.defineProperty(t,"typeDefs",{enumerable:!0,get:function(){return o(i).default}}),n(a(462),t),n(a(463),t),n(a(465),t),n(a(466),t)},296:function(e,t,a){"use strict";var r,n;Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectTreeLayerTileTypes=t.ProjectTreeLayerTypes=t.TileTypes=t.SymbologyStatus=t.TilingStatusFinished=t.TilingStatus=t.RampType=t.AccessEnum=t.WarehouseRoleEnum=t.FieldTypeEnum=void 0,function(e){e.string="S",e.number="N",e.boolean="BOOL",e.stringArr="SARR",e.numberArr="NARR"}(t.FieldTypeEnum||(t.FieldTypeEnum={})),function(e){e.SuperUser="SUPER",e.Admin="ADMIN",e.Observer="OBSERVER",e.Participant="PARTICIPANT"}(t.WarehouseRoleEnum||(t.WarehouseRoleEnum={})),function(e){e.Public="PUBLIC",e.Private="PRIVATE",e.Secret="SECRET"}(t.AccessEnum||(t.AccessEnum={})),function(e){e.INTERPOLATED="INTERPOLATED",e.DISCRETE="DISCRETE",e.EXACT="EXACT"}(t.RampType||(t.RampType={})),function(e){e.UNKNOWN="UNKNOWN",e.QUEUED="QUEUED",e.FETCHING="FETCHING",e.NOT_APPLICABLE="NOT_APPLICABLE",e.CREATING="CREATING",e.NO_GEOMETRIES="NO_GEOMETRIES",e.TIMEOUT="TIMEOUT",e.TILING_ERROR="TILING_ERROR",e.INDEX_NOT_FOUND="INDEX_NOT_FOUND",e.LAYER_NOT_FOUND="LAYER_NOT_FOUND",e.FETCH_ERROR="FETCH_ERROR",e.SUCCESS="SUCCESS"}(r=t.TilingStatus||(t.TilingStatus={})),t.TilingStatusFinished=[r.NOT_APPLICABLE,r.NO_GEOMETRIES,r.TIMEOUT,r.TILING_ERROR,r.SUCCESS],function(e){e.UNKNOWN="UNKNOWN",e.FETCHING="FETCHING",e.MISSING="MISSING",e.NOT_APPLICABLE="NOT_APPLICABLE",e.FOUND="FOUND",e.ERROR="ERROR"}(t.SymbologyStatus||(t.SymbologyStatus={})),function(e){e.RASTER="RASTER",e.HTML="HTML",e.VECTOR_SHP="VECTOR_SHP",e.VECTOR_GPKG="VECTOR_GPKG"}(t.TileTypes||(t.TileTypes={})),function(e){e.REPORT="report",e.RASTER="raster",e.LINE="line",e.POLYGON="polygon",e.POINT="point",e.FILE="file",e.TIN="tin"}(n=t.ProjectTreeLayerTypes||(t.ProjectTreeLayerTypes={})),t.ProjectTreeLayerTileTypes=[n.RASTER,n.POLYGON,n.LINE,n.POINT]},351:function(e){e.exports=JSON.parse('{"version":8,"name":"Satellite Streets","metadata":{"mapbox:type":"default","mapbox:origin":"satellite-streets-v11","mapbox:sdk-support":{"android":"9.3.0","ios":"5.10.0","js":"2.0.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Satellite imagery, land":{"name":"Satellite imagery, land","collapsed":false},"Road network, tunnels-case":{"name":"Road network, tunnels-case","collapsed":false},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":false},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":false},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":false},"Road network, surface":{"name":"Road network, surface","collapsed":false},"Road network, surface-icons":{"name":"Road network, surface-icons","collapsed":false},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":false},"Road network, bridges":{"name":"Road network, bridges","collapsed":false},"Transit, elevated":{"name":"Transit, elevated","collapsed":false},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":false},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":false},"Transit, ferry-aerialway-labels":{"name":"Transit, ferry-aerialway-labels","collapsed":false},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":false},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":false},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":false},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":false}},"mapbox:decompiler":{"id":"satellite-streets-v11","componentVersion":"9.0.0","strata":[{"id":"satellite-streets-v11","order":[["transit","built"],["satellite","land"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["transit","elevated"],["admin-boundaries","admin"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"]]}],"components":{"satellite":"9.0.0","road-network":"9.0.0","walking-cycling":"9.0.0","admin-boundaries":"9.0.0","natural-features":"9.0.0","point-of-interest-labels":"9.0.0","transit":"9.0.0","place-labels":"9.0.0"},"propConfig":{"satellite":{},"road-network":{"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"color-road":"hsla(0, 0%, 90%, 0.5)","color-motorway-trunk":"hsla(36, 87%, 68%, 0.7)","construction":false,"color-road-label":"hsl(0, 0%, 100%)","fadeOutRoadsOnZoom":true,"railwayCrossings":false,"polygonFeatures":false,"color-base":"hsl(0, 0%, 0%)","minorRoads":false,"turningCircles":false,"color-road-outline":"hsla(0, 1%, 10%, 0.5)"},"walking-cycling":{"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"golfHoleLabelLine":false,"color-road":"hsla(0, 0%, 90%, 0.5)","color-greenspace":"hsl(94, 100%, 14%)","walkingCyclingPisteBackground":false,"color-road-label":"hsl(0, 0%, 100%)","color-greenspace-label":"hsl(94, 100%, 74%)","poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","pedestrianPolygonFeatures":false,"color-road-outline":"hsla(0, 1%, 10%, 0.5)","labels":false},"admin-boundaries":{"admin0Width":1.5,"color-base":"hsl(0, 0%, 0%)","color-place-label":"hsl(0, 0%, 100%)","color-admin-boundary":"hsl(0, 0%, 0%)"},"natural-features":{"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-water":"hsl(196, 50%, 50%)","color-poi":"hsl(0, 0%, 100%)"},"point-of-interest-labels":{"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-poi":"hsl(0, 0%, 100%)","color-greenspace":"hsl(94, 100%, 14%)","color-greenspace-label":"hsl(94, 100%, 74%)","color-hospital":"hsl(0, 0%, 100%)","color-school":"hsl(0, 0%, 100%)"},"transit":{"color-airport":"hsl(0, 0%, 100%)","matchLabelAndIcon":false,"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"aeroways":false,"color-transit":"hsl(0, 0%, 100%)","color-road":"hsla(0, 0%, 90%, 0.5)","color-water":"hsl(196, 50%, 50%)","color-road-label":"hsl(0, 0%, 100%)","railways":false,"ferries":false,"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-road-outline":"hsla(0, 1%, 10%, 0.5)"},"place-labels":{"settlementsMinorFont":["DIN Pro Medium","Arial Unicode MS Regular"],"settlementSubdivisionsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"color-base":"hsl(0, 0%, 0%)","color-place-label":"hsl(0, 0%, 100%)"}}}},"center":[-118.4106,33.750013],"zoom":13,"sources":{"mapbox://mapbox.satellite":{"url":"mapbox://mapbox.satellite","type":"raster","tileSize":256},"mapbox://mapbox.mapbox-traffic-v1":{"url":"mapbox://mapbox.mapbox-traffic-v1","type":"vector"},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"background","type":"background","metadata":{"mapbox:featureComponent":"satellite","mapbox:group":"Satellite imagery, land"},"layout":{},"paint":{"background-color":"hsl(222, 56%, 4%)"}},{"id":"satellite","type":"raster","metadata":{"mapbox:featureComponent":"satellite","mapbox:group":"Satellite imagery, land"},"source":"mapbox://mapbox.satellite","layout":{},"paint":{}},{"id":"tunnel-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 0%, 0%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0],"line-dasharray":[3,3]}},{"id":"tunnel-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsla(0, 0%, 0%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"tunnel-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 0%, 90%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[1,0.5]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 78%, 0.7)","hsla(46, 77%, 78%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"tunnel-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","street","street_limited","tertiary"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"tunnel-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 78%, 0.7)","hsla(46, 77%, 78%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-street-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-street-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,0.75,18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-primary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":7,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-street","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-primary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"road-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["step",["zoom"],["match",["get","class"],"motorway","hsla(26, 87%, 62%, 0.7)","hsla(0, 0%, 90%, 0.5)"],6,["match",["get","class"],"motorway","hsla(26, 87%, 62%, 0.7)","hsla(46, 80%, 60%, 0.7)"],9,["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface-icons"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","oneway"],"true"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"bridge-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"bridge-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"bridge-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"aerialway","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, elevated"},"source":"composite","source-layer":"road","minzoom":12,"filter":["==",["get","class"],"aerialway"],"layout":{"line-join":"round"},"paint":{"line-color":"hsla(0, 0%, 25%, 0.5)","line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(0, 0%, 14%)",16,"hsl(0, 0%, 30%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,5.25,10,12],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(0, 0%, 14%)",8,"hsl(0, 0%, 30%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,3]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(0, 0%, 0%)",7,"hsl(0, 0%, 5%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(0, 0%, 0%)","line-width":["interpolate",["linear"],["zoom"],3,0.75,10,3],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 0%)","line-width":["interpolate",["linear"],["zoom"],3,0.75,10,3],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"road-label","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":10,"filter":["step",["zoom"],["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],true,false],12,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited"],true,false],15,["match",["get","class"],["path","pedestrian","golf","ferry","aerialway","track","service"],false,true]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],9,6.5],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],14,13]],"text-max-angle":30,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-color":["match",["get","class"],["motorway","trunk"],"hsla(0, 5%, 0%, 0.75)","hsl(0, 5%, 0%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"road-intersection","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","class"],"intersection"],["has","name"]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"icon-image":"intersection","icon-text-fit":"both","icon-text-fit-padding":[1,2,1,2],"text-size":["interpolate",["exponential",1.2],["zoom"],15,9,18,12],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(230, 57%, 64%)"}},{"id":"road-number-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["has","reflen"],["<=",["get","reflen"],6],["step",["zoom"],["==",["geometry-type"],"Point"],11,[">",["get","len"],5000],12,[">",["get","len"],2500],13,[">",["get","len"],1000],14,true]],"layout":{"text-size":9,"icon-image":["concat",["get","shield"],"-",["to-string",["get","reflen"]]],"icon-rotation-alignment":"viewport","text-max-angle":38,"symbol-spacing":["interpolate",["linear"],["zoom"],11,150,14,200],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":["step",["zoom"],"point",11,"line"],"text-rotation-alignment":"viewport","text-field":["get","ref"],"text-letter-spacing":0.05},"paint":{"text-color":["match",["get","shield_text_color"],"white","hsl(0, 0%, 100%)","yellow","hsl(50, 100%, 70%)","orange","hsl(25, 100%, 75%)","blue","hsl(230, 57%, 44%)","hsl(230, 18%, 13%)"]}},{"id":"road-exit-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"motorway_junction","minzoom":14,"filter":["all",["has","reflen"],["<=",["get","reflen"],9]],"layout":{"text-field":["get","ref"],"text-size":9,"icon-image":["concat","motorway-exit-",["to-string",["get","reflen"]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(0, 0%, 100%)","text-translate":[0,0]}},{"id":"ferry-aerialway-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, ferry-aerialway-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["match",["get","class"],"aerialway",true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,6.5,18,13],"text-max-angle":30,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":["match",["get","class"],"ferry","hsl(196, 18%, 86%)","hsl(0, 0%, 100%)"],"text-halo-color":["match",["get","class"],"ferry","hsl(196, 50%, 50%)","hsl(0, 5%, 0%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(196, 18%, 90%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(0, 5%, 0%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(0, 0%, 100%)",5,"hsl(0, 0%, 100%)"],17,["step",["get","sizerank"],"hsl(0, 0%, 100%)",13,"hsl(0, 0%, 100%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["concat",["get","maki"],"-11"],15,["concat",["get","maki"],"-15"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(0, 0%, 100%)",5,"hsl(0, 0%, 100%)"],17,["step",["get","sizerank"],"hsl(0, 0%, 100%)",13,"hsl(0, 0%, 100%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 46%, 70%)","hsl(196, 18%, 90%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 46%, 70%)","hsl(196, 18%, 90%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],3]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-11"]],["image",["concat",["get","maki"],"-11"]]],15,["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-15"]],["image",["concat",["get","maki"],"-15"]]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(94, 100%, 0%)","medical","hsl(0, 5%, 3%)","hsl(0, 5%, 0%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 84%)","hsl(0, 0%, 100%)"],5,["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 73%)","hsl(0, 0%, 100%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 84%)","hsl(0, 0%, 100%)"],13,["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 73%)","hsl(0, 0%, 100%)"]]]}},{"id":"transit-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"transit_stop_label","minzoom":12,"filter":["step",["zoom"],["all",["match",["get","mode"],"rail",true,"metro_rail",true,false],["!=",["get","stop_type"],"entrance"]],15,["all",["match",["get","mode"],"rail",true,"metro_rail",true,"light_rail",true,false],["!=",["get","stop_type"],"entrance"]],16,["all",["match",["get","mode"],"ferry",false,"bus",false,true],["!=",["get","stop_type"],"entrance"]],17,["all",["match",["get","mode"],"ferry",false,true],["!=",["get","stop_type"],"entrance"]],19,["match",["get","mode"],"ferry",false,true]],"layout":{"text-size":12,"icon-image":["get","network"],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-justify":["match",["get","stop_type"],"entrance","left","center"],"text-offset":["match",["get","stop_type"],"entrance",["literal",[1,0]],["literal",[0,0.8]]],"text-anchor":["match",["get","stop_type"],"entrance","left","top"],"text-field":["step",["zoom"],"",14,["match",["get","mode"],["rail","metro_rail"],["coalesce",["get","name_en"],["get","name"]],""],16,["match",["get","mode"],["bus","bicycle"],"",["coalesce",["get","name_en"],["get","name"]]],18,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.01,"text-max-width":["match",["get","stop_type"],"entrance",15,9]},"paint":{"text-halo-color":"hsl(0, 5%, 0%)","text-color":"hsl(0, 0%, 100%)","text-halo-blur":0.5,"text-halo-width":0.5}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["step",["get","sizerank"],["concat",["get","maki"],"-15"],9,["concat",["get","maki"],"-11"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-color":"hsl(0, 20%, 3%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],4]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(0, 5%, 0%, 0.75)","text-halo-width":1,"text-color":"hsl(0, 0%, 100%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],true,8,[">=",["get","symbolrank"],11],10,[">=",["get","symbolrank"],12],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-offset":["step",["zoom"],["match",["get","capital"],2,["match",["get","text_anchor"],"bottom",["literal",[0,-0.3]],"bottom-left",["literal",[0.3,-0.1]],"left",["literal",[0.45,0.1]],"top-left",["literal",[0.3,0.1]],"top",["literal",[0,0.3]],"top-right",["literal",[-0.3,0.1]],"right",["literal",[-0.45,0]],"bottom-right",["literal",[-0.3,-0.1]],["literal",[0,-0.3]]],["match",["get","text_anchor"],"bottom",["literal",[0,-0.25]],"bottom-left",["literal",[0.2,-0.05]],"left",["literal",[0.4,0.05]],"top-left",["literal",[0.2,0.05]],"top",["literal",[0,0.25]],"top-right",["literal",[-0.2,0.05]],"right",["literal",[-0.4,0.05]],"bottom-right",["literal",[-0.2,-0.05]],["literal",[0,-0.25]]]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1,"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,8,["<",["get","symbolrank"],11],10,["<",["get","symbolrank"],12],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-offset":["step",["zoom"],["match",["get","capital"],2,["match",["get","text_anchor"],"bottom",["literal",[0,-0.3]],"bottom-left",["literal",[0.3,-0.1]],"left",["literal",[0.45,0.1]],"top-left",["literal",[0.3,0.1]],"top",["literal",[0,0.3]],"top-right",["literal",[-0.3,0.1]],"right",["literal",[-0.45,0]],"bottom-right",["literal",[-0.3,-0.1]],["literal",[0,-0.3]]],["match",["get","text_anchor"],"bottom",["literal",[0,-0.25]],"bottom-left",["literal",[0.2,-0.05]],"left",["literal",[0.4,0.05]],"top-left",["literal",[0.2,0.05]],"top",["literal",[0,0.25]],"top-right",["literal",[-0.2,0.05]],"right",["literal",[-0.4,0.05]],"bottom-right",["literal",[-0.2,-0.05]],["literal",[0,-0.25]]]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1,"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],7,"center"],"text-offset":["literal",[0,0]],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":6},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(0, 0%, 95%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(0, 5%, 0%, 0.75)",3,"hsl(0, 5%, 0%)"],"text-halo-width":1.25}}],"created":"2021-03-29T17:58:09.569Z","modified":"2021-03-29T17:58:21.965Z","id":"ckmuw9x2e5f0417pe3vy7y0cz","owner":"northarrowresearch","visibility":"private","draft":false}')},352:function(e){e.exports=JSON.parse('{"version":8,"name":"Basic","metadata":{"mapbox:type":"default","mapbox:origin":"basic-v1","mapbox:sdk-support":{"android":"9.3.0","ios":"5.10.0","js":"2.0.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Land, water, & sky, land":{"name":"Land, water, & sky, land","collapsed":false},"Land, water, & sky, water":{"name":"Land, water, & sky, water","collapsed":false},"Land, water, & sky, built":{"name":"Land, water, & sky, built","collapsed":false},"Transit, built":{"name":"Transit, built","collapsed":false},"Buildings, built":{"name":"Buildings, built","collapsed":false},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":false},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":false},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":false},"Road network, surface":{"name":"Road network, surface","collapsed":false},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":false},"Road network, bridges":{"name":"Road network, bridges","collapsed":false},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":false},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":false},"Walking, cycling, etc., walking-cycling-labels":{"name":"Walking, cycling, etc., walking-cycling-labels","collapsed":false},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":false},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":false},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":false},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":false}},"mapbox:decompiler":{"id":"basic-v1","componentVersion":"9.0.0","strata":[{"id":"basic-v1","order":[["land-and-water","land"],["land-and-water","water"],["land-and-water","built"],["transit","built"],["buildings","built"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["buildings","extruded"],["transit","elevated"],["admin-boundaries","admin"],["buildings","building-labels"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"],["land-and-water","sky"]]}],"components":{"road-network":"9.0.0","natural-features":"9.0.0","place-labels":"9.0.0","admin-boundaries":"9.0.0","point-of-interest-labels":"9.0.0","walking-cycling":"9.0.0","transit":"9.0.0","land-and-water":"9.0.0","buildings":"9.0.0"},"propConfig":{"road-network":{"color-base":"hsl(40, 48%, 92%)","color-road":"hsl(38, 55%, 100%)","roadNetwork":"Simple"},"natural-features":{"color-base":"hsl(40, 48%, 92%)","color-water":"hsl(205, 76%, 70%)","color-poi":"hsl(26, 20%, 38%)"},"place-labels":{"color-base":"hsl(40, 48%, 92%)","color-place-label":"hsl(0, 0%, 15%)","settlementSubdivisionsDensity":3,"settlementLabelStyle":"Text only"},"admin-boundaries":{"color-base":"hsl(40, 48%, 92%)","color-place-label":"hsl(0, 0%, 15%)"},"point-of-interest-labels":{"color-base":"hsl(40, 48%, 92%)","color-greenspace":"hsl(78, 50%, 73%)","color-greenspace-label":"hsl(76, 50%, 16%)","color-hospital":"hsl(3, 45%, 55%)","color-school":"hsl(40, 45%, 45%)","color-poi":"hsl(26, 20%, 38%)","density":2},"walking-cycling":{"color-base":"hsl(40, 48%, 92%)","color-road":"hsl(38, 55%, 100%)","color-greenspace":"hsl(78, 50%, 73%)","color-greenspace-label":"hsl(76, 50%, 16%)","walkingCyclingPisteBackground":false,"golfHoleLabelLine":false,"pedestrianPolygonFeatures":false},"transit":{"color-airport":"hsl(225, 4%, 40%)","color-transit":"hsl(345, 6%, 40%)","aerialways":false,"color-road":"hsl(38, 55%, 100%)","color-water":"hsl(205, 76%, 70%)","transitLabels":false,"railways":false,"ferries":false,"color-base":"hsl(40, 48%, 92%)"},"land-and-water":{"color-airport":"hsl(225, 4%, 40%)","color-hospital":"hsl(3, 45%, 55%)","landType":"Landuse only","color-greenspace":"hsl(78, 50%, 73%)","color-water":"hsl(205, 76%, 70%)","transitionLandOnZoom":false,"waterStyle":"Simple","color-base":"hsl(40, 48%, 92%)","color-school":"hsl(40, 45%, 45%)"},"buildings":{"color-base":"hsl(40, 48%, 92%)","houseNumbers":false}}}},"center":[2.3176,48.8665],"zoom":12,"sources":{"mapbox://mapbox.mapbox-traffic-v1":{"url":"mapbox://mapbox.mapbox-traffic-v1","type":"vector"},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuv21s85dd317s3sii3rhg7/5aimie0s459ihq4jyhsfvi0wl","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"land","type":"background","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"layout":{},"paint":{"background-color":"hsl(40, 46%, 86%)"}},{"id":"national-park","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["==",["get","class"],"national_park"],"layout":{},"paint":{"fill-color":"hsl(78, 50%, 73%)","fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,0.5,10,0.5]}},{"id":"landuse","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":5,"filter":["match",["get","class"],["park","airport","glacier","pitch","sand","facility"],true,"cemetery",true,"school",true,"hospital",true,false],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,["match",["get","class"],"park","hsl(78, 50%, 73%)","airport","hsl(225, 49%, 88%)","cemetery","hsl(60, 49%, 79%)","glacier","hsl(205, 66%, 90%)","hospital","hsl(3, 47%, 84%)","pitch","hsl(78, 51%, 68%)","sand","hsl(43, 50%, 83%)","school","hsl(40, 47%, 78%)","hsl(40, 49%, 82%)"],16,["match",["get","class"],"park","hsl(78, 50%, 73%)","airport","hsl(225, 63%, 86%)","cemetery","hsl(60, 49%, 79%)","glacier","hsl(205, 66%, 90%)","hospital","hsl(3, 46%, 86%)","pitch","hsl(78, 51%, 68%)","sand","hsl(43, 50%, 83%)","school","hsl(40, 47%, 78%)","hsl(40, 49%, 82%)"]],"fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,["match",["get","class"],"glacier",0.5,1]]}},{"id":"pitch-outline","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":15,"filter":["==",["get","class"],"pitch"],"layout":{},"paint":{"line-color":"hsl(60, 29%, 81%)"}},{"id":"waterway","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(205, 76%, 70%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(205, 76%, 70%)"}},{"id":"land-structure-polygon","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"Polygon"],["==",["get","class"],"land"]],"layout":{},"paint":{"fill-color":"hsl(40, 46%, 86%)"}},{"id":"land-structure-line","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"LineString"],["==",["get","class"],"land"]],"layout":{"line-cap":"round"},"paint":{"line-width":["interpolate",["exponential",1.99],["zoom"],14,0.75,20,40],"line-color":"hsl(40, 46%, 86%)"}},{"id":"aeroway-polygon","type":"fill","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":11,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","type"],["runway","taxiway","helipad"],true,false]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(225, 37%, 79%)",16,"hsl(225, 19%, 81%)"],"fill-opacity":["interpolate",["linear"],["zoom"],11,0,11.5,1]}},{"id":"aeroway-line","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":9,"filter":["==",["geometry-type"],"LineString"],"layout":{},"paint":{"line-color":["interpolate",["linear"],["zoom"],15,"hsl(225, 37%, 79%)",16,"hsl(225, 19%, 81%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],9,["match",["get","type"],"runway",1,0.5],18,["match",["get","type"],"runway",80,20]]}},{"id":"building-outline","type":"line","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"line-color":"hsl(40, 42%, 77%)","line-width":["interpolate",["exponential",1.5],["zoom"],15,0.75,20,3],"line-opacity":["interpolate",["linear"],["zoom"],15,0,16,1]}},{"id":"building","type":"fill","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(40, 45%, 83%)",16,"hsl(40, 41%, 82%)"],"fill-opacity":["interpolate",["linear"],["zoom"],15,0,16,1],"fill-outline-color":"hsl(40, 42%, 77%)"}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[1,0.5]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","street","street_limited","primary_link"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","street","street_limited","primary_link"],18,12]],"line-color":"hsl(38, 55%, 93%)"}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["step",["zoom"],["match",["get","class"],["motorway","trunk"],true,false],6,["match",["get","class"],["motorway","trunk","primary"],true,false],8,["match",["get","class"],["motorway","trunk","primary","secondary"],true,false],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","motorway_link","trunk_link"],true,false],11,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street"],true,false],12,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link"],true,false],13,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],["motorway","trunk","primary"],0.75,["secondary","tertiary"],0.1,0],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","primary_link","street","street_limited"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","primary_link","street","street_limited"],18,10]],"line-color":["match",["get","class"],["primary_link","secondary_link","tertiary_link","street","street_limited","service","track"],"hsl(38, 55%, 95%)","hsl(38, 55%, 100%)"]}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-case-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],6,["secondary","tertiary"],4,["motorway_link","trunk_link","street","street_limited","primary_link"],2.5,1.25],18,["match",["get","class"],["motorway","trunk","primary"],36,["secondary","tertiary"],30,["motorway_link","trunk_link","street","street_limited","primary_link"],22,16]],"line-color":"hsl(40, 46%, 86%)"}},{"id":"bridge-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["motorway","trunk"],true,false],13,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","street","street_limited","primary_link"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],["primary_link","secondary_link","tertiary_link","street","street_limited","service","track"],"hsl(38, 55%, 95%)","hsl(38, 55%, 100%)"]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(40, 46%, 86%)",16,"hsl(0, 0%, 87%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,3.5,10,8],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(40, 46%, 86%)",8,"hsl(0, 0%, 87%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,2]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(0, 0%, 77%)",7,"hsl(0, 0%, 62%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(0, 0%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"road-label-simple","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited"],true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,9],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,14]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(40, 47%, 41%)","text-halo-color":"hsl(38, 55%, 100%)","text-halo-width":1}},{"id":"path-pedestrian-label","type":"symbol","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., walking-cycling-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["step",["zoom"],["match",["get","class"],["pedestrian"],true,false],15,["match",["get","class"],["path","pedestrian"],true,false]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],"pedestrian",9,6.5],18,["match",["get","class"],"pedestrian",14,13]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(40, 47%, 41%)","text-halo-color":"hsl(40, 46%, 95%)","text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(205, 44%, 90%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(40, 53%, 100%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 15%, 48%)",5,"hsl(26, 20%, 38%)"],17,["step",["get","sizerank"],"hsl(26, 15%, 48%)",13,"hsl(26, 20%, 38%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["concat",["get","maki"],"-11"],15,["concat",["get","maki"],"-15"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 15%, 48%)",5,"hsl(26, 20%, 38%)"],17,["step",["get","sizerank"],"hsl(26, 15%, 48%)",13,"hsl(26, 20%, 38%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(205, 72%, 90%)","hsl(205, 44%, 90%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(205, 72%, 90%)","hsl(205, 44%, 90%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-11"]],["image",["concat",["get","maki"],"-11"]]],15,["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-15"]],["image",["concat",["get","maki"],"-15"]]]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(78, 55%, 100%)","education","hsl(40, 52%, 100%)","medical","hsl(3, 51%, 100%)","hsl(40, 53%, 100%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(22, 44%, 61%)","park_like","hsl(76, 51%, 26%)","education","hsl(40, 18%, 45%)","medical","hsl(3, 18%, 55%)","hsl(26, 15%, 48%)"],5,["match",["get","class"],"food_and_drink","hsl(22, 68%, 44%)","park_like","hsl(76, 50%, 15%)","education","hsl(40, 45%, 25%)","medical","hsl(3, 24%, 45%)","hsl(26, 20%, 38%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(22, 44%, 61%)","park_like","hsl(76, 51%, 26%)","education","hsl(40, 18%, 45%)","medical","hsl(3, 18%, 55%)","hsl(26, 15%, 48%)"],13,["match",["get","class"],"food_and_drink","hsl(22, 68%, 44%)","park_like","hsl(76, 50%, 15%)","education","hsl(40, 45%, 25%)","medical","hsl(3, 24%, 45%)","hsl(26, 20%, 38%)"]]]}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["step",["get","sizerank"],["concat",["get","maki"],"-15"],9,["concat",["get","maki"],"-11"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(225, 4%, 40%)","text-halo-color":"hsl(225, 68%, 100%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],3]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(40, 53%, 100%, 0.75)","text-halo-width":1,"text-color":"hsl(0, 0%, 27%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],true,8,[">=",["get","symbolrank"],11],10,[">=",["get","symbolrank"],12],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"icon-image":"","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["literal",[0,0]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],"center",8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1,"icon-opacity":["step",["zoom"],1,8,0],"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,8,["<",["get","symbolrank"],11],10,["<",["get","symbolrank"],12],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["literal",[0,0]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],"center",8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1,"icon-opacity":["step",["zoom"],1,8,0],"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["literal",[0,0]],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":6},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(0, 0%, 0%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(40, 53%, 100%, 0.75)",3,"hsl(40, 53%, 100%)"],"text-halo-width":1.25}}],"created":"2021-03-29T17:24:02.794Z","modified":"2021-03-29T17:24:12.872Z","id":"ckmuv21s85dd317s3sii3rhg7","owner":"northarrowresearch","visibility":"private","draft":false}')},353:function(e){e.exports=JSON.parse('{"version":8,"name":"Grayscale Hillshade","metadata":{"mapbox:type":"default","mapbox:origin":"outdoors-v11","mapbox:autocomposite":true,"mapbox:groups":{"1444855786460.0557":{"name":"Roads","collapsed":true},"1444934295202.7542":{"name":"Admin boundaries","collapsed":false},"1444855799204.86":{"name":"Bridges","collapsed":true},"1444855769305.6016":{"name":"Tunnels","collapsed":true}},"mapbox:sdk-support":{"js":"0.54.0","android":"6.7.0","ios":"4.7.0"},"mapbox:uiParadigm":"layers"},"center":[-112.12098454772115,36.094321418957094],"zoom":11.946429691380777,"bearing":0,"pitch":0,"sources":{"composite":{"url":"mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"land","type":"background","layout":{},"paint":{"background-color":["interpolate",["linear"],["zoom"],11,"hsl(35, 0%, 91%)",13,"hsl(35, 0%, 89%)"]}},{"id":"landcover","type":"fill","source":"composite","source-layer":"landcover","maxzoom":12,"layout":{},"paint":{"fill-color":["match",["get","class"],"snow","hsl(0, 0%, 100%)","hsl(75, 0%, 55%)"],"fill-opacity":["interpolate",["exponential",1.5],["zoom"],2,0.3,12,0],"fill-antialias":false}},{"id":"pitch-outline","type":"line","source":"composite","source-layer":"landuse","minzoom":15,"filter":["==",["get","class"],"pitch"],"layout":{},"paint":{"line-color":"hsl(75, 0%, 84%)"}},{"id":"waterway-shadow","type":"line","source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(215, 0%, 69%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-translate":["interpolate",["exponential",1.2],["zoom"],7,["literal",[0,0]],16,["literal",[-1,-1]]],"line-translate-anchor":"viewport","line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water-shadow","type":"fill","source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(215, 0%, 69%)","fill-translate":["interpolate",["exponential",1.2],["zoom"],7,["literal",[0,0]],16,["literal",[-1,-1]]],"fill-translate-anchor":"viewport"}},{"id":"waterway","type":"line","source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(205, 0%, 76%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water","type":"fill","source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(196, 0%, 58%)"}},{"id":"wetland","type":"fill","source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["match",["get","class"],["wetland","wetland_noveg"],true,false],"paint":{"fill-color":"hsl(185, 0%, 74%)","fill-opacity":["interpolate",["linear"],["zoom"],10,0.25,10.5,0.15]}},{"id":"hillshade","type":"fill","source":"composite","source-layer":"hillshade","maxzoom":16,"layout":{},"paint":{"fill-color":["match",["get","class"],"shadow","hsl(0, 0%, 0%)","hsl(0, 0%, 100%)"],"fill-opacity":["interpolate",["linear"],["zoom"],14,["interpolate",["linear"],["get","level"],56,0.27,94,0.1],16,0],"fill-antialias":false}},{"id":"contour-line","type":"line","source":"composite","source-layer":"contour","minzoom":11,"filter":["!=",["get","index"],-1],"layout":{},"paint":{"line-opacity":["interpolate",["linear"],["zoom"],11,["match",["get","index"],[1,2],0.15,0.25],12,["match",["get","index"],[1,2],0.3,0.5]],"line-color":["case",["==",["get","ele"],0],"hsl(100, 0%, 20%)","hsl(100, 0%, 70%)"],"line-width":["interpolate",["linear"],["zoom"],13,["match",["get","index"],[1,2],0.5,0.6],16,["match",["get","index"],[1,2],0.8,1.2]],"line-offset":["interpolate",["linear"],["zoom"],13,["match",["get","index"],[1,2],1,0.6],16,["match",["get","index"],[1,2],1.6,1.2]]}}],"created":"2021-03-29T17:58:09.569Z","modified":"2021-03-29T17:58:21.965Z","id":"ckmuw9x2e5f0417pe3vy7y0cz","owner":"northarrowresearch","visibility":"private","draft":false}')},411:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},r.apply(this,arguments)},n=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function i(e){try{s(r.next(e))}catch(t){o(t)}}function l(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,r,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(l){o=[6,l],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},i=this&&this.__rest||function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(e);n<r.length;n++)t.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(e,r[n])&&(a[r[n]]=e[r[n]])}return a},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.verifyMeta=t.augmentXML=t.parseProjectXML=t.parseProgramXML=t.parseXMLMeta=t.getXML=void 0;var s=a(412),c=l(a(286)),d=a(11),p=l(a(458)),u=l(a(18));function m(e){try{return e.reduce((function(e,t){var a,n=t.$,o=t._;return r(r({},e),((a={})[n.name]=o&&o.trim(),a))}),{})}catch(t){return{}}}t.getXML=function(e){return n(this,void 0,void 0,(function(){var t,a,r;return o(this,(function(n){switch(n.label){case 0:return t=Date.now(),[4,(0,c.default)({url:e,method:"get"})];case 1:if(a=n.sent(),(r=(Date.now()-t)/1e3)>10&&u.default.warn("getXML took "+r.toFixed(1)+" seconds"),!a.data)throw new Error("Error retrieving XML file");return[2,a.data]}}))}))},t.parseXMLMeta=m,t.parseProgramXML=function(e){return n(this,void 0,void 0,(function(){var t,a,n,l,c,u,g,y,h,b;return o(this,(function(o){switch(o.label){case 0:return[4,(0,s.parseStringPromise)(e).catch((function(e){throw new d.ValidationError("Error parsing XML file. This likely means a broken or unclosed tag.",[e.message])}))];case 1:return t=o.sent(),a=m(t.Program.MetaData[0].Meta),n=a.projectFile,l=a.projectXSDs,c=i(a,["projectFile","projectXSDs"]),u=t.Program.Definitions[0].Collections[0].Collection.map((function(e){var t=e.$,a=e.Allow,n=e.AllowRegex;return r(r({},t),{Allow:a?Array.isArray(a)?a.map((function(e){return e.$})):[a]:void 0,AllowRegex:n?Array.isArray(n)?n.map((function(e){return e.$.pattern})):[n.pattern]:void 0})})),g=[],t.Program.Definitions[0].Groups[0].Group&&(g=Array.isArray(t.Program.Definitions[0].Groups[0].Group)?t.Program.Definitions[0].Groups[0].Group.map((function(e){return e.$})):[t.Program.Definitions[0].Groups[0].Group]),y=[],t.Program.Definitions[0].Products[0].Product&&(y=Array.isArray(t.Program.Definitions[0].Products[0].Product)?t.Program.Definitions[0].Products[0].Product.map((function(e){return e.$})):[t.Program.Definitions[0].Products[0].Product]),h=(new p.default.DOMParser).parseFromString(e),b=function(e,t,a,n){var o=e.getElementsByTagName("Hierarchy")[0],i=Array.from(o.getElementsByTagName("Product")),l=[];return i.forEach((function(e){var o=[],i=e.getAttribute("ref"),s=t.find((function(e){return e.id===i}));if(!s)throw new Error("Product not found for ref='"+i+"'");for(var c=e.parentNode,d=function(){var e=c.getAttribute("ref"),t=c.tagName,r="Group"===t?a.find((function(t){return t.id===e})):n.find((function(t){return t.id===e})),i=r.folder,l=r.name;o.push({type:t,id:e,folder:i,name:l}),c=c.parentNode};c&&c.parentNode&&"Hierarchy"!==c.tagName;)d();l.push(r(r({},s),{pathArr:o.reverse()}))})),l}(h,y,g,u),[2,Promise.resolve(new d.Program({name:t.Program.Name[0],machineName:t.Program.MachineName[0],projectXSDs:l,projectFile:n,meta:c,products:b,collections:u,groups:g}))]}}))}))},t.parseProjectXML=function(e){return n(this,void 0,void 0,(function(){var t,a,r,n;return o(this,(function(o){switch(o.label){case 0:return[4,(0,s.parseStringPromise)(e).catch((function(e){throw new d.ValidationError("Error parsing XML file. This likely means a broken or unclosed tag.",[e.message])}))];case 1:return t=o.sent(),a=t.Project,r={},a.Warehouse&&(r=m(a.Warehouse[0].Meta)),n={},a.MetaData&&(n=m(a.MetaData[0].Meta)),[2,Promise.resolve({id:r.id,name:a.Name[0],projType:a.ProjectType[0],Warehouse:r,program:r.program,meta:n,tags:d.Project.parseTagString(r.tags),xml:e,parsedProjectJSON:t,rawXML:e})]}}))}))},t.augmentXML=function(e,t){var a=(new p.default.DOMParser).parseFromString(t),r=a.getElementsByTagName("MetaData")[0];a.getElementsByTagName("Warehouse").length>0&&a.removeChild(a.getElementsByTagName("Warehouse")[0]);var n=a.createElement("Warehouse");return Object.keys(e).forEach((function(t){var r=a.createElement("Meta");r.setAttribute("name",t),r.appendChild(a.createTextNode(e[t])),n.appendChild(r)})),a.insertBefore(n,r),(new p.default.XMLSerializer).serializeToString(a)},t.verifyMeta=function(e,t,a){var r=a.products.find((function(t){return t.id===e}));if(!r)throw new Error("No project type '"+e+"' found in program '"+a.name+"'");return r.pathArr.filter((function(e){return"Collection"===e.type})).map((function(e){return{name:e.name,value:t[e.name]}}))}},428:function(e,t){},430:function(e,t){},460:function(e,t,a){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},n.apply(this,arguments)},o=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function i(e){try{s(r.next(e))}catch(t){o(t)}}function l(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},i=this&&this.__generator||function(e,t){var a,r,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(l){o=[6,l],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.adminGetUsers=t.adminUpdateUserPermissions=t.search=t.deleteProject=t.downloadZipFile=t.getWebSymbology=t.getLayerTiles=t.downloadFile=t.getUploadUrls=t.getProject=t.getProgram=t.getProgramAuth=t.getPrograms=t.validateProjectXML=t.authCheck=t.apiCall=void 0;var s,c,d,p,u,m,g,y,h,b,f,x,j,w,v,O=l(a(286)),S=a(334),k=l(a(335)),T=l(a(18)),_=a(11);t.apiCall=function(e,t,a,r,n){var o=Date.now();return(0,O.default)({url:e,method:"post",timeout:n,headers:{Authorization:t?"Bearer "+t:"Bearer NONE"},data:{query:(0,S.print)(a),variables:r}}).then((function(e){var t=e.data,n=(Date.now()-o)/1e3;return n>10&&T.default.warn("Query took "+n.toFixed(1)+" seconds. "+(0,S.print)(a).replace(/\n/g,"").slice(0,50)+" "+JSON.stringify(r)),t})).catch((function(n){throw n.response&&404===n.response.status?new Error("API Url not found: "+e):n.code&&"ECONNREFUSED"===n.code?new Error("Connection refused. Could not contact: '"+e+"'"):(T.default.error("apiCall Error",{url:e,jwt:t,query:(0,S.print)(a),variables:r,err:n}),n)}))},t.authCheck=function(e,a,n){return(0,t.apiCall)(e,a,(0,k.default)(s||(s=r(["\n            query AuthCall {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n            }\n        "],["\n            query AuthCall {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n            }\n        "]))),{},n)},t.validateProjectXML=function(e,a,n,o,i,l){return(0,t.apiCall)(e,a,(0,k.default)(c||(c=r(["\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\n                validate(xml: $xml, projType: $projType, program: $program) {\n                    result\n                    xmlErrors\n                }\n            }\n        "],["\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\n                validate(xml: $xml, projType: $projType, program: $program) {\n                    result\n                    xmlErrors\n                }\n            }\n        "]))),{xml:n,program:i,projType:o},l)},t.getPrograms=function(e,a,l){return o(this,void 0,void 0,(function(){return i(this,(function(o){return[2,(0,t.apiCall)(e,a,(0,k.default)(d||(d=r(["\n            query programs {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n                programs {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query programs {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n                programs {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{},l).then((function(e){return n(n({},e),{data:{programs:e.data.programs.map(_.Program.fromGraphQL)}})}))]}))}))},t.getProgramAuth=function(e,a,n,l){return o(this,void 0,void 0,(function(){var o,s,c;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(p||(p=r(["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{program:n},l)];case 1:return o=i.sent(),s=o.data.program,c=o.errors,[2,{data:{program:_.Program.fromGraphQL(s)},errors:c}]}}))}))},t.getProgram=function(e,a,n,l){return o(this,void 0,void 0,(function(){var o,s,c;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(u||(u=r(["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{program:n},l)];case 1:return o=i.sent(),s=o.data.program,c=o.errors,[2,{data:{program:_.Program.fromGraphQL(s)},errors:c}]}}))}))},t.getProject=function(e,a,l,s,c,d,p){return void 0===c&&(c=!1),void 0===d&&(d=!1),o(this,void 0,void 0,(function(){return i(this,(function(o){return[2,(0,t.apiCall)(e,a,(0,k.default)(m||(m=r(["\n            query getProject($id: ID!, $program: String!) {\n                project(id: $id, program: $program) {\n                    id\n                    name\n                    projType\n                    totalSize\n                    program\n                    tags\n                    createdBy\n                    updatedBy\n                    createdOn\n                    updatedOn\n                    meta\n                    ","\n                    ","\n                }\n            }\n        "],["\n            query getProject($id: ID!, $program: String!) {\n                project(id: $id, program: $program) {\n                    id\n                    name\n                    projType\n                    totalSize\n                    program\n                    tags\n                    createdBy\n                    updatedBy\n                    createdOn\n                    updatedOn\n                    meta\n                    ","\n                    ","\n                }\n            }\n        "])),c?"\n                    files {\n                        key\n                        md5\n                        size\n                        downloadUrl\n                    }":"",d?"\n                        tree {\n                            name\n                            description\n                            projectType\n                            metaStr\n                            leaves {\n                                id\n                                pid\n                                label\n                                layerId\n                                blLayerId\n                                layerType\n                                layerPath\n                                layerName\n                                nodeExists\n                                metaStr\n                                symbology\n                                transparency\n                            }\n                            branches {\n                                label\n                                collapsed\n                                bid\n                                pid\n                            }\n                            defaultView\n                            views  {\n                                id\n                                name\n                                description\n                                layers{\n                                id\n                                visible\n                                }\n                            }\n                        }\n                    ":""),{id:l,program:s},p).then((function(e){return n(n({},e),{data:{project:_.Project.fromGraphQL(e.data.project)}})}))]}))}))},t.getUploadUrls=function(e,a,n,l,s,c,d){return o(this,void 0,void 0,(function(){return i(this,(function(o){switch(o.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(g||(g=r(["\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\n                    id\n                    uploadUrls {\n                        url\n                        fields\n                        origPath\n                    }\n                }\n            }\n        "],["\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\n                    id\n                    uploadUrls {\n                        url\n                        fields\n                        origPath\n                    }\n                }\n            }\n        "]))),{id:n,files:l,projectType:s,program:c},d)];case 1:return[2,o.sent()]}}))}))},t.downloadFile=function(e,a,n,l,s,c,d){return o(this,void 0,void 0,(function(){return i(this,(function(o){switch(o.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(y||(y=r(["\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                }\n            }\n        "],["\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                }\n            }\n        "]))),{projType:n,program:l,id:s,filePath:c},d)];case 1:return[2,o.sent()]}}))}))},t.getLayerTiles=function(e,a,l,s,c,d,p){return o(this,void 0,void 0,(function(){var o,u;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(h||(h=r(["\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\n                    url\n                    indexUrl\n                    status\n                    lastStatus\n                    error\n                    rsLayer\n                    rasterStats\n                    started\n                    duration\n                    format\n                    bounds\n                    maxZoom\n                    minZoom\n                    originFile {\n                        lastModified\n                        etag\n                        size\n                        key\n                    }\n                }\n            }\n        "],["\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\n                    url\n                    indexUrl\n                    status\n                    lastStatus\n                    error\n                    rsLayer\n                    rasterStats\n                    started\n                    duration\n                    format\n                    bounds\n                    maxZoom\n                    minZoom\n                    originFile {\n                        lastModified\n                        etag\n                        size\n                        key\n                    }\n                }\n            }\n        "]))),{projType:l,program:s,id:c,layerPath:d},p)];case 1:return(o=i.sent()).data?(u=o.data.getLayerTiles,[2,{errors:o.errors,data:{getLayerTiles:n(n({},u),{started:u&&u.started&&parseInt(u.started,10),lastStatus:u&&u.lastStatus&&parseInt(u.lastStatus,10),rasterStats:u&&u.rasterStats&&JSON.parse(u.rasterStats),rsLayer:u&&u.rsLayer&&JSON.parse(u.rsLayer),originFile:u&&u.originFile&&n(n({},u.originFile),{lastModified:parseInt(u.originFile.lastModified,10)})})}}]):[2,{errors:o.errors}]}}))}))},t.getWebSymbology=function(e,a,l,s,c,d){return o(this,void 0,void 0,(function(){var o;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(b||(b=r(["\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\n                    name\n                    status\n                    legend\n                    rampType\n                    mapboxJson\n                    url\n                    error\n                }\n            }\n        "],["\n            query getWebSymbology($projType: String!, $name: String!, $isRaster: Boolean) {\n                getWebSymbology(projType: $projType, name: $name, isRaster: $isRaster) {\n                    name\n                    status\n                    legend\n                    rampType\n                    mapboxJson\n                    url\n                    error\n                }\n            }\n        "]))),{projType:l,name:s,isRaster:c},d)];case 1:return(o=i.sent()).data?[2,{errors:o.errors,data:{getWebSymbology:o.data.getWebSymbology&&n(n({},o.data.getWebSymbology),{mapboxJson:o.data.getWebSymbology.mapboxJson&&JSON.parse(o.data.getWebSymbology.mapboxJson)})}}]:[2,{errors:o.errors}]}}))}))},t.downloadZipFile=function(e,a,n,l,s,c){return o(this,void 0,void 0,(function(){return i(this,(function(o){switch(o.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(f||(f=r(["\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\n                downloadZip(program: $program, id: $id, projType: $projType) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                    pendingSince\n                }\n            }\n        "],["\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\n                downloadZip(program: $program, id: $id, projType: $projType) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                    pendingSince\n                }\n            }\n        "]))),{projType:n,program:l,id:s},c)];case 1:return[2,o.sent()]}}))}))},t.deleteProject=function(e,a,n,l,s){return o(this,void 0,void 0,(function(){return i(this,(function(o){switch(o.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(x||(x=r(["\n            mutation deleteProject($id: ID!, $program: String!) {\n                deleteProject(id: $id, program: $program)\n            }\n        "],["\n            mutation deleteProject($id: ID!, $program: String!) {\n                deleteProject(id: $id, program: $program)\n            }\n        "]))),{program:l,id:n},s)];case 1:return[2,o.sent()]}}))}))},t.search=function(e,a,l,s,c){return o(this,void 0,void 0,(function(){var o,d,p,u,m;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(j||(j=r(["\n            query searchQuery(\n                $program: String!\n                $projType: String\n                $nameStr: String\n                $metaStr: String\n                $metaArr: String\n                $tags: String\n                $noTags: Boolean\n                $limit: Int\n                $nextToken: Int\n            ) {\n                search(\n                    program: $program\n                    projType: $projType\n                    nameStr: $nameStr\n                    metaStr: $metaStr\n                    metaArr: $metaArr\n                    tags: $tags\n                    noTags: $noTags\n                    limit: $limit\n                    nextToken: $nextToken\n                ) {\n                    projects {\n                        id\n                        name\n                        projType\n                        program\n                        tags\n                        totalSize\n                        createdBy\n                        updatedBy\n                        createdOn\n                        updatedOn\n                        meta\n                        score\n                    }\n                    nextToken\n                    total\n                }\n            }\n        "],["\n            query searchQuery(\n                $program: String!\n                $projType: String\n                $nameStr: String\n                $metaStr: String\n                $metaArr: String\n                $tags: String\n                $noTags: Boolean\n                $limit: Int\n                $nextToken: Int\n            ) {\n                search(\n                    program: $program\n                    projType: $projType\n                    nameStr: $nameStr\n                    metaStr: $metaStr\n                    metaArr: $metaArr\n                    tags: $tags\n                    noTags: $noTags\n                    limit: $limit\n                    nextToken: $nextToken\n                ) {\n                    projects {\n                        id\n                        name\n                        projType\n                        program\n                        tags\n                        totalSize\n                        createdBy\n                        updatedBy\n                        createdOn\n                        updatedOn\n                        meta\n                        score\n                    }\n                    nextToken\n                    total\n                }\n            }\n        "]))),n(n({},s),{program:l}),c)];case 1:return(o=i.sent()).data?(d=o.data.search||{},p=d.nextToken,u=d.projects,m=d.total,[2,{errors:o.errors,data:{search:{projects:Array.isArray(u)?u.map(_.Project.fromGraphQL):u,nextToken:p,total:m}}}]):[2,{errors:o.errors}]}}))}))},t.adminUpdateUserPermissions=function(e,a,l,s,c,d){return o(this,void 0,void 0,(function(){var o;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(w||(w=r(["\n            mutation project($id: ID!, $program: String!, $permission: String) {\n                updateUser(id: $id, program: $program, permission: $permission) {\n                    email\n                    name\n                    picture\n                    username\n                    createdOn\n                    updatedOn\n                    role\n                }\n            }\n        "],["\n            mutation project($id: ID!, $program: String!, $permission: String) {\n                updateUser(id: $id, program: $program, permission: $permission) {\n                    email\n                    name\n                    picture\n                    username\n                    createdOn\n                    updatedOn\n                    role\n                }\n            }\n        "]))),{program:s,id:l,permission:c},d)];case 1:return(o=i.sent()).data?[2,{errors:o.errors,data:{updateUser:o.data.updateUser?n(n({},o.data.updateUser),{createdOn:parseInt(o.data.updateUser.createdOn,10),updatedOn:parseInt(o.data.updateUser.updatedOn,10)}):null}}]:[2,{errors:o.errors}]}}))}))},t.adminGetUsers=function(e,a,l,s,c,d){return o(this,void 0,void 0,(function(){var o,p,u,m;return i(this,(function(i){switch(i.label){case 0:return[4,(0,t.apiCall)(e,a,(0,k.default)(v||(v=r(["\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\n                    users {\n                        email\n                        name\n                        picture\n                        username\n                        createdOn\n                        updatedOn\n                        role\n                    }\n                    nextToken\n                }\n            }\n        "],["\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\n                    users {\n                        email\n                        name\n                        picture\n                        username\n                        createdOn\n                        updatedOn\n                        role\n                    }\n                    nextToken\n                }\n            }\n        "]))),{program:l,limit:s,nextToken:c},d)];case 1:return(o=i.sent()).data?(p=o.data.getUsers||{},u=p.nextToken,m=p.users,[2,{errors:o.errors,data:{getUsers:{users:Array.isArray(m)?m.map((function(e){return n(n({},e),{createdOn:parseInt(e.createdOn,10),updatedOn:parseInt(e.updatedOn,10)})})):m,nextToken:u}}}]):[2,{errors:o.errors}]}}))}))}},461:function(e,t,a){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o,i=n(a(335)),l=a(296),s=(0,i.default)(o||(o=r(['\n    # Check out the cheat sheet:\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\n\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n\n    type Query {\n        # Get a project and associated metadata\n        auth: AuthParams\n\n        project(id: ID!, program: String!): Project\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\n\n        program(program: String!): Program\n        programs: [Program]\n\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\n\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\n\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\n\n\n        # Request an upload start. Writes a manifest file on the upload bucket\n        # and creates upload urls for everything\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\n\n        search(\n            program: String!\n            projType: String\n            nameStr: String\n            metaStr: String\n            metaArr: String\n            tags: String\n            noTags: Boolean\n            limit: Int\n            nextToken: Int\n        ): PaginatedSearchResults\n\n        validate(xml: String!, projType: String!, program: String!): Validation\n\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\n\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\n    }\n\n    # this schema allows the following mutation:\n    type Mutation {\n        # signal a deletion of a project\n        deleteProject(id: ID!, program: String!): ID!\n        updateUser(id: ID!, program: String!, permission: String): User\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\n    }\n\n    type User {\n        email: String\n        name: String\n        picture: String\n        username: String!\n        createdOn: String\n        updatedOn: String\n        role: String\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        nextToken: String\n    }\n\n    type Validation {\n        result: Boolean\n        xmlErrors: [String]\n    }\n\n    type AuthParams {\n        loggedIn: Boolean\n        userPool: String\n        clientId: String\n        region: String\n        domain: String\n    }\n\n    interface ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n    }\n\n    type Project implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        files: [FileDownloadMeta]\n        tree: ProjectTree\n    }\n\n    type ProjectSearchResult implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        score: Float\n        files: [FileDownloadMeta]\n    }\n\n    # This is mostly just JSON that\'s stringified\n    type Product {\n        id: ID!\n        name: String!\n        folder: String\n        # Stringified JSON Array:\n        pathArr: String\n    }\n    type Group {\n        id: ID!\n        name: String!\n        folder: String\n    }\n    type NamedAllow {\n        id: ID!\n        name: String!\n        aliases: String\n        folder: String\n    }\n    type Collection {\n        id: ID!\n        name: String!\n        AllowRegex: [String]\n        Allow: [NamedAllow]\n    }\n    type Program {\n        name: String\n        machineName: String\n        projectXSDs: String\n        projectFile: String\n        meta: String\n        groups: [Group]\n        collections: [Collection]\n        products: [Product]\n        hierarchy: String\n        role: String\n    }\n\n    type FileDownloadMeta {\n        key: String!\n        md5: String!\n        size: String\n        contentType: String\n        downloadUrl: String!\n        pendingSince: String\n    }\n\n    type FileUpload {\n        id: ID!\n        uploadUrls: [UploadUrl]\n    }\n\n    type UploadUrl {\n        url: String\n        fields: String\n        origPath: String\n    }\n\n    type FileUploadMeta {\n        key: String!\n        downloadUrl: String!\n    }\n\n    # Series Connection allows us to implement pagination easily\n    type PaginatedProjects {\n        projects: [Project]\n        nextToken: String\n    }\n\n    type PaginatedSearchResults {\n        projects: [ProjectSearchResult]\n        nextToken: Int\n        total: Int\n    }\n\n    type NewProject {\n        id: ID!\n    }\n\n    """\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\n    correct icon and assign them to the right slot\n    """\n    enum ProjectTreeLayerTypes {\n        ',"\n    }\n    enum SymbologyStatus {\n        ","\n    }\n    enum TilingStatus {\n        ","\n    }\n    enum RampType {\n        ","\n    }\n\n    type ProjectTreeBranch {\n        label: String!\n        collapsed: Boolean\n        # Branch ID and parent ID\n        bid: Int\n        pid: Int\n    }\n    type ProjectTreeLeaf {\n        id: Int # This is a global ID not an id within a branch\n        pid: Int\n        label: String!\n        layerId: ID\n        blLayerId: ID\n        layerType: ProjectTreeLayerTypes!\n        layerPath: String\n        layerName: String\n        nodeExists: Boolean\n        # This is the path that helps u\n        metaStr: String\n        symbology: String\n        transparency: Int\n    }\n\n    # The project tree comes back as non-recursive list of layers.\n    # The ProjectTree class will need to parse this into a typescript \n    # Recursive type\n    type ProjectTreeViewLayer {\n        id: ID!\n        visible: Boolean\n    }\n\n    type ProjectTreeViews {\n        id: ID!\n        name: String!\n        description: String\n        layers: [ProjectTreeViewLayer]\n    }\n\n    type ProjectTree {\n        name: String\n        description: String\n        projectType: String\n        metaStr: String\n        leaves: [ProjectTreeLeaf]\n        branches: [ProjectTreeBranch]\n        defaultView: ID\n        views: [ProjectTreeViews]\n    }\n\n    type TileServiceOriginFile {\n        lastModified: String\n        etag: String\n        size: Int\n        key: String\n    }\n\n    type TileService {\n        url: String\n        indexUrl: String\n        status: TilingStatus!\n        lastStatus: String\n        error: String\n        rasterStats: String\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\n        started: String\n        duration: Float\n        format: String\n        bounds: [Float]\n        maxZoom: Int\n        minZoom: Int\n        originFile: TileServiceOriginFile\n    }\n    type Symbology {\n        name: String!\n        status: SymbologyStatus\n        legend: [[String]]\n        rampType: RampType\n        mapboxJson: String\n        url: String\n        error: String\n    }\n\n    # Just a nice convenience type for our lambda invoke methods\n    type WatcherOutput {\n        message: String\n        results: [String]\n        errors: [String]\n    }\n"],['\n    # Check out the cheat sheet:\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\n\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n\n    type Query {\n        # Get a project and associated metadata\n        auth: AuthParams\n\n        project(id: ID!, program: String!): Project\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\n\n        program(program: String!): Program\n        programs: [Program]\n\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\n\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\n\n        getWebSymbology(projType: String, name: String!, isRaster: Boolean): Symbology\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\n\n\n        # Request an upload start. Writes a manifest file on the upload bucket\n        # and creates upload urls for everything\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\n\n        search(\n            program: String!\n            projType: String\n            nameStr: String\n            metaStr: String\n            metaArr: String\n            tags: String\n            noTags: Boolean\n            limit: Int\n            nextToken: Int\n        ): PaginatedSearchResults\n\n        validate(xml: String!, projType: String!, program: String!): Validation\n\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\n\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\n    }\n\n    # this schema allows the following mutation:\n    type Mutation {\n        # signal a deletion of a project\n        deleteProject(id: ID!, program: String!): ID!\n        updateUser(id: ID!, program: String!, permission: String): User\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\n    }\n\n    type User {\n        email: String\n        name: String\n        picture: String\n        username: String!\n        createdOn: String\n        updatedOn: String\n        role: String\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        nextToken: String\n    }\n\n    type Validation {\n        result: Boolean\n        xmlErrors: [String]\n    }\n\n    type AuthParams {\n        loggedIn: Boolean\n        userPool: String\n        clientId: String\n        region: String\n        domain: String\n    }\n\n    interface ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n    }\n\n    type Project implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        files: [FileDownloadMeta]\n        tree: ProjectTree\n    }\n\n    type ProjectSearchResult implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        score: Float\n        files: [FileDownloadMeta]\n    }\n\n    # This is mostly just JSON that\'s stringified\n    type Product {\n        id: ID!\n        name: String!\n        folder: String\n        # Stringified JSON Array:\n        pathArr: String\n    }\n    type Group {\n        id: ID!\n        name: String!\n        folder: String\n    }\n    type NamedAllow {\n        id: ID!\n        name: String!\n        aliases: String\n        folder: String\n    }\n    type Collection {\n        id: ID!\n        name: String!\n        AllowRegex: [String]\n        Allow: [NamedAllow]\n    }\n    type Program {\n        name: String\n        machineName: String\n        projectXSDs: String\n        projectFile: String\n        meta: String\n        groups: [Group]\n        collections: [Collection]\n        products: [Product]\n        hierarchy: String\n        role: String\n    }\n\n    type FileDownloadMeta {\n        key: String!\n        md5: String!\n        size: String\n        contentType: String\n        downloadUrl: String!\n        pendingSince: String\n    }\n\n    type FileUpload {\n        id: ID!\n        uploadUrls: [UploadUrl]\n    }\n\n    type UploadUrl {\n        url: String\n        fields: String\n        origPath: String\n    }\n\n    type FileUploadMeta {\n        key: String!\n        downloadUrl: String!\n    }\n\n    # Series Connection allows us to implement pagination easily\n    type PaginatedProjects {\n        projects: [Project]\n        nextToken: String\n    }\n\n    type PaginatedSearchResults {\n        projects: [ProjectSearchResult]\n        nextToken: Int\n        total: Int\n    }\n\n    type NewProject {\n        id: ID!\n    }\n\n    """\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\n    correct icon and assign them to the right slot\n    """\n    enum ProjectTreeLayerTypes {\n        ',"\n    }\n    enum SymbologyStatus {\n        ","\n    }\n    enum TilingStatus {\n        ","\n    }\n    enum RampType {\n        ","\n    }\n\n    type ProjectTreeBranch {\n        label: String!\n        collapsed: Boolean\n        # Branch ID and parent ID\n        bid: Int\n        pid: Int\n    }\n    type ProjectTreeLeaf {\n        id: Int # This is a global ID not an id within a branch\n        pid: Int\n        label: String!\n        layerId: ID\n        blLayerId: ID\n        layerType: ProjectTreeLayerTypes!\n        layerPath: String\n        layerName: String\n        nodeExists: Boolean\n        # This is the path that helps u\n        metaStr: String\n        symbology: String\n        transparency: Int\n    }\n\n    # The project tree comes back as non-recursive list of layers.\n    # The ProjectTree class will need to parse this into a typescript \n    # Recursive type\n    type ProjectTreeViewLayer {\n        id: ID!\n        visible: Boolean\n    }\n\n    type ProjectTreeViews {\n        id: ID!\n        name: String!\n        description: String\n        layers: [ProjectTreeViewLayer]\n    }\n\n    type ProjectTree {\n        name: String\n        description: String\n        projectType: String\n        metaStr: String\n        leaves: [ProjectTreeLeaf]\n        branches: [ProjectTreeBranch]\n        defaultView: ID\n        views: [ProjectTreeViews]\n    }\n\n    type TileServiceOriginFile {\n        lastModified: String\n        etag: String\n        size: Int\n        key: String\n    }\n\n    type TileService {\n        url: String\n        indexUrl: String\n        status: TilingStatus!\n        lastStatus: String\n        error: String\n        rasterStats: String\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\n        started: String\n        duration: Float\n        format: String\n        bounds: [Float]\n        maxZoom: Int\n        minZoom: Int\n        originFile: TileServiceOriginFile\n    }\n    type Symbology {\n        name: String!\n        status: SymbologyStatus\n        legend: [[String]]\n        rampType: RampType\n        mapboxJson: String\n        url: String\n        error: String\n    }\n\n    # Just a nice convenience type for our lambda invoke methods\n    type WatcherOutput {\n        message: String\n        results: [String]\n        errors: [String]\n    }\n"])),Object.values(l.ProjectTreeLayerTypes).join("\n      "),Object.values(l.SymbologyStatus).join("\n      "),Object.values(l.TilingStatus).join("\n      "),Object.values(l.RampType).join("\n      "));t.default=s},462:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},r.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Program=void 0;var n=function(){function e(e){Object.assign(this,e)}return e.fromGraphQL=function(t){if(!t)return null;var a=t.meta?JSON.parse(t.meta):{};return new e(r(r({},t),{meta:a,role:t.role,products:t.products?t.products.map((function(e){return r(r({},e),{pathArr:JSON.parse(e.pathArr)})})):[]}))},e}();t.Program=n},463:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},r.apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Project=void 0;var o=n(a(464));function i(e){e.sort((function(e,t){return e.children&&!t.children?-1:!e.children&&t.children?1:e.name.toLowerCase()<t.name.toLowerCase()?-1:e.name.toLowerCase()>t.name.toLowerCase()?1:0}))}var l=function(){function e(e){var t=this;this.treeIzeFilePaths=function(){var e=[];return t.files.forEach((function(t){var a=t.key,r=a.split("/");1===r.length&&a.indexOf("\\")>-1&&(r=a.split("\\"));for(var n=e,o=function(){var e={name:r.shift(),children:[]},t=n.find((function(t){return t.name===e.name}));t&&t.children?n=t.children:(n.push(e),n=e.children),i(n)};r.length>1;)o();n.push({name:r[0],path:a})})),i(e),e},Object.assign(this,e),this.files||(this.files=[]),this.tree&&this.tree.leaves&&(this.tree.leaves=this.tree.leaves.map((function(e){return r(r({},e),{meta:e&&e.metaStr?JSON.parse(e.metaStr):{}})})))}return e.fromGraphQL=function(t){return t?new e(r(r({},t),{createdOn:parseInt(t.createdOn,10),updatedOn:parseInt(t.updatedOn,10),meta:t.meta?JSON.parse(t.meta):{},tags:t.tags?t.tags.split(","):[]})):null},e.fromDynamoDB=function(t){return new e(r(r({},t),{name:t.Name||t.name,meta:t.meta?e.parseDynamoMeta(t.meta):void 0}))},e.diff=function(e,t){var a=[],r=[];return t&&0!==t.length?e&&0!==e.length?{leftOnly:e.filter((function(e){var n=t.find((function(t){return e.key===t.key}));return n&&(n.md5===e.md5?r.push(e.key):a.push(e.key)),!n})).map((function(e){return e.key})),rightOnly:t.filter((function(t){return!e.find((function(e){return t.key===e.key}))})).map((function(e){return e.key})),different:a,same:r}:{leftOnly:[],rightOnly:t.map((function(e){return e.key})),different:[],same:[]}:{leftOnly:e.map((function(e){return e.key})),rightOnly:[],different:[],same:[]}},e.getProjectS3Keys=function(e,t,a){var r=o.default.join(e.machineName,a,t),n=r+".zip",i=o.default.join(r,e.projectFile),l=o.default.join(e.machineName,a,t+".zip.pending"),s=""+[e.machineName,a,t].join("-");return{prefix:r,zipKey:n,projFileKey:i,zipKeyPending:l,downloadFolderName:s,downloadZipFilename:s+".zip"}},e.parseDynamoMeta=function(e){var t=Object.keys(e).filter((function(e){return 0===e.indexOf("META_")})).reduce((function(t,a){var n,o=a.split("META_")[1];return r(r({},t),((n={})[o]=e[a],n))}),{});return JSON.stringify(t)},e.parseTagString=function(e){return e&&0!==e.trim().length?e.split(",").map((function(e){return e.trim()})).filter((function(e){return e.length>0&&"null"!==e&&"undefined"!==e})):[]},e.parseS3Key=function(t,a){if(a.split("/").length<3)throw new Error("Not a valid project key");var r=a.split("/"),n=r[0],o=r[1],i=r[2];if(t.machineName!==n)throw new Error("Program passed to parseS3 key "+t.machineName+" does not correspond to program in key: "+n);return e.getProjectS3Keys(t,i,o)},e.parseS3KeyDUMB=function(e){var t=e.split("/");if(t.length<3)throw new Error("Not a valid project key");var a=t[0],r=t[1],n=t[2],i=o.default.join(a,r,n);return{programMachineName:a,projType:r,id:n,zipKey:i+".zip",prefix:i}},e}();t.Project=l},465:function(e,t,a){"use strict";var r=this&&this.__extends||function(){var e=function(t,a){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])},e(t,a)};return function(t,a){if("function"!==typeof a&&null!==a)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");function r(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(r.prototype=a.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0}),t.ValidationError=void 0;var n=function(e){function t(t,a){var r=e.call(this,t)||this;return r.name=r.constructor.name,r.reasons=a,Error.captureStackTrace(r,r.constructor),r}return r(t,e),t}(Error);t.ValidationError=n},466:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TileServiceJSONClass=void 0;var r=function(e){Object.assign(this,e)};t.TileServiceJSONClass=r},532:function(e,t){},584:function(e,t,a){},587:function(e,t,a){"use strict";a.r(t);var r={};a.r(r),a.d(r,"tagColors",(function(){return se})),a.d(r,"isDev",(function(){return de})),a.d(r,"mapConfig",(function(){return pe})),a.d(r,"version",(function(){return ue})),a.d(r,"endpoints",(function(){return me})),a.d(r,"mandatoryMetaColors",(function(){return ge})),a.d(r,"redirectUrl",(function(){return ye})),a.d(r,"googleAnalytics",(function(){return he})),a.d(r,"awsAuth",(function(){return be}));var n={};a.r(n),a.d(n,"init",(function(){return Ut})),a.d(n,"currentPageView",(function(){return Mt})),a.d(n,"event",(function(){return Ft}));var o=a(0),i=a.n(o),l=a(35),s=a.n(l),c=a(17),d=a(19),p=a(698),u=a(18),m=a.n(u),g=a(699),y=a(81),h=a(1),b=a(663),f=a(118),x=a(661),j=(Object(x.a)((function(e){return{root:{display:"flex",zIndex:e.zIndex.drawer+1},text:{flexGrow:1},logo:{}}})),a(666)),w=a(665),v=a(690),O=a(689),S=a(375),k=a(132),T=a.n(k),_=a(341),z=a.n(_),P=a(340),C=a.n(P),I=a(669),L=a(342),R=a.n(L),E=a(11),N=a(25),A=a(718),D=a(717),U=a(133),M=a.n(U),F=a(670),B=a(671),$=a(668),G=a(677),W=a(678),V=a(679),H=a(680),Z=a(681),J=a(682),q=a(683),X=a(684),K=function(){return K=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},K.apply(this,arguments)},Q=Object(x.a)((function(e){return{root:{},shareIconTitle:{},shareButtons:{margin:e.spacing(1,0),"&>*":{marginRight:e.spacing(1)}},flexGrow:{flexGrow:1},dlgTitle:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,display:"flex"},closeButton:{flex:"0 0"}}})),Y=function(e){var t=e.open,a=e.shareUrl,r=e.handleClose,n=Q();return Object(h.jsxs)(D.a,K({open:t,onClose:r,"aria-labelledby":"form-dialog-title"},{children:[Object(h.jsxs)($.a,K({className:n.dlgTitle,disableTypography:!0},{children:[Object(h.jsx)(I.a,K({color:"inherit"},{children:Object(h.jsx)(T.a,{className:n.shareIconTitle},void 0)}),void 0),Object(h.jsx)(f.a,K({variant:"h4",className:n.flexGrow},{children:"Share"}),void 0),Object(h.jsx)("div",K({className:n.closeButton},{children:Object(h.jsx)(I.a,K({onClick:r,color:"inherit"},{children:Object(h.jsx)(M.a,{},void 0)}),void 0)}),void 0)]}),void 0),Object(h.jsxs)(F.a,{children:[Object(h.jsx)(B.a,{children:"Copy this link and share it using your preferred method."},void 0),Object(h.jsx)(A.a,{value:a,margin:"dense",id:"name",variant:"outlined",fullWidth:!0,inputProps:{onClick:function(e){e.preventDefault(),e.target.select()}}},void 0),Object(h.jsxs)("div",K({className:n.shareButtons},{children:[Object(h.jsx)(G.a,K({url:a},{children:Object(h.jsx)(W.a,{size:32,round:!0},void 0)}),void 0),Object(h.jsx)(V.a,K({url:a},{children:Object(h.jsx)(H.a,{size:32,round:!0},void 0)}),void 0),Object(h.jsx)(Z.a,K({url:a},{children:Object(h.jsx)(J.a,{size:32,round:!0},void 0)}),void 0),Object(h.jsx)(q.a,K({url:a,quote:"title"},{children:Object(h.jsx)(X.a,{size:32,round:!0},void 0)}),void 0)]}),void 0)]},void 0)]}),void 0)},ee=a(205),te=a(208),ae=a(207),re=a(206),ne=a(685),oe=a(686),ie=a(687),le=a(688),se={tagColors:["#418CF0","#FCB441","#E0400A","#056492","#BFBFBF","#1A3B69","#FFE382","#129CDD","#CA6B4B","#005CDB","#F3D288","#506381","#F1B9A8","#E0830A","#7893BE"]},ce=Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_DOMAIN;m.a.debug("config: ",{domain:ce});var de=!1,pe={mapBoxToken:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg"},ue="0.1.27",me={graphql:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",cdn:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_CDN},ge=[ee.a,te.a,ae.a,re.a,ne.a,oe.a,ie.a,le.a],ye=new URL("/webrave-staging".endsWith("/")?"/webrave-staging":"/webrave-staging/",window.location.origin);console.log("RedirectUrl",{redirectUrl:ye,publicUrl:"/webrave-staging"});var he="UA-60121403-11",be={Auth:{region:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_AWS_REGION_DEPLOY,userPoolId:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_AWS_USERPOOLID,userPoolWebClientId:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_AWS_USERPOOLWEBCLIENTID,mandatorySignIn:!0,oauth:{domain:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_HOSTED_DOMAIN,scope:["email","profile","openid"],redirectSignIn:ye,redirectSignOut:ye,responseType:"code"}}},fe=function(){return fe=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},fe.apply(this,arguments)},xe=Object(x.a)((function(e){var t,a,r,n;return{appBar:{zIndex:e.zIndex.drawer+1},root:{display:"flex",alignItems:"center",width:"100%",padding:e.spacing(0,1),textShadow:"3px 3px 3px rgba(0,0,0,0.7)",backgroundImage:"url(/webrave-staging/HeaderBackground.png)",backgroundRepeat:"no-repeat",backgroundPosition:"0% 50%",backgroundSize:"cover",backgroundColor:"#444444"},logo:{height:40,width:40,marginRight:e.spacing(2)},programChooser:{margin:e.spacing(0,1),color:e.palette.primary.contrastText,"& svg":{color:e.palette.primary.contrastText},"&:before":{borderColor:e.palette.primary.contrastText},"&:after":{borderColor:e.palette.primary.contrastText}},transparent:{backgroundColor:"transparent",background:"none",color:e.palette.text.primary},search:(t={position:"relative",borderRadius:e.shape.borderRadius,backgroundColor:Object(N.a)(e.palette.common.white,.15),"&:hover":{backgroundColor:Object(N.a)(e.palette.common.white,.25)},marginRight:e.spacing(2),marginLeft:0,width:"100%",flexGrow:1},t[e.breakpoints.up("sm")]={marginLeft:e.spacing(3),width:"auto"},t),searchIcon:{width:e.spacing(7),height:"100%",position:"absolute",pointerEvents:"none",display:"flex",alignItems:"center",justifyContent:"center"},inputRoot:{color:"inherit"},spacer:{flexGrow:1},inputInput:(a={padding:e.spacing(1,1,1,7),transition:e.transitions.create("width"),width:"100%"},a[e.breakpoints.up("sm")]={width:200},a),sectionDesktop:(r={display:"none"},r[e.breakpoints.up("sm")]={display:"flex",flexGrow:1},r),sectionMobile:(n={display:"flex",flexGrow:1},n[e.breakpoints.up("sm")]={display:"none"},n)}}));function je(e){return(!e.meta||!e.meta.access||"PUBLIC"!==e.meta.access)&&null===e.role}var we,ve=function(e){var t=e.title,a=e.program,r=e.programs,n=e.signOutHandler,l=e.toolbarItems,s=e.shareUrl,c=e.history,d=xe(),p=Object(o.useState)(!1),u=p[0],m=p[1],g=Object(o.useState)(null),y=g[0],b=g[1],x=function(){return b(null)},k=c&&c.location.pathname.indexOf("/admin")>-1,_=(n||r)&&Object(h.jsxs)(S.a,fe({anchorEl:y,anchorOrigin:{vertical:"top",horizontal:"right"},keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:!!y,onClose:x},{children:[r&&Object(h.jsx)(O.a,{children:Object(h.jsx)(f.a,fe({variant:"overline",onClick:function(){return c.push("/")}},{children:"Programs"}),void 0)},void 0),r&&Object(h.jsx)(v.a,{},void 0),r&&r.length>0&&r.map((function(e,t){return Object(h.jsx)(O.a,fe({disabled:a&&a.machineName===e.machineName||je(e),onClick:function(){return t=e,x(),void(c&&c.push("/"+t.machineName));var t},value:e.machineName},{children:e.name}),"prog-"+t)})),n&&Object(h.jsx)(v.a,{},void 0),n&&Object(h.jsx)(O.a,fe({onClick:n},{children:"Log Out"}),void 0)]}),void 0),P=a&&(a.role===E.WarehouseRoleEnum.Admin||a.role===E.WarehouseRoleEnum.SuperUser);return Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)(w.a,fe({position:"static",className:d.appBar},{children:Object(h.jsxs)(j.a,fe({className:d.root,disableGutters:!0},{children:[Object(h.jsx)("a",fe({href:"http://riverscapes.xyz/"},{children:Object(h.jsx)("img",{className:d.logo,src:"https://riverscapes.xyz/assets/images/RiverscapesLogo.png",alt:"logo"},void 0)}),void 0),a?Object(h.jsxs)("div",{children:[Object(h.jsx)(f.a,fe({variant:"subtitle1"},{children:a.name}),void 0),Object(h.jsx)(f.a,fe({variant:"caption"},{children:t}),void 0)]},void 0):Object(h.jsx)(f.a,fe({variant:"subtitle1"},{children:t}),void 0),Object(h.jsx)("div",{className:d.spacer},void 0),ue&&Object(h.jsxs)(f.a,fe({component:"div",className:d.text,color:"inherit",variant:"overline"},{children:["v.",ue]}),void 0),P&&Object(h.jsx)(I.a,fe({"aria-haspopup":"true",onClick:function(){c&&a&&(k?c.push("/"+a.machineName):c.push("/"+a.machineName+"/admin"))},color:"inherit"},{children:k?Object(h.jsx)(C.a,{},void 0):Object(h.jsx)(z.a,{},void 0)}),void 0),l,s&&Object(h.jsx)(I.a,fe({"aria-haspopup":"true",onClick:function(){return m(!0)},color:"inherit"},{children:Object(h.jsx)(T.a,{},void 0)}),void 0),(n||r)&&Object(h.jsx)(I.a,fe({"aria-haspopup":"true",onClick:function(e){return b(e.currentTarget)},color:"inherit"},{children:Object(h.jsx)(R.a,{},void 0)}),void 0)]}),void 0)}),void 0),_,s&&Object(h.jsx)(Y,{open:u,shareUrl:s,handleClose:function(){return m(!1)}},void 0)]},void 0)},Oe=a(719),Se=(Object(x.a)((function(e){return{root:{marginLeft:e.spacing(1)/2},tooltip:{maxWidth:220}}})),a(589)),ke=a(691),Te=a(157),_e=a.n(Te),ze=a(113),Pe=a.n(ze),Ce=function(){return Ce=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Ce.apply(this,arguments)},Ie=Object(x.a)((function(){return{root:{"& *":{cursor:"pointer"}},disabledButton:{opacity:.5}}})),Le=function(e){var t=e.title,a=e.project,r=e.pendingSince,n=e.btnProps,o=e.downloadZipFile,l=Ie(),s=Object(h.jsx)(Oe.a,Ce({title:Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)(f.a,Ce({variant:"body1"},{children:"Download Project Zip"}),void 0),Object(h.jsx)(f.a,Ce({variant:"caption",paragraph:!0},{children:"Click to download this project as a single zip file"}),void 0),Object(h.jsx)(f.a,Ce({variant:"caption",paragraph:!0},{children:"There may be a delay if the zip file needs to be built."}),void 0)]},void 0)},{children:t?Object(h.jsx)(Se.a,Ce({variant:"contained",color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),o(a)},startIcon:Object(h.jsx)(_e.a,{},void 0)},n,{children:t||"ZIP"}),void 0):Object(h.jsx)(I.a,Ce({color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),o(a)}},n,{children:Object(h.jsx)(_e.a,{},void 0)}),void 0)}),void 0);return r&&(s=Object(h.jsx)(Oe.a,Ce({title:Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)(f.a,Ce({variant:"body1"},{children:"Preparing Zip"}),void 0),Object(h.jsx)(f.a,Ce({variant:"caption",paragraph:!0},{children:"The warehouse is building your zip file for you."}),void 0),Object(h.jsxs)(f.a,Ce({variant:"caption",paragraph:!0},{children:["started ",Pe()(r,"x").fromNow()]}),void 0)]},void 0)},{children:Object(h.jsx)(Se.a,Ce({variant:"outlined",disableFocusRipple:!0,disableRipple:!0,disableTouchRipple:!0,color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation()},className:l.disabledButton,startIcon:Object(h.jsx)(ke.a,{color:n&&n.color&&"secondary"===n.color?"primary":"secondary",size:24,thickness:6},void 0)},n,{children:t||"ZIP"}),void 0)}),void 0)),Object(h.jsx)("div",Ce({className:l.root},{children:s}),void 0)},Re=function(){return Re=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Re.apply(this,arguments)},Ee=Object(x.a)((function(e){return{root:{},whBtnLogo:{height:20,width:20,marginRight:e.spacing(1)},whButton:{maxWidth:300}}})),Ne=function(e){var t=e.title,a=e.href,r=e.stay,o=Ee();return Object(h.jsxs)(Se.a,Re({className:o.whButton,target:r?void 0:"_blank",variant:"contained",href:a,onClick:function(){n.event("webrave","open_warehouse","open_warehouse")},color:"secondary",fullWidth:!0},{children:[Object(h.jsx)("img",{className:o.whBtnLogo,src:"https://riverscapes.xyz/assets/images/RiverscapesLogo.png",alt:"logo"},void 0),t]}),void 0)},Ae=(a(249),Object(x.a)((function(){return{root:{"& *":{cursor:"pointer"}},disabledButton:{opacity:.5}}})),a(378)),De=a(721),Ue=a(676),Me=(a(720),a(591)),Fe=a(693),Be=a(692),$e=(a(344),a(7)),Ge=a(204),We=((we={})[E.WarehouseRoleEnum.SuperUser]=Ge.a,we[E.WarehouseRoleEnum.Admin]=ee.a,we[E.WarehouseRoleEnum.Participant]=ie.a,we[E.WarehouseRoleEnum.Observer]=ae.a,we),Ve=function(){return Ve=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Ve.apply(this,arguments)};Object(x.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{},accessChip:Ve({},Object.keys(We).reduce((function(t,a){var r;return Ve(Ve({},t),((r={})["&.access_"+a]={color:e.palette.getContrastText(We[a][500]),background:We[a][500]},r))}),{}))}}));var He=a(695),Ze=(a(694),a(675),a(191)),Je=a.n(Ze),qe=(a(345),a(346),a(347),a(696)),Xe=a(134),Ke=a.n(Xe),Qe=a(135),Ye=a.n(Qe),et=(a(189),a(724)),tt=(Object(x.a)((function(e){return{treeItemRoot:{backgroundColor:e.palette.background.paper,"&:nth-child(odd)":{backgroundColor:e.palette.background.default}},treeItemContainer:{display:"flex"},treeItemText:{marginLeft:e.spacing(1),padding:e.spacing(1),flexGrow:1},treeItemIcon:{},treeFile:{},treeFileContent:{borderBottom:"1px solid "+e.palette.grey[100]},treeFolder:{},treeFolderContent:{},treeFolderText:{padding:e.spacing(1)},allowSelect:{"&,& *":{userSelect:"text",cursor:"auto"}}}})),Object(x.a)((function(e){return{root:{margin:0,padding:e.spacing(2)},allowSelect:{"&,& *":{userSelect:"text",cursor:"auto"}},scrollPaper:{alignItems:"baseline"},name:{maxWidth:"95%",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",marginBottom:e.spacing(1)},titlebar:{backgroundColor:"#444444",color:e.palette.primary.contrastText,display:"flex"},titlebarLeft:{flexGrow:1},header:{display:"flex"},headerLeft:{flex:"1 1 80%"},headerRight:{textAlign:"right",flex:"1 0"},flexGrow:{flexGrow:1},closeButton:{flex:"0 0",color:e.palette.grey[500]},normalIcon:{},documentIcon:{color:ee.a[500]},photoIcon:{color:ne.a[500]},TerrainIcon:{color:te.a[500]},metaDisplay:{display:"flex",flexFlow:"wrap"},title:{marginTop:e.spacing(2)},treeItemContainer:{display:"flex"},treeItemText:{marginLeft:e.spacing(1),flexGrow:1},treeItemIcon:{},treeFileContent:{borderBottom:"1px solid "+e.palette.grey[100],padding:e.spacing(1)},treeFolder:{},treeFolderContent:{padding:e.spacing(1)},metaDisplayItem:{flex:"1 1",borderRadius:e.spacing(1),backgroundColor:"#fafafa",margin:e.spacing(1,.5),border:"#1px solid #e7e7e7",padding:e.spacing(1),maxWidth:"25%",minWidth:150,"&>*":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},prodChip:{marginLeft:e.spacing(1),backgroundColor:e.palette.primary.light,color:"white"},popOver:{padding:e.spacing(2)},subHeader:{width:"100%",display:"flex"}}})),a(348)),at=a.n(tt),rt=function(){return rt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},rt.apply(this,arguments)},nt=Object(x.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}})),ot=function(e){var t=e.title,a=e.signIn,r=nt();return Object(h.jsxs)(b.a,rt({className:r.rootContainer,maxWidth:"md"},{children:[Object(h.jsx)("div",{className:r.spacer},void 0),Object(h.jsxs)(Ae.a,rt({className:r.root},{children:[Object(h.jsx)("div",rt({className:r.logoContainer},{children:Object(h.jsx)("img",{className:r.logo,src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"},void 0)}),void 0),Object(h.jsxs)(f.a,rt({paragraph:!0,variant:"body1"},{children:["Welcome to ",Object(h.jsx)("strong",{children:t},void 0),". Please click the button below to log in."]}),void 0),Object(h.jsx)(f.a,rt({paragraph:!0,variant:"body1"},{children:"If you don't have an account you will be prompted to use your Google account or create a new account using another email address."}),void 0),Object(h.jsx)(Se.a,rt({variant:"contained",onClick:a,color:"primary",fullWidth:!0,size:"large",startIcon:Object(h.jsx)(at.a,{},void 0)},{children:"Sign In"}),void 0)]}),void 0),Object(h.jsx)("div",{className:r.spacer},void 0)]}),void 0)},it=a(697),lt=a(349),st=a.n(lt),ct=function(){return ct=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},ct.apply(this,arguments)},dt=Object(x.a)((function(e){return{root:{marginLeft:e.spacing(1)},titlebar:{display:"flex",background:e.palette.error.main,color:e.palette.error.contrastText},closeButton:{},name:{paddingLeft:e.spacing(1),flexGrow:1}}})),pt=function(e){var t=e.onClose,a=e.program,r=dt();return Object(h.jsxs)(D.a,ct({onClose:t,open:!0,maxWidth:"xs",fullWidth:!0,className:r.root,classes:{}},{children:[Object(h.jsxs)($.a,ct({disableTypography:!0,className:r.titlebar},{children:[Object(h.jsx)(st.a,{color:"inherit"},void 0),Object(h.jsx)(f.a,ct({className:r.name},{children:"Access Denied"}),void 0)]}),void 0),Object(h.jsx)(F.a,ct({dividers:!0},{children:a?Object(h.jsxs)(f.a,ct({variant:"body1",component:"div",color:"inherit"},{children:["You don't have access to the program ",Object(h.jsx)("strong",{children:a.name},void 0),".","If you arrived here via URL you will be able to use the URL ","again once you have access."]}),void 0):Object(h.jsx)(f.a,ct({variant:"body1",component:"div",color:"inherit"},{children:"This URL is not valid. If you arrived here via URL you will be able to use the URL again once you have access."}),void 0)}),void 0),Object(h.jsx)(it.a,{children:Object(h.jsx)(Se.a,ct({onClick:t,color:"primary"},{children:"Back"}),void 0)},void 0)]}),void 0)},ut=a(97),mt=a.n(ut),gt=function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function i(e){try{s(r.next(e))}catch(t){o(t)}}function l(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},yt=function(e,t){var a,r,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(l){o=[6,l],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},ht=function(e,t){return"_"+e+"_"+t},bt=function(e,t){return!e||e<Date.now()-1e3*t},ft=function(e){return gt(void 0,void 0,void 0,(function(){return yt(this,(function(t){switch(t.label){case 0:return[4,mt.a.keys()];case 1:return[2,t.sent().filter((function(t){return 0===t.indexOf("_"+e+"_")}))]}}))}))},xt=function(e,t){var a=this;this.prune=function(){return gt(a,void 0,void 0,(function(){var e,t,a,r;return yt(this,(function(n){switch(n.label){case 0:return m.a.debug("["+this.ns+"]LocalForageClass PRUNE"),[4,ft(this.ns)];case 1:e=n.sent(),t=0,n.label=2;case 2:return t<e.length?(a=e[t],[4,mt.a.getItem(a)]):[3,6];case 3:return r=n.sent(),bt(null===r||void 0===r?void 0:r.ts,this.ttl)?(m.a.debug("["+this.ns+"]LocalForageClass Prune Expired. Deleting: "+a),[4,mt.a.removeItem(a)]):[3,5];case 4:n.sent(),n.label=5;case 5:return t++,[3,2];case 6:return[2]}}))}))},this.get=function(e){return gt(a,void 0,void 0,(function(){var t,a;return yt(this,(function(r){switch(r.label){case 0:return t=ht(this.ns,e),[4,mt.a.getItem(t).catch((function(e){m.a.error("LocalForageClass ERROR",e)}))];case 1:return(a=r.sent())&&a.v&&a.ts?bt(a.ts,this.ttl)?(m.a.debug("["+this.ns+"]LocalForageClass Get Expired. Deleting: "+e),[4,mt.a.removeItem(t)]):[3,3]:[3,5];case 2:return r.sent(),[2,null];case 3:return m.a.debug("["+this.ns+"]LocalForageClass HIT: "+e),[2,a.v];case 4:return[3,6];case 5:return[2,null];case 6:return[2]}}))}))},this.set=function(e,t){var r=ht(a.ns,e),n={ts:Date.now(),v:t};return mt.a.setItem(r,n).then((function(){m.a.debug("["+a.ns+"]LocalForageClass Set: "+e)}))},this.del=function(e){return m.a.debug("["+a.ns+"]LocalForageClass Deleting: "+e),mt.a.removeItem(ht(a.ns,e)).catch((function(e){})).then()},this.clear=function(){return gt(a,void 0,void 0,(function(){var e,t;return yt(this,(function(a){switch(a.label){case 0:return m.a.debug("["+this.ns+"]LocalForageClass clear"),[4,ft(this.ns)];case 1:for(e=a.sent(),t=0;t<e.length;t++)mt.a.removeItem(e[t]);return[2]}}))}))},this.ns=e,this.ttl=t},jt=a(41),wt=a.n(jt),vt=function(){return vt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},vt.apply(this,arguments)},Ot=function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function i(e){try{s(r.next(e))}catch(t){o(t)}}function l(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,l)}s((r=r.apply(e,t||[])).next())}))},St=function(e,t){var a,r,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(l){o=[6,l],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},kt=function(e,t){var a=Object(o.useState)({}),r=a[0],n=a[1],i=Object(o.useRef)();i.current=r;var l=Object(o.useCallback)((function(a,r){return Ot(void 0,void 0,void 0,(function(){var n,o,i;return St(this,(function(l){switch(l.label){case 0:if(!t)return[2,Promise.resolve()];l.label=1;case 1:return l.trys.push([1,4,,5]),[4,e.getCurrentToken()];case 2:return n=l.sent(),[4,Object(E.downloadFile)(me.graphql,n,a.projType,t.machineName,a.id,r)];case 3:o=l.sent();try{o.data&&window.open(o.data.downloadFile.downloadUrl,"_self")}catch(s){m.a.error("DOWNLOAD err",s)}return[3,5];case 4:return i=l.sent(),m.a.error("DOWNLOAD err",i),[3,5];case 5:return[2]}}))}))}),[t,e]),s=Object(o.useCallback)((function(a){if(!t)return Promise.resolve();return function r(){return e.getCurrentToken().then((function(e){return Object(E.downloadZipFile)(me.graphql,e,a.projType,t.machineName,a.id)})).then((function(e){var t;try{e.data&&!e.data.downloadZip.pendingSince?(n(wt.a.pickBy(i.current,(function(e,t){return t!==a.id}))),window.open(e.data.downloadZip.downloadUrl,"_self")):(n(vt(vt({},i.current),((t={})[a.id]=e.data?e.data.downloadZip.pendingSince:Date.now(),t))),setTimeout(r,5e3))}catch(o){m.a.error("DOWNLOAD err",o)}})).catch((function(e){m.a.error("DOWNLOAD err",e)}))}()}),[t,e]);return{pendingZips:i.current,downloadFileFn:l,downloadZipFile:s}},Tt=function(){return Tt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Tt.apply(this,arguments)},_t={loading:!1,initialized:!1},zt=function(e,t,a,r){void 0===a&&(a=!1),void 0===r&&(r=!1);var n=Object(p.f)().projectId,i=Object(o.useState)(_t),l=i[0],s=i[1],c=Object(o.useRef)(_t);c.current=l;var d=Object(o.useRef)(!1);return Object(o.useEffect)((function(){if(!n||n.length<2)s(_t);else try{if(!t||!n)return;if(n&&l.project&&n===l.project.id)return;var o=t.machineName;setTimeout((function(){d.current||l.project||s(Tt(Tt({},c.current),{loading:!0}))}),500),e.getCurrentToken().then((function(e){return Object(E.getProject)(me.graphql,e,n,o,a,r)})).then((function(e){var t;d.current=!0,m.a.debug("getProjectById::Response",e),e.data&&e.data.project&&c.current&&c.current.project&&(null===(t=c.current)||void 0===t?void 0:t.project.id)===e.data.project.id||(e.data?s({project:e.data.project,loading:!1,initialized:!0}):s({project:void 0,loading:!1,initialized:!0}))})).catch((function(e){d.current=!0,s({project:void 0,loading:!1,initialized:!0}),m.a.error("api.getProjectById error",e)}))}catch(i){return}}),[n,t,e]),l},Pt=(a(251),a(92)),Ct=Object(Pt.a)();var It=a(373),Lt=a(203),Rt=function(){return Rt=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Rt.apply(this,arguments)},Et={palette:{primary:{main:Lt.a[500]},secondary:{main:re.a[600],contrastText:"#FFFFFF"},text:{}}},Nt=Rt(Rt({},Et),{palette:Rt(Rt({},Et.palette),{type:"dark"})}),At={home:Object(It.a)(Et),homeDark:Object(It.a)(Nt)},Dt=a(211),Ut=function(){he?Dt.a.initialize(he,{titleCase:!1}):m.a.error("Google Analytics: no UA- code found")},Mt=function(){Dt.a.pageview(window.location.pathname+window.location.hash)},Ft=function(e,t,a){Dt.a.event({category:e,action:t,label:a})},Bt=function(e){var t=e.title,a=e.children,r=e.history,n=e.signOut,o=e.containerProps;return Object(h.jsx)(g.a,{theme:At.home,children:Object(h.jsx)(y.a,{containerProps:Object(c.a)({maxWidth:"md"},o),noScroll:!0,fullWidth:!0,topbar:Object(h.jsx)(ve,{history:r,title:t,signOutHandler:n,shareUrl:window.location.href}),children:Object(h.jsx)(h.Fragment,{children:a})})})},$t=function(e){var t=e.title;return Object(h.jsx)(y.b,{logoSVG:Object(h.jsx)(ke.a,{size:"7rem",thickness:7}),status:Object(h.jsx)(f.a,{variant:"h5",component:"div",children:t||"Loading..."}),containerProps:{maxWidth:"xl",style:{position:"absolute",zIndex:1e3,top:0,left:0,width:"100%",height:"100%",background:"#FFFFFF77"}}})},Gt=a(12),Wt=a(26),Vt=a(351),Ht=a(352),Zt=a(353),Jt=a(53);a(252);function qt(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=Math.max(0,Math.min(100,e));return 1-t/100}function Xt(e,t){var a=ya.zoomRange;return e||t?t?[e?e[0]:ya.zoomRange[0],Math.min(ya.zoomRange[1],Math.max(e[1],t[1]||e[1]))]:e:a}var Kt=[E.ProjectTreeLayerTypes.POINT,E.ProjectTreeLayerTypes.LINE,E.ProjectTreeLayerTypes.POLYGON,E.ProjectTreeLayerTypes.TIN,E.ProjectTreeLayerTypes.RASTER];function Qt(e,t){var a,r={minzoom:(null===t||void 0===t?void 0:t.minZoom)||0,maxzoom:24,layout:{}};if(null===t||void 0===t||null===(a=t.rsLayer)||void 0===a?void 0:a.subLayers){var n=t.rsLayer.subLayers.find((function(t){return t.id===e}));r["source-layer"]=n.path}else{var o;r["source-layer"]=null===t||void 0===t||null===(o=t.rsLayer)||void 0===o?void 0:o.id}return r}var Yt,ea={line:function(e,t,a){return Object(c.a)(Object(c.a)({},Qt(e.layerId,a)),{},{type:"line",paint:{"line-color":t[500],"line-opacity":qt(e.transparency)}})},point:function(e,t,a){return Object(c.a)(Object(c.a)({},Qt(e.layerId,a)),{},{type:"circle",paint:{"circle-stroke-opacity":1,"circle-stroke-width":2,"circle-stroke-color":qt(e.transparency),"circle-opacity":.5,"circle-radius":4,"circle-color":t[700]}})},polygon:function(e,t,a){return Object(c.a)(Object(c.a)({},Qt(e.layerId,a)),{},{type:"fill",paint:{"fill-opacity":qt(e.transparency),"fill-color":t[700]}})},outline:function(e,t,a){return Object(c.a)(Object(c.a)({},Qt(e.layerId,a)),{},{type:"line",paint:{"line-color":t[500],"line-opacity":qt(e.transparency)}})}};!function(e){e.bgLayer="BGL",e.userContent="USRLYR",e.bgSource="BGSRC",e.layerSource="SRC"}(Yt||(Yt={}));var ta=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return"".concat(Yt.userContent,"_").concat(e||"UNKNOWN","_").concat(t)},aa=function(e){return Boolean(e&&e.isStyleLoaded())},ra=function(e,t){return e.getStyle().layers.filter((function(e){var a=e.metadata;return Object(jt.isUndefined)(t)||a.mType===t})).map((function(e){return e.id}))},na=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return{mType:e,mIdx:t,mRef:a}};function oa(e,t){if(!aa(e))return e;var a=e,r=[],n=0,o=null;return t.forEach((function(e){var t,i,l,s=(t=e.leaf.layerPath,"".concat(Yt.layerSource,"_").concat(t||"UNKNOWN"));if(a.getSource(s)||(a=e.leaf.layerType===E.ProjectTreeLayerTypes.RASTER?a.addSource(s,(i=e.tiles,l=e.leaf.symbology,{type:"raster",scheme:"tms",maxzoom:i.maxZoom||20,minzoom:i.minZoom||4,tiles:["".concat(i.url).concat(l||"raster","/{z}/{x}/{y}.").concat(i.format||"png")]})):a.addSource(s,function(e){return{type:"vector",maxzoom:e.maxZoom||20,minzoom:e.minZoom||4,tiles:["".concat(e.url,"{z}/{x}/{y}.").concat(e.format||"pbf")]}}(e.tiles))),e.leaf.layerType===E.ProjectTreeLayerTypes.RASTER){var d=ta(e.leaf.layerPath);r.push(d),a.getLayer(d)||(m.a.debug('MM: Adding raster layer "'.concat(d,'" before "').concat(o,'"')),a=a.addLayer(Object(c.a)(Object(c.a)({},function(e,t,a){var r,n={type:"raster",id:t,source:a,minzoom:(null===(r=e.tiles)||void 0===r?void 0:r.minZoom)||0,maxzoom:24,layout:{},paint:{}};e.leaf.transparency&&e.leaf.transparency>0&&(n.paint["raster-opacity"]=qt(e.leaf.transparency));return n}(e,d,s)),{},{metadata:na(Yt.userContent,void 0,e.leaf.layerPath)}),o),n++,o=d)}else{var p,u=(null===(p=e.symbology)||void 0===p?void 0:p.mapboxJson)||[];if((!u||0===u.length)&&null!==e.randomColor){var g=ba[e.randomColor];switch(e.leaf.layerType){case E.ProjectTreeLayerTypes.LINE:u=[ea.line(e.leaf,g,e.tiles)];break;case E.ProjectTreeLayerTypes.POLYGON:u=[ea.polygon(e.leaf,g,null===e||void 0===e?void 0:e.tiles),ea.outline(e.leaf,g,null===e||void 0===e?void 0:e.tiles)];break;case E.ProjectTreeLayerTypes.POINT:u=[ea.line(e.leaf,g,e.tiles)]}}u.forEach((function(t,i){var l=ta(e.leaf.layerPath,i);r.push(l),a.getLayer(l)||(m.a.debug('MM: Adding vector sublayer "'.concat(l,'" before "').concat(o,'"')),n++,a=a.addLayer(Object(c.a)(Object(c.a)({},function(e,t,a,r){var n;return Object(c.a)(Object(c.a)({type:"fill",minzoom:(null===(n=e.tiles)||void 0===n?void 0:n.minZoom)||0,maxzoom:24,layout:{},paint:{}},t),{},{id:a,source:r,"source-layer":e.leaf.layerName||e.leaf.layerId})}(e,t,l,s)),{},{metadata:na(Yt.userContent,i,e.leaf.layerPath)}),o),o=l)}))}})),ra(a,Yt.userContent).forEach((function(e){r.indexOf(e)<0&&(m.a.debug("MM: Removing unused layer: ".concat(e),{validLayerIds:r}),a=a.removeLayer(e),n++)})),n>0&&(a=ia(a,t)),a}function ia(e,t){var a=e,r=ra(a).reduce((function(e,t){return Object(c.a)(Object(c.a)({},e),{},Object(Jt.a)({},t,a.getLayer(t).metadata))}),{}),n=t.map((function(e){return e.leaf.layerPath})).reverse(),o=ra(a,Yt.bgLayer);o.sort((function(e,t){return r[e].mIdx-r[t].mIdx}));var i=ra(a,Yt.userContent);i.sort((function(e,t){var a=n.indexOf(r[e].mRef)-n.indexOf(r[t].mRef);return 0!==a?a:r[e].mIdx-r[t].mIdx}));var l=[].concat(Object(Wt.a)(o),Object(Wt.a)(i));l.reverse();var s=ra(a);return s.reverse(),l.forEach((function(e,t){if(t!==s.indexOf(e)){var r=0===t?null:l[t-1];m.a.debug("MM: Move Needed ".concat(e," to before ").concat(r)),a=a.moveLayer(e,r),(s=ra(a)).reverse()}})),a}function la(e,t){if(!t.sources)return{sources:{},layers:[]};var a=t.sources||{},r=t.layers||[],n=t.glyphs,o=t.sprite,i={};return{sources:Object.keys(t.sources).reduce((function(t,r){var n="".concat(Yt.bgSource,"_").concat(e,"_").concat(r),o=a[r];return i[r]=n,Object(c.a)(Object(c.a)({},t),{},Object(Jt.a)({},n,o))}),{}),layers:r.map((function(e,t){var a="custom"!==e.type&&e.metadata||{},r=Object(c.a)(Object(c.a)({},e),{},{metadata:Object(c.a)(Object(c.a)({},a),na(Yt.bgLayer,t)),id:"".concat(Yt.bgLayer,"_").concat(t,"_").concat(e.id)});return"background"!==r.type&&"circle"!==r.type&&"custom"!==r.type&&r.source&&"string"===typeof r.type&&(r.source=i[r.source.toString()]),r})),glyphs:n,sprite:o}}var sa=a(700),ca=a(701),da=a(702),pa=[Object(c.a)({id:"SATELLITE",title:"Satellite Imagery",toolTip:"Satellite Imagery",Icon:sa.a,color:"green"},la("SAT",Vt)),Object(c.a)({id:"STREET",title:"Street Map",toolTip:"Street Map",Icon:ca.a,color:"blue"},la("ST",Ht)),Object(c.a)({id:"HILLSHADE",title:"Hillshade",toolTip:"Hillshade",Icon:da.a,color:"blue"},la("HS",Zt))],ua=Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.27",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_GOOGLE_ANALYTICS:"UA-60121403-11",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_DOMAIN;m.a.debug("config: ",{domain:ua});var ma={graphql:"".concat("https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api")},ga="https://northarrowresearchlabs.github.io/riverscapes-staging/",ya={appName:"Riverscapes Project Viewer (webRAVE)",zoomRange:[4,18],apiTimeout:2e4,defaultViewport:{zoom:8},worldBounds:[-131.044921875,22.998851594142913,-58.095703125,51.28940590271679],baseLayer:pa[0],drawerOpen:!0,init:!1,minFilterTextLength:3,maxMapLayers:5,retryDelayS:2,refreshDelayS:20},ha={version:8,name:"WebRaveStyle",sprite:"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly",glyphs:"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf"},ba=(ee.a,te.a,ae.a,re.a,ne.a,oe.a,ie.a,le.a,[ee.a,te.a,ae.a,re.a,ne.a,oe.a,ie.a,le.a]),fa=new URL("/webrave-staging".endsWith("/")?"/webrave-staging":"/webrave-staging/",window.location.origin);console.log("RedirectUrl",{redirectUrl:fa,publicUrl:"/webrave-staging"});var xa=Object(Gt.b)({key:"project",default:null}),ja=Object(Gt.b)({key:"auth",default:null}),wa=Object(Gt.b)({key:"drawerOpen",default:ya.drawerOpen}),va=Object(Gt.b)({key:"map/activeLayerIds",default:[]}),Oa=Object(Gt.e)({key:"activeTreeLeaves",get:function(e){var t=e.get,a=t(xa),r=t(va);return(null===a||void 0===a?void 0:a.tree.leaves.filter((function(e){return r.indexOf(e.id)>-1})))||[]}}),Sa=Object(Gt.e)({key:"map/activeLeavesSorted",get:function(e){return function(e){var t=Object(Wt.a)(e);return t.sort((function(e,t){return e.layerType!==t.layerType?Kt.indexOf(e.layerType)-Kt.indexOf(t.layerType):e.id-t.id})),t}((0,e.get)(Oa))}}),ka=Object(Gt.e)({key:"project/mapLayerLeaves",get:function(e){var t=(0,e.get)(xa);return t?t.tree.leaves.filter((function(e){var t=e.layerType,a=e.layerPath,r=e.nodeExists;return E.ProjectTreeLayerTileTypes.indexOf(t)>-1&&r&&a&&a.length>0})):[]}}),Ta=Object(Gt.e)({key:"project/layerPaths",get:function(e){return(0,e.get)(ka).reduce((function(e,t){return!t.layerPath||e.indexOf(t.layerPath)>-1?e:[].concat(Object(Wt.a)(e),[t.layerPath])}),[])}}),_a=Object(Gt.b)({key:"treeFilterText",default:""}),za=Object(Gt.e)({key:"projectLeafHierarchy",get:function(e){var t=(0,e.get)(xa);return t?t.tree.leaves.reduce((function(e,a){return Object(c.a)(Object(c.a)({},e),{},Object(Jt.a)({},a.id,function(e,t){for(var a=t.pid,r=[],n=[];a>-1&&r.length<e.tree.branches.length;){var o=e.tree.branches.find((function(e){return e.bid===a}));o&&r.indexOf(o.bid)<0?(r.push(o.bid),n.push(o.label.toLowerCase().trim()),a=o.pid):a=-1}return r.map((function(e,t){return[e,n[t]]}))}(t,a)))}),{}):{}}}),Pa=Object(Gt.b)({key:"tree/treeInfoPaneId",default:null}),Ca=Object(Gt.b)({key:"tree/treeInfoPaneOpen",default:!1}),Ia=Object(Gt.f)({key:"treeLeafSelectorFamily",get:function(e){return function(t){var a=(0,t.get)(xa);if(!a)throw new Error("treeLeafSelectorFamily: No project found");var r=a.tree.leaves.find((function(t){return t.id===e}));if(!r)throw new Error("treeLeafSelectorFamily: No leaf found");return r}}}),La=Object(Gt.b)({key:"tree/selectedIds",default:[]}),Ra=Object(Gt.e)({key:"tree/selectedIdsSelect",get:function(e){var t,a=(0,e.get)(La);return{branches:(t=a).filter((function(e){return e.indexOf("b-")>-1})).map((function(e){return parseInt(e.replace("b-",""),10)})),leaves:t.filter((function(e){return e.indexOf("l-")>-1})).map((function(e){return parseInt(e.replace("l-",""),10)}))}}}),Ea=Object(Gt.e)({key:"projectHiddenNodes",get:function(e){var t=e.get,a=t(xa),r={branches:[],leaves:[]};if(!a)return r;var n=t(za),o=t(_a).toLowerCase().trim();if(o.length<ya.minFilterTextLength)return r;var i=o.split(" ").filter((function(e){return e.length>0}));if(i.length<1)return r;var l=a.tree.leaves.filter((function(e){var t=n[e.id];return i.every((function(a){return e.label.toLowerCase().indexOf(a)>-1||t.find((function(e){return Object(d.a)(e,2)[1].indexOf(a)>-1}))}))})).map((function(e){return e.id})),s=Array.from(new Set(l.reduce((function(e,t){return[].concat(Object(Wt.a)(e),Object(Wt.a)(n[t].map((function(e){return Object(d.a)(e,1)[0]}))))}),[])));return r.leaves=a.tree.leaves.map((function(e){return e.id})).filter((function(e){return l.indexOf(e)<0})),r.branches=a.tree.branches.map((function(e){return e.bid})).filter((function(e){return s.indexOf(e)<0})),r}}),Na=Object(Gt.f)({key:"treeLeafStateFamily",get:function(e){return function(t){var a,r=t.get,n=r(or(e)),o=r(Ea).leaves.indexOf(e)>-1,i=r(va).indexOf(e)>-1,l=n.leaf.layerType===E.ProjectTreeLayerTypes.REPORT&&n.tileStatus===E.TilingStatus.SUCCESS&&(null===(a=n.tiles)||void 0===a?void 0:a.url)+"index.html";return{leaf:n.leaf,tilesState:n.tileStatus,treeAllowed:!0,reportUrl:l||void 0,renderable:n.renderable,hidden:o,active:i}}}}),Aa=Object(Gt.e)({key:"tree/rootBranchId",get:function(e){var t=(0,e.get)(xa),a=null===t||void 0===t?void 0:t.tree.branches.find((function(e){return-1===e.pid}));return a?a.bid:null}}),Da=Object(Gt.f)({key:"tree/branches",get:function(e){return function(t){var a=(0,t.get)(xa),r=null===a||void 0===a?void 0:a.tree.branches.find((function(t){return t.bid===e}));if(!a)throw new Error("treeBranchSelectorFamily: No project found");if(!r)throw new Error("treeBranchSelectorFamily: No branch found");return{branch:r,children:{branches:a.tree.branches.filter((function(t){return t.pid===e})).map((function(e){return e.bid})),leaves:a.tree.leaves.filter((function(t){return t.pid===e})).map((function(e){return e.id}))}}}}}),Ua=Object(Gt.f)({key:"tree/branchState",get:function(e){return function(t){var a=t.get,r=a(Ra),n=a(Da(e)),o=a(Ea),i=Boolean(a(Ba).indexOf(e)>-1),l=Boolean(r.branches.indexOf(e)>-1);return{branch:n,hidden:o.branches.indexOf(e)>-1,selected:l,collapsed:i}}}}),Ma=Object(Gt.b)({key:"tree/contextMenu",default:null}),Fa=Object(Gt.b)({key:"tree/expandedIds",default:[]}),Ba=Object(Gt.e)({key:"tree/expandedIdsSelect",get:function(e){return(0,e.get)(Fa).filter((function(e){return e.indexOf("b-")>-1})).map((function(e){return parseInt(e.replace("b-",""),10)}))}}),$a=Object(Gt.e)({key:"tree/treeAllIds",get:function(e){var t=(0,e.get)(xa);return t?[].concat(Object(Wt.a)(t.tree.branches.map((function(e){var t=e.bid;return"b-".concat(t)}))),Object(Wt.a)(t.tree.leaves.map((function(e){var t=e.id;return"l-".concat(t)})))):[]}}),Ga=a(33),Wa=a.n(Ga),Va=a(80),Ha=a(354),Za=new(a.n(Ha).a)({maxConcurrent:5}),Ja=new xt("TILES",3600);Ja.prune();var qa=Object(Gt.c)({key:"tiles/tileReq",default:0}),Xa=Object(Gt.c)({key:"tiles/tileRetries",default:0}),Ka=(Object(Gt.b)({key:"tiles/usableIds",default:[]}),Object(Gt.f)({key:"tiles/tiles",get:function(e){return function(){var t=Object(Va.a)(Wa.a.mark((function t(a){var r,n,o,i,l,s,d,p;return Wa.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if((r=a.get)(qa(e)),r(Xa(e)),n=r(ja),o=r(xa),i={status:E.TilingStatus.UNKNOWN},o&&n&&e){t.next=8;break}return t.abrupt("return",i);case 8:return l="".concat(o.projType,"/").concat(null===o||void 0===o?void 0:o.program,"/").concat(null===o||void 0===o?void 0:o.id,"/").concat(e),t.next=11,Ja.get(l);case 11:if(!(s=t.sent)){t.next=14;break}return t.abrupt("return",s);case 14:return t.prev=14,t.next=17,Za.schedule({priority:5},(function(){return n.getCurrentToken().then((function(t){return Object(E.getLayerTiles)(ma.graphql,t,o.projType,null===o||void 0===o?void 0:o.program,null===o||void 0===o?void 0:o.id,e,ya.apiTimeout)}))}));case 17:(p=t.sent)&&!p.errors&&p.data||(i.status=E.TilingStatus.FETCH_ERROR,p.errors&&p.errors.length>0&&(i.error=p.errors.map((function(e){return JSON.stringify(e)})).join(", \n"))),i=Object(c.a)(Object(c.a)({},i),null===(d=p.data)||void 0===d?void 0:d.getLayerTiles),t.next=27;break;case 22:t.prev=22,t.t0=t.catch(14),m.a.error("Tile fetch error",t.t0),i.status=E.TilingStatus.FETCH_ERROR,i.error=String(t.t0);case 27:return E.TilingStatusFinished.indexOf(i.status)>-1&&Ja.set(l,i),t.abrupt("return",i);case 29:case"end":return t.stop()}}),t,null,[[14,22]])})));return function(e){return t.apply(this,arguments)}}()}})),Qa=new xt("SYMB",21600);Qa.prune();var Ya=function(e){return e.reduce((function(e,t){if(!t.symbology)return e;var a=[t.symbology,t.layerType===E.ProjectTreeLayerTypes.RASTER];return e.find((function(e){return Object(jt.isEqual)(e,a)}))?e:[].concat(Object(Wt.a)(e),[a])}),[])},er=Object(Gt.e)({key:"symbology/uniqueSymb",get:function(e){var t=(0,e.get)(ka);return Ya(t)}}),tr=(Object(Gt.e)({key:"symbology/activeSymbologies",get:function(e){var t=(0,e.get)(Oa);return Ya(t)}}),Object(Gt.f)({key:"symbology/symbology",get:function(e){var t=Object(d.a)(e,2),a=t[0],r=t[1];return function(){var e=Object(Va.a)(Wa.a.mark((function e(t){var n,o,i,l,s,d,p,u,g,y;return Wa.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=t.get,l=i(xa),s=i(ja),l&&s&&a){e.next=5;break}return e.abrupt("return",null);case 5:return d={name:a,status:E.SymbologyStatus.UNKNOWN},p="".concat(l.projType,"/").concat(a),e.next=9,Qa.get(p);case 9:if(!(u=e.sent)){e.next=12;break}return e.abrupt("return",u);case 12:return e.next=14,Za.schedule({priority:5},(function(){return s.getCurrentToken().then((function(e){return Object(E.getWebSymbology)(ma.graphql,e,l.projType,a,r,ya.apiTimeout)})).catch((function(e){m.a.debug("symbologySelectorFamily",e)}))}));case 14:if((g=e.sent)&&!g.errors){e.next=19;break}return d.status=E.SymbologyStatus.ERROR,d.error="Error downloading symbology",e.abrupt("return",d);case 19:if((y=(null===(n=g.data)||void 0===n?void 0:n.getWebSymbology)?Object(c.a)(Object(c.a)({},null===(o=g.data)||void 0===o?void 0:o.getWebSymbology),{},{status:E.SymbologyStatus.FOUND}):d).status!==E.SymbologyStatus.FOUND){e.next=23;break}return e.next=23,Qa.set(p,y);case 23:return e.abrupt("return",y);case 24:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}})),ar=Object(Gt.b)({key:"map/assignedColors",default:[]}),rr=Object(Gt.c)({key:"map/leafRandomCol",default:null}),nr=Object(Gt.e)({key:"map/selectNextColor",get:function(e){for(var t=(0,e.get)(ar),a=0;a<ba.length;a++)if(t.indexOf(a)<0)return a;return 0}}),or=Object(Gt.f)({key:"map/layers",get:function(e){return function(t){var a=t.get,r=a(Ia(e)),n=a(Ra),o=E.ProjectTreeLayerTileTypes.indexOf(r.layerType)>-1,i=o||r.layerType===E.ProjectTreeLayerTypes.REPORT,l=a(va).indexOf(e)>-1,s={leaf:r,treeSelected:Boolean(n.leaves&&n.leaves.indexOf(e)>-1),legendActive:l,renderable:!1,tileStatus:E.TilingStatus.NOT_APPLICABLE,symbologyStatus:E.SymbologyStatus.NOT_APPLICABLE};if(i){var c=a(Object(Gt.d)(Ka(r.layerPath)));if(o){var d,p=a(Object(Gt.d)(tr([r.symbology,r.layerType===E.ProjectTreeLayerTypes.RASTER])));s.symbologyStatus="hasValue"!==p.state?E.SymbologyStatus.FETCHING:(null===(d=p.contents)||void 0===d?void 0:d.status)||E.SymbologyStatus.NOT_APPLICABLE,"hasValue"===p.state&&(s.symbology=p.contents)}s.tileStatus="hasValue"!==c.state?E.TilingStatus.FETCHING:c.contents.status,r.layerType===E.ProjectTreeLayerTypes.FILE&&(s.tileStatus,E.TilingStatus.SUCCESS),s.renderable=s.tileStatus===E.TilingStatus.SUCCESS&&s.symbologyStatus!==E.SymbologyStatus.FETCHING,"hasValue"===c.state&&(s.tiles=c.contents)}return s}}}),ir=Object(Gt.e)({key:"map/viewProjLeafIds",get:function(e){var t=(0,e.get)(xa);return t&&t.tree.views?t.tree.views.reduce((function(e,a){var r=a.layers.reduce((function(e,a){var r=t.tree.leaves.find((function(e){var t=e.blLayerId;return t&&t===a.id}));return r?[].concat(Object(Wt.a)(e),[r.id]):e}),[]);return Object(c.a)(Object(c.a)({},e),{},Object(Jt.a)({},a.id,r))}),{}):{}}}),lr=Object(Gt.b)({key:"map/baseLayer",default:ya.baseLayer}),sr=Object(Gt.b)({key:"map/viewport",default:ya.defaultViewport}),cr=Object(Gt.b)({key:"map/mapError",default:""}),dr=Object(Gt.b)({key:"map/mapLoaded",default:!1}),pr=Object(Gt.e)({key:"map/renderableMapLayers",get:function(e){var t=e.get,a=t(Sa).map((function(e){var a=e.id;return t(or(a))})).filter((function(e){return e.tileStatus===E.TilingStatus.SUCCESS})),r=a.map((function(e){var a=e.leaf.id;return t(rr(a))}));return a.reduce((function(e,t,a){var n=t.leaf.id,o=Object(c.a)(Object(c.a)({},t),{},{randomColor:r[a],lid:n});return[].concat(Object(Wt.a)(e),[o])}),[])}}),ur=Object(Gt.b)({key:"map/view",default:null}),mr=Object(Gt.b)({key:"map/bounds",default:null}),gr=Object(Gt.b)({key:"map/zoomBounds",default:[ya.zoomRange[0],ya.zoomRange[1]]}),yr=Object(Gt.e)({key:"bounds",get:function(e){var t=e.get;return{zoom:t(gr),bounds:t(mr)||ya.worldBounds}}}),hr=function(){var e=Object(Gt.h)(ur),t=Object(d.a)(e,2),a=t[0],r=t[1],o=Object(Gt.i)(ir),i=Object(Gt.i)(xa),l=Object(Gt.k)(va),s=function(e){null!==e&&a!==e&&o[e]&&(n.event("webrave","set_view"),r(e),l(o[e]))};return{setView:s,resetView:function(){n.event("webrave","set_default_view"),i&&i.tree.defaultView&&s(i.tree.defaultView)}}},br=function(e,t){var a=Object(Gt.h)(xa),r=Object(d.a)(a,2),n=r[0],i=r[1],l=Object(Gt.k)(va),s=Object(Gt.k)(ja),c=Object(Gt.i)(er),p=Object(Gt.i)(Ta),u=Object(Gt.k)(Fa),m=hr().resetView;Object(o.useEffect)((function(){return i(t||null)}),[t]),Object(o.useEffect)((function(){return s(e||null)}),[e]);var g=Object(Gt.g)((function(e){var t=e.snapshot;return function(e){t.getLoadable(Ka(e))}})),y=Object(Gt.g)((function(e){var t=e.snapshot;return function(e){t.getLoadable(tr(e))}}));Object(o.useEffect)((function(){n?(l([]),m(),u(n.tree.branches.filter((function(e){return!e.collapsed})).map((function(e){return"b-".concat(e.bid)})))):u([])}),[n]),Object(o.useEffect)((function(){c.map(y)}),[c]),Object(o.useEffect)((function(){p.map(g)}),[p])},fr=Object(x.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},buttonContainer:{textAlign:"center"},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}})),xr=function(){var e=fr();return Object(h.jsxs)(b.a,{className:e.rootContainer,maxWidth:"sm",children:[Object(h.jsx)("div",{className:e.spacer}),Object(h.jsxs)(Ae.a,{className:e.root,children:[Object(h.jsx)("div",{className:e.logoContainer,children:Object(h.jsx)("img",{className:e.logo,src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"})}),Object(h.jsx)(f.a,{paragraph:!0,variant:"body1",children:"The project you are looking for could not be found."}),Object(h.jsxs)(f.a,{paragraph:!0,variant:"body1",children:["Please go back to the ",Object(h.jsx)(He.a,{href:"".concat(ga,"/#/"),children:"Riverscapes Data Warehouse"})," and choose a new project"]}),Object(h.jsx)("div",{className:e.buttonContainer,children:Object(h.jsx)(Ne,{title:"Warehouse",href:"".concat(ga,"/#/"),stay:!0})})]}),Object(h.jsx)("div",{className:e.spacer})]})},jr=a(376),wr=Object(x.a)((function(){return{root:{height:"100%",position:"relative"},splitPane:{},resizer:{background:"#000",opacity:.2,zIndex:1,boxSizing:"border-box",backgroundClip:"padding-box","&:hover":{transition:"all 2s ease"},"&.horizontal":{height:11,margin:"-5px 0",borderTop:"5px solid rgba(255, 255, 255, 0)",borderBottom:"5px solid rgba(255, 255, 255, 0)",cursor:"row-resize",width:"100%","&:hover":{borderTop:"5px solid rgba(0, 0, 0, 0.5)",borderBottom:"5px solid rgba(0, 0, 0, 0.5)"}},"&.vertical":{width:11,margin:"0 -5px",borderLeft:"5px solid rgba(255, 255, 255, 0)",borderRight:"5px solid rgba(255, 255, 255, 0)",cursor:"col-resize",height:"100%","&:hover":{borderLeft:"5px solid rgba(0, 0, 0, 0.5)",borderRight:"5px solid rgba(0, 0, 0, 0.5)"}},"&.disabled":{cursor:"not-allowed","&:hover":{borderColor:"transparent"}}}}})),vr=function(e){var t=e.open,a=e.child1,r=e.child2,n=e.split,o=e.primary,i=e.defaultSize,l=e.minSize,s=e.maxSize,c=wr();return t?Object(h.jsx)("div",{className:c.root,children:Object(h.jsxs)(jr.a,{className:c.splitPane,resizerClassName:c.resizer,split:n,primary:o,defaultSize:i,minSize:l,maxSize:s,pane1Style:{overflow:"hidden"},pane2Style:{overflow:"hidden"},children:[a,r]})}):Object(h.jsx)("div",{className:c.root,children:o&&"first"!==o?r:a})},Or=a(715),Sr=a(703),kr=Object(x.a)((function(e){return{root:{height:"100%",display:"flex",flexDirection:"column",overflow:"hidden"},appBar:{flex:"0 0"},tabs:{},tabContents:{position:"relative",overflow:"hidden",flexGrow:1},closeButton:{zIndex:1e3,background:e.palette.secondary.main,color:e.palette.secondary.contrastText,position:"absolute",top:0,right:0}}})),Tr=function(e){var t=e.tabs,a=kr(),r=Object(o.useState)(0),n=Object(d.a)(r,2),i=n[0],l=n[1];return Object(h.jsxs)("div",{className:a.root,children:[Object(h.jsx)(Or.a,{value:i,className:a.tabs,onChange:function(e,t){l(t)},indicatorColor:"primary",textColor:"primary",variant:"fullWidth","aria-label":"full width tabs example",children:t.map((function(e,t){return Object(h.jsx)(Sr.a,{label:e.label,value:t},"tab-".concat(t))}))}),t.map((function(e,t){var r=e.value;return Object(h.jsx)("div",{className:a.tabContents,style:{display:t===i?"block":"none"},children:r},"tab-".concat(t))}))]})},_r=function(){var e=Object(Gt.h)(ur),t=Object(d.a)(e,2),a=t[0],r=t[1],o=Object(Gt.h)(va),i=Object(d.a)(o,2),l=i[0],s=i[1],c=Object(Gt.h)(cr),p=Object(d.a)(c,2),u=p[0],m=p[1],g=function(e){n.event("webrave","remove_layer"),u&&m(""),null!==a&&r(null),s(l.filter((function(t){return t!==e})))},y=function(e){if(n.event("webrave","add_layer"),l.length===ya.maxMapLayers)return n.event("error","too_many_layers"),void m("Only ".concat(ya.maxMapLayers," layers are allowed at a time."));u&&m(""),null!==a&&r(null),s(Array.from(new Set([].concat(Object(Wt.a)(l),[e]))))};return{removeLayer:g,addLayer:y,toggleLayer:function(e){l.indexOf(e)>-1?g(e):y(e)}}},zr=a(355),Pr=Object(x.a)((function(){return{normal:{fontStyle:"italic",opacity:.8},highlighted:{fontWeight:"bold"}}})),Cr=function(e){var t=e.text,a=e.query,r=Pr();if(!a||0===a.length)return Object(h.jsx)("span",{children:t});var n=a.split(" ").map((function(e){return e.trim()})).filter((function(e){return e&&e.length>0})).join(" "),o=Object(zr.a)({text:t,query:n});return Object(h.jsx)("span",{children:o.map((function(e,t){return Object(h.jsx)("span",{className:e.match?r.highlighted:r.normal,children:e.text},"textMatch-".concat(t))}))})},Ir=a(32),Lr=a.n(Ir),Rr=Lr()(Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"5.5",cy:"5.5",r:"2.5"},void 0),Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"5.5",cy:"18.5",r:"2.5"},void 0),Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"12",cy:"12",r:"2.5"},void 0),Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"18.5",cy:"10",r:"2.5"},void 0),Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"17.5",cy:"16.5",r:"2.5"},void 0)]},void 0),"Multidot"),Er=Lr()(Object(h.jsx)(i.a.Fragment,{children:Object(h.jsx)("path",{d:" M 5.932 4.519 C 5.976 4.353 6 4.179 6 4 C 6 2.896 5.104 2 4 2 C 2.896 2 2 2.896 2 4 L 2 4 L 2 4 L 2 4 L 2 4 C 2 4.74 2.402 5.386 3 5.732 L 3 18.268 C 2.402 18.614 2 19.26 2 20 L 2 20 L 2 20 L 2 20 L 2 20 C 2 21.104 2.896 22 4 22 C 4.74 22 5.386 21.598 5.732 21 L 18.268 21 L 18.268 21 C 18.614 21.598 19.26 22 20 22 C 21.104 22 22 21.104 22 20 C 22 19.26 21.598 18.614 21 18.268 L 21 9.732 L 21 9.732 C 21.598 9.386 22 8.74 22 8 C 22 6.896 21.104 6 20 6 C 18.937 6 18.067 6.831 18.004 7.878 L 13.1 10.33 C 12.784 10.121 12.406 10 12 10 C 11.822 10 11.65 10.023 11.486 10.067 L 5.932 4.519 Z  M 5 18.268 C 5.303 18.444 5.556 18.697 5.732 19 L 18.268 19 C 18.444 18.697 18.697 18.444 19 18.268 L 19 9.732 C 18.966 9.712 18.933 9.692 18.9 9.67 L 13.996 12.122 C 13.933 13.169 13.063 14 12 14 C 10.896 14 10 13.104 10 12 L 10 12 C 10 11.822 10.023 11.649 10.067 11.485 L 5 6.41 L 5 18.268 Z ",fillRule:"evenodd"},void 0)},void 0),"Polygon"),Nr=Lr()(Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"4",cy:"13",r:"2"},void 0),Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"12",cy:"9",r:"2"},void 0),Object(h.jsx)("circle",{vectorEffect:"non-scaling-stroke",cx:"20",cy:"13",r:"2"},void 0),Object(h.jsx)("path",{d:" M 4.45 13.89 L 3.55 14.34 L 2.66 12.55 L 3.55 12.11 L 12 7.88 L 20.45 12.11 L 21.34 12.55 L 20.45 14.34 L 19.55 13.89 L 12 10.12 L 4.45 13.89 Z "},void 0)]},void 0),"Polyline"),Ar=(Lr()(Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)("path",{d:"M22,2l0,20l-20,0l0,-20l20,0Zm-2,2l-16,0l0,16l16,0l0,-16Z"},void 0),Object(h.jsx)("rect",{x:"5",y:"5",width:"4",height:"4"},void 0),Object(h.jsx)("rect",{x:"15",y:"5",width:"4",height:"4"},void 0),Object(h.jsx)("rect",{x:"5",y:"15",width:"4",height:"4"},void 0),Object(h.jsx)("rect",{x:"10",y:"10",width:"1",height:"5"},void 0),Object(h.jsx)("rect",{x:"11",y:"10",width:"6",height:"2"},void 0),Object(h.jsx)("rect",{x:"11",y:"12",width:"2",height:"2"},void 0),Object(h.jsx)("rect",{x:"13",y:"7",width:"1",height:"2"},void 0),Object(h.jsx)("rect",{x:"14",y:"9",width:"1",height:"1"},void 0),Object(h.jsx)("rect",{x:"8",y:"10",width:"1",height:"4"},void 0),Object(h.jsx)("rect",{x:"7",y:"11",width:"1",height:"3"},void 0),Object(h.jsx)("rect",{x:"9",y:"11",width:"1",height:"1"},void 0),Object(h.jsx)("rect",{x:"10",y:"6",width:"2",height:"3"},void 0),Object(h.jsx)("rect",{x:"12",y:"7",width:"1",height:"1"},void 0),Object(h.jsx)("rect",{x:"15",y:"14",width:"2",height:"4"},void 0),Object(h.jsx)("rect",{x:"14",y:"14",width:"1",height:"1"},void 0),Object(h.jsx)("rect",{x:"17",y:"15",width:"2",height:"2"},void 0),Object(h.jsx)("rect",{x:"11",y:"16",width:"1",height:"3"},void 0),Object(h.jsx)("rect",{x:"12",y:"15",width:"2",height:"2"},void 0),Object(h.jsx)("rect",{x:"10",y:"18",width:"1",height:"1"},void 0)]},void 0),"QRCode"),function(){return Ar=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Ar.apply(this,arguments)}),Dr=Lr()(Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsxs)("g",{children:[Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,-1.77636e-15,3.97768)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,0,11.9777)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,8,4)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,8,12)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,4,-0.0223232)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,4,7.97768)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,12,0)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0),Object(h.jsx)("g",Ar({transform:"matrix(1,0,0,1,12,8)"},{children:Object(h.jsx)("rect",{x:"4",y:"4.022",width:"4",height:"3.978"},void 0)}),void 0)]},void 0),Object(h.jsxs)("g",Ar({id:"Raster"},{children:[Object(h.jsx)("path",{d:"M21,5.432C21,4.09 19.91,3 18.568,3L5.432,3C4.09,3 3,4.09 3,5.432L3,18.568C3,19.91 4.09,21 5.432,21L18.568,21C19.91,21 21,19.91 21,18.568L21,5.432Z",style:{fillOpacity:0}},void 0),Object(h.jsx)("path",{d:"M22,5.432C22,3.538 20.462,2 18.568,2L5.432,2C3.538,2 2,3.538 2,5.432L2,18.568C2,20.462 3.538,22 5.432,22L18.568,22C20.462,22 22,20.462 22,18.568L22,5.432ZM20,5.432L20,18.568C20,19.358 19.358,20 18.568,20C18.568,20 5.432,20 5.432,20C4.642,20 4,19.358 4,18.568C4,18.568 4,5.432 4,5.432C4,4.642 4.642,4 5.432,4C5.432,4 18.568,4 18.568,4C19.358,4 20,4.642 20,5.432Z"},void 0)]}),void 0)]},void 0),"Multidot"),Ur=a(356),Mr=a.n(Ur),Fr=function(){return Fr=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},Fr.apply(this,arguments)},Br=Object(x.a)((function(){return{root:{}}})),$r=function(e){var t=e.layerType,a=e.iconProps,r=e.className,n=Br(),o=Rr;switch(t){case E.ProjectTreeLayerTypes.POINT:o=Rr;break;case E.ProjectTreeLayerTypes.LINE:o=Nr;break;case E.ProjectTreeLayerTypes.POLYGON:o=Er;break;case E.ProjectTreeLayerTypes.RASTER:o=Dr;break;case E.ProjectTreeLayerTypes.FILE:o=Je.a;break;case E.ProjectTreeLayerTypes.REPORT:o=Mr.a}return Object(h.jsx)(o,Fr({className:r||n.root},a),void 0)},Gr=Object(x.a)((function(e){return{leaf:{cursor:"context-menu",marginLeft:e.spacing(2)},active:{fontWeight:"bold"},treeLeafLabel:{display:"flex"},innerLabel:{flexGrow:0},spacer:{flexGrow:1},metaIcon:{margin:e.spacing(.25),opacity:.2,fontSize:e.spacing(2),lineHeight:"1rem"},loadingSpinner:{color:e.palette.text.secondary},tileStatus:{flexGrow:0,fontStyle:"italic"},leafQUEUED:{color:"#999999",fontStyle:"italic"},leafNO_GEOMETRIES:{color:"#666666"},leafCREATING:{color:"orange"},leafTILING_ERROR:{color:"red",fontStyle:"italic"},leafTIMEOUT:{color:"#999999",fontStyle:"italic"},leafFETCH_ERROR:{color:"red",fontStyle:"italic"},leafNOT_FOUND:{color:"red",fontStyle:"italic"},leafINDEX_NOT_FOUND:{color:"red",fontStyle:"italic"},leafLAYER_NOT_FOUND:{color:"red",fontStyle:"italic"},leafUNKNOWN:{color:e.palette.text.secondary,fontStyle:"italic"},leafFETCHING:{color:e.palette.text.secondary,fontStyle:"italic"},leafSUCCESS:{}}})),Wr=function(e){var t=e.id,a=e.layerType,r=e.label,n=e.active,o=e.hidden,i=e.searchText,l=e.tilesState,s=e.handleContext,c=e.handleClick,d=e.handleDoubleClick,p=Gr(),u=null;if(E.ProjectTreeLayerTileTypes.indexOf(a)>-1||a===E.ProjectTreeLayerTypes.REPORT)switch(l){case E.TilingStatus.SUCCESS:break;case E.TilingStatus.QUEUED:u="Queued...";break;case E.TilingStatus.CREATING:u="Building...";break;case E.TilingStatus.TILING_ERROR:u="Tile Error";break;case E.TilingStatus.TIMEOUT:u="Timeout";break;case E.TilingStatus.INDEX_NOT_FOUND:u="Index Error";break;case E.TilingStatus.NO_GEOMETRIES:u="Empty";break;case E.TilingStatus.LAYER_NOT_FOUND:u="Layer Missing";break;case E.TilingStatus.FETCH_ERROR:u="Fetch Error";break;case E.TilingStatus.UNKNOWN:case E.TilingStatus.FETCHING:u=Object(h.jsx)(ke.a,{className:p.loadingSpinner,color:"inherit",thickness:3,size:15})}return Object(h.jsx)(et.a,{nodeId:"l-".concat(t),className:Object($e.a)(p.leaf,l&&p["leaf".concat(l)]),hidden:o,onClick:function(){return c(t)},onDoubleClick:function(){return d(t)},label:Object(h.jsxs)("div",{className:p.treeLeafLabel,children:[Object(h.jsx)(f.a,{variant:"body2",color:"inherit",className:Object($e.a)(p.innerLabel,n&&p.active),children:Object(h.jsx)(Cr,{text:r,query:i})}),Object(h.jsx)("div",{className:p.spacer}),u&&Object(h.jsx)(f.a,{variant:"caption",color:"inherit",className:Object($e.a)(p.innerLabel,n&&p.active),children:u})]}),onContextMenu:function(e){e.preventDefault(),s(t,e.clientX-2,e.clientY-4)},icon:Object(h.jsx)($r,{layerType:a})})},Vr=Object(x.a)((function(e){return{branch:{marginTop:e.spacing(.5)},iconContainer:{width:e.spacing(4)},label:{}}})),Hr=function(e){var t=e.id,a=e.hidden,r=e.label,n=e.searchText,o=e.children,i=Vr();return Object(h.jsx)(et.a,{nodeId:"b-".concat(t),className:Object($e.a)(i.branch),classes:{label:i.label,iconContainer:i.iconContainer},onDoubleClick:function(e){e.preventDefault(),e.stopPropagation()},onContextMenu:function(e){e.preventDefault(),e.stopPropagation()},hidden:a,label:Object(h.jsx)(f.a,{variant:"body1",children:Object(h.jsx)(Cr,{text:r,query:n})}),children:o})},Zr=a(704),Jr=a(359),qr=a.n(Jr),Xr=a(358),Kr=a.n(Xr),Qr=a(357),Yr=a.n(Qr),en=Object(x.a)((function(e){return{container:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},folderIcon:{color:e.palette.secondary.main},tree:{flexGrow:1,overflow:"scroll",paddingBottom:e.spacing(5)},searchBox:{flexGrow:0,padding:e.spacing(.5)},searchBoxInput:{padding:e.spacing(.75,.5)}}})),tn=function(e){var t=e.lyrInfoOpen,a=e.setSearchText,r=e.expanded,n=e.ctxMenu,o=e.lyrInfo,i=e.selected,l=e.setExpanded,s=e.setSelected,c=e.children,d=en(),p=Object(jt.debounce)((function(e){return a(e)}),100);return Object(h.jsx)(vr,{open:t,split:"horizontal",primary:"first",defaultSize:"60%",maxSize:"80%",minSize:"30%",child1:Object(h.jsxs)("div",{className:d.container,children:[Object(h.jsx)(A.a,{fullWidth:!0,className:d.searchBox,placeholder:"Filter Project Layers...",variant:"outlined",onChange:function(e){p(e.target.value.toLowerCase().trim())},InputProps:{classes:{input:d.searchBoxInput},startAdornment:Object(h.jsx)(Zr.a,{position:"start",children:Object(h.jsx)(Yr.a,{})})}}),Object(h.jsx)(qe.a,{className:d.tree,defaultCollapseIcon:Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(Ke.a,{}),Object(h.jsx)(Kr.a,{className:d.folderIcon})]}),defaultExpandIcon:Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(Ye.a,{}),Object(h.jsx)(qr.a,{className:d.folderIcon})]}),onNodeToggle:function(e,t){l(t)},onNodeSelect:function(e,t){s(Array.isArray(t)?t:[t])},selected:i,expanded:r,children:c}),n]}),child2:o||Object(h.jsx)("div",{})})},an=Object(x.a)((function(e){return{root:{},item:{},error:{color:e.palette.error.main}}})),rn=function(e){var t=e.open,a=e.position,r=e.onClose,n=e.menuItems,o=an();return Object(h.jsx)(S.a,{keepMounted:!0,open:t,onClose:r,anchorReference:"anchorPosition",anchorPosition:a,className:o.root,children:n.map((function(e,t){var a=e.label,r=e.handleClick,n=e.disabled,i=e.error;return Object(h.jsx)(O.a,{onClick:r,disabled:n,className:Object($e.a)(o.item,i&&o.error),children:a},"ctxMenuIt-".concat(t))}))})},nn=function(e){var t,a=e.ctxState,r=e.onClose,n=e.downloadFile,o=Object(Gt.i)(or(a.leafId)),i=Object(Gt.k)(Pa),l=Object(Gt.k)(Ca),s=_r(),c=s.addLayer,d=s.removeLayer,p=[];o.leaf.layerType===E.ProjectTreeLayerTypes.REPORT?o.tileStatus===E.TilingStatus.FETCHING||o.tileStatus===E.TilingStatus.QUEUED?p.push({label:"Report queued for upload...",disabled:!0}):p.push({label:"Open Report",disabled:!((null===(t=o.tiles)||void 0===t?void 0:t.url)&&o.tileStatus===E.TilingStatus.SUCCESS),handleClick:function(){var e,t=window.open((null===(e=o.tiles)||void 0===e?void 0:e.url)+"index.html","_blank","noopener,noreferrer");t&&(t.opener=null),r()}}):o.leaf.layerType===E.ProjectTreeLayerTypes.FILE?p.push({label:"Download file",handleClick:function(){o.leaf.layerPath&&n(o.leaf.layerPath),r()}}):o.tileStatus===E.TilingStatus.FETCHING||o.symbologyStatus===E.SymbologyStatus.FETCHING?p.push({label:"Loading tile data...",disabled:!0}):(o.tileStatus===E.TilingStatus.SUCCESS?o.legendActive?p.push({label:"Remove from map",handleClick:function(){d(o.leaf.id),r()}}):!o.legendActive&&o.renderable&&p.push({label:"Add to map",handleClick:function(){c(o.leaf.id),r()}}):o.tileStatus===E.TilingStatus.QUEUED?p.push({label:"Queued for tiling...",disabled:!0}):o.tileStatus===E.TilingStatus.NOT_APPLICABLE?p.push({label:"Tiling is not applicable to this layer",disabled:!0}):o.tileStatus===E.TilingStatus.NO_GEOMETRIES?p.push({label:"No Geometries were found",disabled:!0}):o.tileStatus===E.TilingStatus.CREATING?p.push({label:"Currently building tiles...",disabled:!0}):o.tileStatus===E.TilingStatus.TILING_ERROR?p.push({label:"Tiles did not build",disabled:!0,error:!0}):o.tileStatus===E.TilingStatus.TIMEOUT?p.push({label:"Tiling timed out",disabled:!0,error:!0}):o.tileStatus===E.TilingStatus.INDEX_NOT_FOUND?p.push({label:"Error fetching tile info",disabled:!0,error:!0}):o.tileStatus===E.TilingStatus.LAYER_NOT_FOUND?p.push({label:"The original GIS layer is missing",disabled:!0,error:!0}):o.tileStatus===E.TilingStatus.FETCH_ERROR&&p.push({label:"Error fetching tile info",disabled:!0,error:!0}),p.push({label:"Layer Information",handleClick:function(){i(a.leafId),l(!0),r()}}));return Object(h.jsx)(rn,{open:Boolean(a),position:a.position,onClose:r,menuItems:p})},on=a(706),ln=a(707),sn=a(709),cn=a(705),dn=a(708),pn=a(55),un=Object(x.a)((function(e){return{root:{padding:e.spacing(1)},table:{},section:{marginBottom:e.spacing(3)},sectionHeader:{borderBottom:"1px solid"},metaKey:{fontWeight:"bold"},metaValue:{color:e.palette.text.secondary}}})),mn={datecreated:function(e){var t=pn.dates.HTML5InputToTimestamp(e);return t>0?"".concat(pn.dates.formatDate(t,"lll")," (").concat(pn.dates.formatDateAgo(t),")"):"unknown"}},gn=function(e,t){var a=e.toLowerCase();return Object.keys(mn).indexOf(a)>-1?mn[a](t):t},yn=function(e){var t=e.title,a=e.meta,r=un();return 0===Object.keys(a).length?null:Object(h.jsxs)("div",{className:r.section,children:[Object(h.jsx)(f.a,{variant:"subtitle1",className:r.sectionHeader,children:t}),Object(h.jsx)(cn.a,{children:Object(h.jsx)(on.a,{className:r.table,size:"small","aria-label":"a dense table",children:Object(h.jsx)(ln.a,{children:Object.keys(a).map((function(e){return Object(h.jsxs)(dn.a,{children:[Object(h.jsx)(sn.a,{component:"th",scope:"row",className:r.metaKey,children:e}),Object(h.jsx)(sn.a,{align:"right",className:r.metaValue,children:gn(e,a[e])})]},e)}))})})})]})},hn=["_rs_lyr_origin_url"],bn=Object(x.a)((function(e){return{root:{padding:e.spacing(1)},minimal:{},whNote:{padding:e.spacing(2,1)}}}));var fn=function(e){var t=e.leaf,a=e.minimal,r=bn(),n=t.meta||{},o=function(e){var t=Object.keys(e).filter((function(e){return hn.indexOf(e)<0})),a=function(a){return t.filter((function(e){return 0===e.indexOf(a)})).reduce((function(t,r){return Object(c.a)(Object(c.a)({},t),{},Object(Jt.a)({},r.replace(a,""),e[r]))}),{})};return{upstreamWarehouse:a("_rs_wh_"),upstreamProject:a("_rs_prj_"),upstreamLayer:a("_rs_lyr_"),Layer:t.filter((function(e){return 0!==e.indexOf("_rs")})).reduce((function(t,a){return Object(c.a)(Object(c.a)({},t),{},Object(Jt.a)({},a,e[a]))}),{})}}(n);return Object(h.jsxs)(Ae.a,{className:a?r.minimal:r.root,children:[Object.keys(o.Layer).length>0&&Object(h.jsx)(yn,{title:"Layer Metadata",meta:o.Layer}),!a&&Object.keys(o.upstreamWarehouse).length>0&&Object(h.jsxs)("div",{className:r.whNote,children:[Object(h.jsxs)(f.a,{variant:"caption",component:"div",children:["This layer was imported from a ",n._rs_prj_projType," project in the Riverscapes warehouse. You can visit the original project using the button below."]}),Object(h.jsx)(Ne,{title:"Original ".concat(n._rs_prj_projType," Project"),href:"".concat(ga,"#/").concat(n._rs_wh_program,"/").concat(n._rs_wh_id)})]}),Object.keys(o.upstreamProject).length>0&&Object(h.jsx)(yn,{title:"Original Project Metadata",meta:o.upstreamProject}),Object.keys(o.upstreamLayer).length>0&&Object(h.jsx)(yn,{title:"Original Layer Metadata",meta:o.upstreamLayer}),Object(h.jsx)(yn,{title:"Other",meta:{Symbology:t.symbology||"None"}})]})},xn=a(247),jn=a.n(xn),wn=Object(x.a)((function(e){return{root:{padding:e.spacing(1)},sectionHeader:{borderBottom:"1px solid"},table:{},metaKey:{fontWeight:"bold"},metaValue:{color:e.palette.text.secondary}}})),vn=function(e){var t,a,r,n,o=e.tiles,i=wn(),l={Status:o.status,Error:o.error,Started:o?"".concat(pn.dates.formatDate(o.started,"lll")," (").concat(pn.dates.formatDateAgo(o.started),")"):"unknown","Last status":o?"".concat(pn.dates.formatDate(o.lastStatus,"lll")," (").concat(pn.dates.formatDateAgo(o.lastStatus),")"):"unknown","Creation time":o?"".concat(((o.duration||0)/60).toFixed(0)," minutes"):"unknown","Original Size":o&&o.originFile?jn()(o.originFile.size).format("0.0 b"):"unknown","Relative path":(null===(t=o.rsLayer)||void 0===t?void 0:t.path)||"unknown","Physical path":o?null===(a=o.originFile)||void 0===a?void 0:a.key:"unknown","Modified (origin)":o?"".concat(pn.dates.formatDate(null===(r=o.originFile)||void 0===r?void 0:r.lastModified,"lll")," (").concat(pn.dates.formatDateAgo(null===(n=o.originFile)||void 0===n?void 0:n.lastModified),")"):"unknown"};return Object(h.jsx)(Ae.a,{className:i.root,children:Object(h.jsx)(yn,{title:"Webtile information",meta:l})})},On=Object(x.a)((function(e){return{root:{height:"100%",overflow:"hidden",display:"flex",flexDirection:"column"},toolbar:{flex:"0 0 ",padding:e.spacing(0,1),minHeight:e.spacing(6),background:e.palette.primary.dark,color:e.palette.primary.contrastText},spacer:{flexGrow:1},layerTitle:{},layerIcon:{},layerMeta:{flexGrow:1,overflowY:"scroll",userSelect:"text","& *":{userSelect:"text"}},typeContainer:{},closeButton:{}}})),Sn=function(e){var t=e.leaf,a=e.tiles,r=e.handleClose,n=On();return Object(h.jsxs)("div",{className:n.root,children:[Object(h.jsxs)(j.a,{className:n.toolbar,children:[Object(h.jsx)(Oe.a,{title:"This is a ".concat(t.layerType," layer"),children:Object(h.jsx)(I.a,{edge:"start",className:n.layerIcon,color:"inherit","aria-label":"menu",children:Object(h.jsx)($r,{layerType:t.layerType})})}),Object(h.jsx)(f.a,{variant:"body2",className:n.layerTitle,children:t.label}),Object(h.jsx)("div",{className:n.spacer}),Object(h.jsx)(I.a,{edge:"start",className:n.closeButton,color:"inherit","aria-label":"menu",onClick:r,children:Object(h.jsx)(M.a,{})})]}),Object(h.jsxs)("div",{className:n.layerMeta,children:[t&&Object(h.jsx)(fn,{leaf:t}),a&&Object(h.jsx)(vn,{tiles:a})]})]})},kn=function(e){var t=e.leafID,a=e.handleClose,r=Object(Gt.i)(or(t));return Object(h.jsx)(Sn,{leaf:r.leaf,tiles:r.tiles,handleClose:a})},Tn=function e(t){var a=t.branchId,r=t.depth,n=t.downloadFile,o=Object(Gt.i)(Ua(a)),i=Object(Gt.i)(_a);if(!o||!o.branch)return null;var l=null===o||void 0===o?void 0:o.branch.children.branches.map((function(t,a){return Object(h.jsx)(e,{downloadFile:n,branchId:t,depth:r+1},"".concat(null===o||void 0===o?void 0:o.branch.branch.label,"-").concat(t,"-").concat(a))})).filter((function(e){return e})),s=null===o||void 0===o?void 0:o.branch.children.leaves.map((function(e,t){return Object(h.jsx)(_n,{downloadFile:n,leafId:e,depth:r+1},"".concat(null===o||void 0===o?void 0:o.branch.branch.label,"-").concat(e,"-").concat(t))})).filter((function(e){return e}));return 0===s.length&&0===l.length?null:Object(h.jsx)(Hr,{id:a,label:null===o||void 0===o?void 0:o.branch.branch.label,hidden:null===o||void 0===o?void 0:o.hidden,searchText:i,children:[].concat(Object(Wt.a)(l),Object(Wt.a)(s))})},_n=function(e){var t=e.leafId,a=e.downloadFile,r=Object(Gt.i)(Na(t)),o=Object(Gt.i)(_a),i=Object(Gt.k)(Ma),l=Object(Gt.k)(Pa),s=_r().toggleLayer;if(!r||!r.leaf||!r.leaf.nodeExists)return null;var c=r.leaf,d=c.id,p=c.layerType,u=c.label;return Object(h.jsx)(Wr,{id:d,layerType:p,label:u,active:r.active,hidden:r.hidden,tilesState:r.tilesState,searchText:o,handleClick:l,handleDoubleClick:function(){if(n.event("webrave","double_click"),r.leaf.layerType===E.ProjectTreeLayerTypes.REPORT&&r.renderable){var e=window.open(r.reportUrl,"_blank","noopener,noreferrer");e&&(e.opener=null)}else r.leaf.layerType===E.ProjectTreeLayerTypes.FILE?r.leaf.layerPath&&a(r.leaf.layerPath):r.renderable&&s(r.leaf.id)},handleContext:function(e,t,a){n.event("webrave","open_context_menu"),i({leafId:e,position:{left:t,top:a}})}})},zn=function(e){var t=e.downloadFile,a=Object(Gt.k)(_a),r=Object(Gt.i)(Aa),n=Object(Gt.h)(Fa),o=Object(d.a)(n,2),i=o[0],l=o[1],s=Object(Gt.h)(La),c=Object(d.a)(s,2),p=c[0],u=c[1],g=Object(Gt.h)(Ma),y=Object(d.a)(g,2),b=y[0],f=y[1],x=Object(Gt.i)(Pa),j=Object(Gt.i)($a),w=Object(Gt.i)(Ea),v=Object(Gt.h)(Ca),O=Object(d.a)(v,2),S=O[0],k=O[1],T=w.branches.length>0?j:i,_=w.branches.length>0?function(){m.a.debug("collapsing turned off")}:l,z=S&&null!==x?Object(h.jsx)(kn,{leafID:x,handleClose:function(){return k(!1)}}):null,P=b&&Object(h.jsx)(nn,{ctxState:b,onClose:function(){return f(null)},downloadFile:t}),C=null!==r?Object(h.jsx)(Tn,{branchId:r,depth:0,downloadFile:t}):Object(h.jsx)("div",{});return Object(h.jsx)(tn,{lyrInfoOpen:S,setSearchText:a,expanded:T,ctxMenu:P,lyrInfo:z,selected:p,setExpanded:_,setSelected:function(e){Object(jt.isEqual)(e,p)||u(e)},children:C})},Pn=function(e){var t=e.layerPath,a=Object(Gt.j)(Ka(t)),r=Object(Gt.g)((function(e){var a=e.snapshot,r=e.set;return Object(Va.a)(Wa.a.mark((function e(){var n,o,i,l,s,c,d,p;return Wa.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("hasValue"===(n=a.getLoadable(Ka(t))).state){e.next=3;break}return e.abrupt("return");case 3:return o=n.contents,e.next=6,a.getPromise(qa(t));case 6:return i=e.sent,e.next=9,a.getPromise(Xa(t));case 9:return l=e.sent,e.next=12,a.getPromise(mr);case 12:return s=e.sent,e.next=15,a.getPromise(gr);case 15:c=e.sent,o.status===E.TilingStatus.FETCH_ERROR?l<5&&setTimeout((function(){return r(Xa(t),l+1)}),1e3*ya.retryDelayS):o.status===E.TilingStatus.QUEUED||o.status===E.TilingStatus.UNKNOWN||o.status===E.TilingStatus.CREATING?setTimeout((function(){return r(qa(t),i+1)}),1e3*ya.refreshDelayS):o.status===E.TilingStatus.SUCCESS&&(u=ya.worldBounds,m=s,g=o.bounds||null,d=g||m?g&&!m?[Math.max(u[0],g[0]),Math.max(u[1],g[1]),Math.min(u[2],g[2]),Math.min(u[3],g[3])]:m&&!g?[Math.max(u[0],m[0]),Math.max(u[1],m[1]),Math.min(u[2],m[2]),Math.min(u[3],m[3])]:m&&g?[Math.max(u[0],Math.min(g[0],m[0])),Math.max(u[1],Math.min(g[1],m[1])),Math.min(u[2],Math.max(g[2],m[2])),Math.min(u[3],Math.max(g[3],m[3]))]:null:null,p=Xt(c,[o.minZoom,o.maxZoom]),r(mr,d),r(gr,p));case 17:case"end":return e.stop()}var u,m,g}),e)})))}));return Object(o.useEffect)((function(){r()}),[a]),null},Cn=a(723),In=a(674),Ln=a(716),Rn=Object(x.a)((function(){return{root:{}}})),En="custom",Nn=function(e){var t=e.activeView,a=e.defaultView,r=e.projectViews,n=e.handleChange,i=Rn(),l=null===t?En:t,s=Object(o.useMemo)((function(){if(!r||0===r.length)return[Object(h.jsx)(O.a,{value:"custom",disabled:!0,children:Object(h.jsx)(f.a,{variant:"subtitle1",color:"textSecondary",children:Object(h.jsx)("em",{children:"No custom views"})})},En)];var e=r.map((function(e,t){var r=e.id===a?"(default)":"";return Object(h.jsxs)(O.a,{value:e.id,children:[e.name," ",r]},"view-".concat(t))}))||[];return[].concat(Object(Wt.a)(e),[null===t&&Object(h.jsx)(O.a,{value:"custom",children:Object(h.jsx)(f.a,{variant:"subtitle1",color:"textSecondary",children:Object(h.jsx)("em",{children:"Custom View"})})},En)])}),[r,t]);return Object(h.jsxs)(In.a,{className:i.root,fullWidth:!0,size:"small",children:[Object(h.jsx)(Cn.a,{htmlFor:"grouped-native-select",children:"Curated Views"}),Object(h.jsx)(Ln.a,{id:"view",value:l,disabled:!r||0===r.length,variant:"filled",onChange:function(e){return e.target.value!==En&&n(e.target.value)},children:s})]})},An=Object(x.a)((function(e){return{root:{},menuIcon:{marginRight:e.spacing(1)},menuItem:{display:"flex"}}})),Dn=function(e){var t=e.baseLayer,a=e.baseLayers,r=e.setBaseLayer,n=An(),o=a.map((function(e,t){var a=e.Icon;return Object(h.jsxs)(O.a,{value:e.id,className:n.menuItem,children:[Object(h.jsx)(a,{className:n.menuIcon}),Object(h.jsx)(f.a,{children:e.title})]},"view-".concat(t))}));return Object(h.jsxs)(In.a,{className:n.root,fullWidth:!0,size:"small",children:[Object(h.jsx)(Cn.a,{children:"Basemap"}),Object(h.jsx)(Ln.a,{id:"baselayer",value:t.id,variant:"filled",classes:{selectMenu:n.menuItem},onChange:function(e){var t=a.find((function(t){return t.id===e.target.value}));t&&r(t)},children:o})]})},Un=function(e){var t=e.error;return Object(h.jsx)(f.a,{color:"error",children:t||" "})},Mn=Object(x.a)((function(e){return{root:{zIndex:1e3,padding:e.spacing(0),border:"1px solid #EEEEEE",borderRadius:5,position:"absolute",background:"white",width:270,maxHeight:"90%",overflow:"hidden",boxShadow:"3px 3px 3px #00000066",top:15,right:15,display:"flex",flexDirection:"column"},subheaders:{background:"white"},legendList:{height:"100%",flex:"1 1",overflow:"scroll"}}})),Fn=function(e){var t=e.views,a=e.defaultView,r=e.children,n=e.baseLayer,o=e.baseLayers,i=e.setBaseLayer,l=e.error,s=e.viewId,c=e.setViewId,d=Mn();return Object(h.jsxs)("div",{className:d.root,children:[Object(h.jsx)(Dn,{baseLayer:n,baseLayers:o,setBaseLayer:i}),Object(h.jsx)(Nn,{activeView:s,defaultView:a,handleChange:c,projectViews:t}),Object(h.jsx)(Ue.a,{dense:!0,disablePadding:!0,className:d.legendList,children:r}),Object(h.jsx)(Un,{error:l})]})},Bn=a(711),$n=Object(x.a)((function(e){return{root:{flexDirection:"column",paddingLeft:e.spacing(5)},tooltip:{display:"flex","&>div":{marginRight:e.spacing(1)}},row:{width:"100%",display:"flex"},colorBox:{flexGrow:0,flexShrink:0,border:"1px solid #eaeaea",overflow:"hidden",color:"#FFFFFF00",width:e.spacing(2),height:e.spacing(2)},value:{color:e.palette.text.secondary,paddingLeft:e.spacing(1),whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}}})),Gn=function(e){var t=e.max,a=e.min,r=e.rampType,n=e.legend,o=$n(),i=function(e,t,a,r){var n=[];n=t&&a&&r===E.RampType.INTERPOLATED?e.map((function(e){var r=Object(d.a)(e,2),n=r[0],o=r[1],i=o.match(/^([0-9.]+)%$/);if(i){var l=parseFloat(i[1]);return[n,(a+(t-a)*l/100).toFixed(2)]}return[n,o]})):Object(Wt.a)(e);var o=n.reduce((function(e,t){return Object(c.a)(Object(c.a)({},e),{},Object(Jt.a)({},"".concat(t[0]).concat(t[1]),t))}),{});return Object.values(o)}(n,t,a,r);return Object(h.jsx)(Me.a,{divider:!0,dense:!0,disableGutters:!0,className:o.root,children:i.map((function(e,t){return Object(h.jsxs)("div",{className:o.row,children:[Object(h.jsx)("div",{className:o.colorBox,style:{background:e[0]},children:"color"}),Object(h.jsx)(Oe.a,{enterDelay:2e3,title:Object(h.jsxs)("div",{className:o.tooltip,children:[Object(h.jsx)("div",{className:o.colorBox,style:{background:e[0]},children:"color"}),e[1]]}),children:Object(h.jsx)(f.a,{variant:"caption",component:"div",className:o.value,children:e[1]})})]},"cr-".concat(t))}))})};var Wn=a(360),Vn=a.n(Wn),Hn=a(710),Zn=a(64),Jn=Object(x.a)((function(e){return{container:{},listItem:{paddingTop:0,paddingBottom:0,paddingLeft:0,paddingRight:26},listItemActive:{"& *":{cursor:"pointer"}},listItemAvatar:{minWidth:e.spacing(3.5)},expandIcon:{minWidth:e.spacing(1)},avatar:{width:e.spacing(3),height:e.spacing(3),"& svg":{height:"0.7em",width:"0.7em"}},expandIconButton:{padding:0,"& svg":{width:"0.7em",height:"0.7em"}},expandDisabled:{color:"rgba(0,0,0,0.05)!important"},textPrimary:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},textSecondary:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},secondary:{right:0},root:{marginTop:e.spacing(2)},heading:{marginTop:e.spacing(1)},loadingSpinner:{color:e.palette.text.secondary},layerItem:{display:"flex"},legendName:{flexGrow:1},deleteButtonHover:{},legendColor:{border:"1px solid black",width:"20px",display:"inline-block",height:"14px",marginRight:"5px"},deleteButton:{flexGrow:0,color:"#CCCCCC",padding:0,marginRight:0,"& < svg":{width:"0.8em",height:"0.8em"}}}})),qn=function(e){var t=e.label,a=e.leafId,r=e.loading,n=e.max,l=e.min,s=e.subLabel,c=e.fallbackColor,p=e.symbology,u=e.layerType,m=e.removeLayer,g=Jn(),y=Object(Zn.a)(),b=Object(o.useState)(!0),x=Object(d.a)(b,2),j=x[0],w=x[1],v=Boolean(p&&p.legend&&p.legend.length>1),O=Boolean(p&&p.legend&&1===p.legend.length),S=y.palette.text.primary,k=y.palette.background.default;O&&(null===p||void 0===p?void 0:p.legend)?u===E.ProjectTreeLayerTypes.POLYGON||u===E.ProjectTreeLayerTypes.RASTER?(k=p.legend[0][0],S=y.palette.getContrastText(k)):(S=p.legend[0][0],k=y.palette.background.default):c&&(u===E.ProjectTreeLayerTypes.POLYGON||u===E.ProjectTreeLayerTypes.RASTER?(S=c[500],k=c[100]):(S=c[500],k=y.palette.background.default));var T=function(){return v?w(!j):void 0};return Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsxs)(Me.a,{dense:!0,className:Object($e.a)(g.listItem,v&&g.listItemActive),children:[Object(h.jsx)(Hn.a,{className:g.expandIcon,children:Object(h.jsx)(I.a,{size:"small",onClick:T,disabled:!v,classes:{root:g.expandIconButton,disabled:g.expandDisabled},children:v&&j?Object(h.jsx)(Ke.a,{}):Object(h.jsx)(Ye.a,{})})}),Object(h.jsx)(Be.a,{className:g.listItemAvatar,children:Object(h.jsx)(De.a,{className:g.avatar,style:{background:k},onClick:T,children:Object(h.jsx)($r,{layerType:u,iconProps:{style:{color:S}}})})}),Object(h.jsx)(Oe.a,{enterDelay:1500,title:Object(h.jsxs)(i.a.Fragment,{children:[Object(h.jsx)(f.a,{color:"inherit",children:t}),s&&Object(h.jsx)(f.a,{variant:"caption",children:s})]}),children:Object(h.jsx)(Fe.a,{primary:t,secondary:s,onClick:T,classes:{primary:g.textPrimary,secondary:g.textSecondary}})}),Object(h.jsxs)(Bn.a,{className:g.secondary,children:[r&&Object(h.jsx)(ke.a,{className:g.loadingSpinner,color:"inherit",thickness:3,size:15}),!r&&Object(h.jsx)(I.a,{edge:"end",className:g.deleteButton,"aria-label":"delete",onClick:function(e){e.stopPropagation(),m(a)},children:Object(h.jsx)(Vn.a,{})})]})]}),v&&j&&Object(h.jsx)(Gn,{max:n,min:l,rampType:null===p||void 0===p?void 0:p.rampType,legend:null===p||void 0===p?void 0:p.legend})]})},Xn=function(){var e=Object(Gt.i)(xa),t=Object(Gt.i)(cr),a=Object(Gt.i)(Sa),r=Object(Gt.h)(lr),o=Object(d.a)(r,2),i=o[0],l=o[1],s=Object(Gt.i)(ur),c=hr().setView;if(!e)return null;var p=e.tree.views?e.tree.views:[],u=p.length>0&&e.tree.defaultView?e.tree.defaultView:"";return Object(h.jsx)(Fn,{views:p,defaultView:u,baseLayer:i,baseLayers:pa,error:t,setBaseLayer:function(e){n.event("webrave","set_base_layer",e.id),l(e)},viewId:s,setViewId:c,children:a.map((function(e,t){var a=e.id;return Object(h.jsx)(Kn,{lid:a},"lgdLyr-".concat(t))}))})},Kn=function(e){var t,a,r=e.lid,n=Object(Gt.i)(Ia(r)),o=Object(Gt.i)(or(r)),i=Object(Gt.i)(rr(r)),l=_r().removeLayer,s=null===(t=o.tiles)||void 0===t||null===(a=t.rasterStats)||void 0===a?void 0:a.stats,c=n.id,d=n.layerType,p=n.label,u=void 0,g=void 0,y=void 0;if(s)try{var b,f;u=s.max||s.maximum||void 0,g=s.min||s.minimum||void 0,u&&u>0&&g&&g>0&&(y="min: ".concat(null===(b=g)||void 0===b?void 0:b.toFixed(2)," max: ").concat(null===(f=u)||void 0===f?void 0:f.toFixed(2)))}catch(x){m.a.error("Could not get stats using object: ".concat(JSON.stringify(s)))}return Object(h.jsx)(qn,{leafId:c,layerType:d,symbology:o.symbology,max:u,min:g,label:p,subLabel:y,fallbackColor:null!==i?ba[i]:void 0,loading:o.tileStatus===E.TilingStatus.FETCHING||o.symbologyStatus===E.SymbologyStatus.FETCHING,removeLayer:l})},Qn=a(198),Yn=(a(531),function(){return Object(h.jsx)(y.b,{logoSVG:Object(h.jsx)(ke.a,{size:"3rem",thickness:4}),status:Object(h.jsx)(f.a,{variant:"h5",component:"div",children:"Loading Map..."}),containerProps:{maxWidth:"xl",style:{position:"absolute",zIndex:1e3,top:0,left:0,width:"100%",height:"100%",background:"#FFFFFF33"}}})}),eo=Object(x.a)((function(e){return{root:{marginLeft:e.spacing(1)},container:{display:"flex",height:"100%"},mapContainer:{position:"relative",background:"#CCCCCC",height:"100%",width:"100%","&>h1":{color:"#9999FF",position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},drawerContents:{height:"100%",display:"flex"},drawerSpacer:{flex:"0 0 0%"},drawerSpacerOpen:{},dialogContainer:{alignItems:"left",justifyContent:"left"},loaderSpinner:{position:"absolute",bottom:10,right:10,color:e.palette.secondary.main},dialog:{position:"absolute",margin:0,left:"20px",top:"20px"},subheaders:{background:"white"},dummyText:{}}})),to=wt.a.debounce((function(){return m.a.debug.apply(m.a,arguments)}),1500),ao=function(e){var t=e.children,a=e.baseLayer,n=e.styleLoading,i=e.bounds,l=e.zoomBounds,s=eo(),p=Object(Gt.h)(sr),u=Object(d.a)(p,2),m=u[0],g=u[1],y=Object(o.useState)(!1),b=Object(d.a)(y,2),f=b[0],x=b[1],j=Object(Gt.h)(dr),w=Object(d.a)(j,2),v=w[0],O=w[1],S=Object(o.useRef)();S.current=m;var k=Object(o.useCallback)((function(e){var t=e.target.isStyleLoaded();v!==t&&O(t)}),[v]),T=Object(o.useCallback)((function(e){var t=Object(c.a)(Object(c.a)(Object(c.a)({},S.current),e),{},{pitch:0,bearing:0});l&&t.zoom&&(t.zoom>l[1]?t.zoom=l[1]:t.zoom<l[0]&&(t.zoom=l[0]));var a=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!e&&t&&!0===a)return[(t[0]+t[2])/2,(t[1]+t[3])/2];if(!t||!e||Object(jt.isUndefined)(e[0])||Object(jt.isUndefined)(e[1]))return null;var r=[t[0]>e[0]?t[0]:t[2]<e[0]?t[2]:e[0],t[1]>e[1]?t[1]:t[3]<e[1]?t[3]:e[1]];return r[0]===e[0]&&r[1]===e[1]?null:a?[(t[0]+t[2])/2,(t[1]+t[3])/2]:r}([t.longitude,t.latitude],i||ya.worldBounds,i&&!f);Array.isArray(a)&&(to("setViewport GEOFENCED",a,i&&!f),t.longitude=a[0],t.latitude=a[1]),to("setViewport DEBOUNCED",{inV:e,outV:t,bounds:i,center:i&&!f}),g(t)}),[i,l,f]),_=Object(o.useMemo)((function(){return function(e){return Object(c.a)(Object(c.a)({},ha),{},{sources:e.sources,layers:e.layers})}(a)}),[]);Object(o.useEffect)((function(){to("setViewport useEffect",{bounds:i,zoomBounds:l,boundsSet:f}),!f&&i&&x(!0),T(Object(c.a)({},S.current))}),[i,l,f]);var z=n&&Object(h.jsx)(ke.a,{size:"2rem",thickness:6,className:s.loaderSpinner});return _&&i?Object(h.jsx)("div",{className:s.mapContainer,children:Object(h.jsxs)(Qn.b,Object(c.a)(Object(c.a)({},m),{},{width:"100%",height:"100%",minZoom:l[0]||4,maxZoom:l[1]||20,clickRadius:2,onLoad:k,mapStyle:_,onViewportChange:T,onError:function(e){(!e.error||!e.error.status||e.error.status<400||e.error.status>500)&&console.error("MAP ERROR",e)},mapboxApiAccessToken:r.mapConfig.mapBoxToken,children:[z,t]}))}):Object(h.jsx)(Yn,{})},ro=a(712),no=a(362),oo=a.n(no),io=a(363),lo=a.n(io),so=Object(x.a)((function(e){return{root:{position:"absolute",top:e.spacing(1),left:e.spacing(1)}}})),co=function(e){var t=e.drawerOpen,a=e.toggleDrawer,r=so();return Object(h.jsx)(ro.a,{color:"primary","aria-label":"add",onClick:a,size:"small",className:r.root,children:t?Object(h.jsx)(oo.a,{}):Object(h.jsx)(lo.a,{})})},po=function(){var e=Object(Gt.h)(wa),t=Object(d.a)(e,2),a=t[0],r=t[1];return Object(h.jsx)(co,{drawerOpen:a,toggleDrawer:function(){n.event("webrave","set_map_drawer",a?"open":"closed"),r(!a)}},"treeToggleBtn")},uo=function(){var e=i.a.useContext(Qn.a).map,t=Object(Gt.i)(lr),a=Object(Gt.i)(dr),r=Object(Gt.i)(pr),n=Object(o.useRef)(e);return Object(o.useEffect)((function(){!function(e,t,a){if(!aa(e))return e;m.a.debug("MM: changeBaseLayer",t.id);var r=e,n=[];Object.keys(t.sources).forEach((function(e){r.getSource(e)||(r=r.addSource(e,t.sources[e]))}));var o=null,i=0;t.layers.forEach((function(e){r.getLayer(e.id)||(r=r.addLayer(e,o),i++),n.push(e.id),o=e.id})),m.a.debug("MM: changeBaseLayer Added ".concat(i," background layers"));var l=0;ra(r).filter((function(e){return 0===e.indexOf(Yt.bgLayer)})).filter((function(e){return n.indexOf(e)<0})).forEach((function(e){l++,r=r.removeLayer(e)})),l>0&&m.a.debug("MM: changeBaseLayer Removed ".concat(l," unneeded background layers")),i+l>0&&(r=ia(r,a))}(n.current,t,r)}),[a,t]),Object(o.useEffect)((function(){oa(n.current,r)}),[a,r]),null},mo=function(){var e=Object(Gt.i)(yr),t=Object(Gt.i)(dr),a=Object(Gt.i)(lr);return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(Xn,{}),Object(h.jsx)(ao,{baseLayer:a,zoomBounds:e.zoom,bounds:e.bounds,styleLoading:!t,children:[Object(h.jsx)(po,{},"toggleBtn"),Object(h.jsx)(uo,{},"mapLayers")]})]})},go=Object(x.a)((function(e){return{root:{padding:e.spacing(1),height:"100%",overflowY:"scroll",userSelect:"text","& *":{userSelect:"text"}},btnGroup:{width:"100%",display:"flex",justifyContent:"space-between","&>*":{flex:"0 0 calc(50% - 0.5em)"},margin:e.spacing(1,1,3,1)},divider:{marginTop:e.spacing(3)},footerLogo:{}}})),yo=function(e){var t=e.project,a=e.downloadZipFile,r=e.pendingZips,n=go(),o={Title:t.name,Type:t.projType,"Warehouse ID":t.id,"Warehouse Tags":Array.isArray(t.tags)?t.tags.join(", "):"<None>","Project Created":"".concat(pn.dates.formatDate(t.createdOn,"lll")," (").concat(pn.dates.formatDateAgo(t.createdOn),")"),"Project Updated":"".concat(pn.dates.formatDate(t.updatedOn,"lll")," (").concat(pn.dates.formatDateAgo(t.updatedOn),")")},i=t&&r[t.id];return Object(h.jsxs)(Ae.a,{className:n.root,children:[Object(h.jsxs)(f.a,{variant:"h4",paragraph:!0,color:"textPrimary",children:[t.projType," Project"]}),Object(h.jsx)(v.a,{}),Object(h.jsxs)(f.a,{component:"div",paragraph:!0,children:["This project exists within the Riverscapes Data Warehouse. You can download this project and view it using the free"," ",Object(h.jsx)("a",{href:"https://rave.riverscapes.xyz",target:"_blank",rel:"noreferrer",children:"RAVE"})," ","plugin for ArcGIS."]}),Object(h.jsxs)("div",{className:n.btnGroup,children:[Object(h.jsx)(Ne,{title:"Warehouse",href:"".concat(ga,"/#/").concat(t.program,"/").concat(t.id)}),Object(h.jsx)(Le,{downloadZipFile:a,pendingSince:i,project:t,title:"Download"})]}),Object(h.jsx)(yn,{title:"Project Information",meta:o}),Object(h.jsx)(yn,{title:"Project Metadata",meta:t.meta}),Object(h.jsx)(v.a,{className:n.divider}),Object(h.jsx)("a",{href:"http://riverscapes.xyz",target:"_blank",rel:"noreferrer",children:Object(h.jsx)("img",{className:n.footerLogo,alt:"footer",src:"".concat("/webrave-staging","/cc-watermarks-riverscapes_orig.png")})})]})},ho=function(){var e=Object(Gt.i)(Oa),t=Object(Gt.g)((function(e){var t=e.snapshot,a=e.set;return function(){var e=Object(Va.a)(Wa.a.mark((function e(r){var n,o,i,l,s;return Wa.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getPromise(ar);case 2:return n=e.sent,e.next=5,t.getPromise(rr(r));case 5:return o=e.sent,e.next=8,t.getPromise(or(r));case 8:return i=e.sent,e.next=11,t.getPromise(nr);case 11:l=e.sent,s=!1,i.symbology&&i.symbology.status===E.SymbologyStatus.FOUND||(s=!0),s&&null===o?(a(ar,[].concat(Object(Wt.a)(n),[l])),a(rr(r),l)):s||null===o||(a(ar,n.filter((function(e){return e===o}))),a(rr(r),null));case 15:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}));Object(o.useEffect)((function(){var a=function(){var a=Object(Va.a)(Wa.a.mark((function a(){var r;return Wa.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:r=0;case 1:if(!(r<e.length)){a.next=8;break}if(e[r].layerType===E.ProjectTreeLayerTypes.RASTER){a.next=5;break}return a.next=5,t(e[r].id);case 5:r++,a.next=1;break;case 8:case"end":return a.stop()}}),a)})));return function(){return a.apply(this,arguments)}}();a()}),[e])},bo=function(e){var t=e.history,a=e.auth,r=e.program,i=Object(Gt.i)(wa),l=Object(Gt.i)(Ta),s=r&&Object.values(E.WarehouseRoleEnum).indexOf(r.role)>-1,c=zt(a,r,!1,!0),d=c.project,p=c.loading,u=c.initialized,g=kt(a,r),y=g.downloadZipFile,b=g.downloadFileFn,f=g.pendingZips,x=function(e){return d?b(d,e):Promise.resolve()};br(a,d),ho();var j=Object(o.useMemo)((function(){return Object(h.jsx)(mo,{})}),[]),w=Object(o.useMemo)((function(){return Object(h.jsx)(Tr,{tabs:[{label:"Project Tree",value:Object(h.jsx)(zn,{downloadFile:x})},{label:"Project Info",value:d?Object(h.jsx)(yo,{project:d,downloadZipFile:y,pendingZips:f}):Object(h.jsx)("div",{})}]})}),[d,x,y,f]);return s?!u||p?(m.a.debug("Project Marzipan: ",{initialized:u,isProjLoading:p,project:d}),Object(h.jsx)(Bt,{title:"Loading",history:t,signOut:a.signOut,children:Object(h.jsx)($t,{title:p?"Loading Project...":"Initializing..."})})):d?(d||p||n.event("error","project_not_found",window.location.hash),Object(h.jsxs)(h.Fragment,{children:[l.map((function(e){return Object(h.jsx)(Pn,{layerPath:e},e)})),Object(h.jsx)(Bt,{title:d.name,history:t,signOut:a.signOut,children:Object(h.jsx)(vr,{open:i,split:"vertical",primary:"second",minSize:500,maxSize:"85%",defaultSize:"75%",child1:w,child2:j})})]})):Object(h.jsx)(Bt,{title:"Project not found",history:t,signOut:a.signOut,children:Object(h.jsx)(xr,{})}):(n.event("error","access_denied",window.location.hash),Object(h.jsx)(Bt,{title:"Access Denied",history:t,signOut:a.signOut,children:Object(h.jsx)(pt,{program:r,onClose:function(){return t.push("/")}})}))},fo=a(374);n.init();var xo=function(){var e=Object(o.useState)(),t=Object(d.a)(e,2),a=t[0],i=t[1],l=Object(o.useState)({program:null,loading:!0}),s=Object(d.a)(l,2),u=s[0],g=s[1],b=Object(o.useState)(!0),f=Object(d.a)(b,2),x=f[0],j=f[1],w=Object(fo.a)(a,!1,!1),v=Object(p.e)(),O=window.location.hash.split("/"),S=O.length>1&&O[1].match(/[A-Za-z0-9-_]{3,25}/g)?O[1]:"UNKNOWN";Object(o.useEffect)((function(){n.currentPageView(),Object(E.authCheck)(r.endpoints.graphql,"",ya.apiTimeout).then((function(e){var t;m.a.debug("authResp",e);var a=null===(t=e.data)||void 0===t?void 0:t.auth;a&&a.region&&(i({region:a.region,userPoolId:a.userPool,userPoolWebClientId:a.clientId,mandatorySignIn:!0,oauth:{domain:a.domain,scope:["email","profile","openid"],redirectSignIn:r.redirectUrl.toString(),redirectSignOut:r.redirectUrl.toString(),responseType:"code"}}),j(!1))})).catch((function(e){m.a.error("api.getPrograms error",e)}))}),[]),Object(o.useEffect)((function(){if(v){var e=localStorage.getItem("RSUrl"),t=v.location.pathname;m.a.debug("LOCALSTORAGE:::REDIRECT checking",e,t,w),w.isAuthenticated||w.error||!w.isAuthComplete||(m.a.debug("LOCALSTORAGE:::SET",t),localStorage.setItem("RSUrl",t)),e&&w.isAuthenticated&&w.isAuthComplete&&!w.error&&(t!==e&&(m.a.debug("LOCALSTORAGE:::REDIRECT",t,e),v.push(e)),localStorage.removeItem("RSUrl"))}}),[v,w]);var k=Object(o.useCallback)((function(e,t,a){var r;r=a?"/"+t.machineName+"/"+a.id:"/"+t.machineName,n.event("webrave","navigate",r),e.push(r)}),[]);Object(o.useEffect)((function(){w.isAuthenticated&&!(null===u||void 0===u?void 0:u.program)&&w.getCurrentToken().then((function(e){return Object(E.getProgramAuth)(r.endpoints.graphql,e,S)})).then((function(e){m.a.debug("API GetProgram",e),e.data&&e.data.program&&g({program:e.data.program,loading:!1})})).catch((function(e){m.a.error("api.getPrograms error",e)}))}),[w,u]);var T=Object(h.jsx)("img",{src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"});if(x)return Object(h.jsx)(Bt,{title:"Loading authentication info",children:Object(h.jsx)(y.b,{logoSVG:T,title:ya.appName,message:"Loading authentication info",version:r.version})});if(w.isAuthenticated){if(!u||(null===u||void 0===u?void 0:u.loading))return Object(h.jsx)(Bt,{title:"webRAVE",children:Object(h.jsx)(y.b,{logoSVG:T,title:"WebRave",message:"Loading Program: ".concat(S),version:r.version})});var _={navigate:k,signOut:w.signOut};return Object(h.jsxs)(p.c,{children:[Object(h.jsx)(p.a,{path:"/:programId/:projectId/:config?",render:function(e){return Object(h.jsx)(bo,Object(c.a)(Object(c.a)({},e),{},{auth:w,program:null===u||void 0===u?void 0:u.program}))}}),Object(h.jsx)(p.a,{path:"*",render:function(e){return Object(h.jsx)(Bt,Object(c.a)(Object(c.a)(Object(c.a)({},e),_),{},{children:Object(h.jsx)(xr,{})}))}})]})}return w.isAuthComplete?Object(h.jsx)(Bt,{title:"Sign in",children:Object(h.jsx)(ot,{signIn:w.signIn,title:"Riverscapes Map Viewer"})}):Object(h.jsx)(Bt,{title:"webRAVE",children:Object(h.jsx)(y.b,{logoSVG:T,title:"Authenticating",message:"Authenticating",version:r.version})})},jo=(a(584),a(177));a.n(jo).a.workerClass=a(585).default,m.a.setDefaultLevel(m.a.levels.DEBUG),a(586),s.a.render(Object(h.jsx)(Gt.a,{children:Object(h.jsx)(p.b,{basename:"/",history:Ct,children:Object(h.jsx)(xo,{})})}),document.getElementById("root")),window.addEventListener("load",(function(){window.history.pushState({},"")})),navigator.storage&&navigator.storage.persist?navigator.storage.persist().then((function(e){e?m.a.debug("Storage will not be cleared except by explicit user action"):m.a.warn("Storage may be cleared by the UA under storage pressure.")})):m.a.warn("navigator.storage API not implemented.")}},[[587,1,2]]]);
//# sourceMappingURL=main.17482e38.chunk.js.map