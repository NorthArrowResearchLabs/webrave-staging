{"version":3,"sources":["../../src/index.ts","../../src/config.ts","../../../src/modals/ShareDialog.tsx","../../src/types.ts","../../../src/misc/WarehouseTags.tsx","../../../src/misc/DownloadZipBtn.tsx","../../../src/misc/WebRaveBtn.tsx","../../src/constants.ts","../../../src/frame/Footer.tsx","../../../src/frame/Topbar.tsx","../../src/xml.ts","../../src/api.ts","../../src/schema.graphql.ts","../../../src/classes/Program.ts","../../../src/classes/Project.ts","../../../src/classes/errors.ts","../../../src/classes/TileServiceJSONClass.ts","../../../src/frame/Topbar.style.ts","../../../src/misc/WarehouseButton.tsx","../../../src/modals/ProgramChooser.tsx","../../../../src/modals/ProjectModal/ProjectModal.tsx","../../../../src/modals/ProjectModal/RecurseTreeItem.tsx","../../../../src/modals/ProjectModal/RecurseTreeItem.style.ts","../../../../src/modals/ProjectModal/ProjectModal.style.ts","../../../src/modals/LoginScreen.tsx","../../../src/modals/NotAllowedModal.tsx","../../../src/hooks/useDownloads.tsx","../../../src/hooks/useProgram.ts","../../../src/hooks/useProject.ts","../../../src/hooks/useQueryParams.tsx","../../src/themes.ts","../../src/Multidot.tsx","../../src/Polygon.tsx","../../src/Polyline.tsx","../../src/QRCode.tsx","../../src/Raster.tsx","../../src/LayerIcon.tsx","components/AppWrapper.tsx","components/ProjectLoading.tsx","mapStyles/index.ts","config.ts","lib/util.ts","recoil/project.ts","recoil/tree.ts","lib/downloadQueue.ts","recoil/tiles.ts","recoil/symbology.ts","recoil/layers.ts","recoil/map.ts","hooks/useViews.tsx","hooks/useAppStateInit.tsx","components/ProjectNotFound.tsx","components/AppSplitter.tsx","components/TreeDrawer.tsx","hooks/useMapLayers.tsx","components/tree/TreeNodeLabel.tsx","components/tree/TreeLeaf.tsx","components/tree/TreeBranch.tsx","components/tree/TreeControl.tsx","components/tree/TreeContextMenu.tsx","connectors/TreeContextMenu.connect.tsx","components/meta/MetaData.tsx","components/meta/LayerMeta.tsx","components/meta/LayerTileInfo.tsx","components/meta/LayerInfo.tsx","connectors/TreeLayerInfo.connect.tsx","connectors/Treecontrol.connect.tsx","connectors/MapTiles.connect.tsx","components/legend/ViewList.tsx","components/legend/BaseLayerPicker.tsx","components/legend/LegendError.tsx","components/legend/Legend.tsx","components/legend/LegendLayerItem.tsx","connectors/Legend.connect.tsx","components/map/MapLoading.tsx","components/map/Map.tsx","components/TreeToggleBtn.tsx","components/map/defaultSymbology.ts","connectors/MapLayer.connect.tsx","connectors/Map.connect.tsx","components/ProjectInfoTab.tsx","hooks/useColourFallback.ts","connectors/App.connect.tsx","connectors/AppAuth.connect.tsx","index.tsx"],"names":["react_1","default","createElement","_a","root","display","zIndex","theme","drawer","text","flexGrow","logo","fileSort","currFolder","sort","a","children","b","exports","color","palette","primary","contrastText","maxWidth","prog","role","treeItemRoot","backgroundColor","background","paper","treeItemContainer","treeItemText","marginLeft","spacing","padding","treeItemIcon","treeFile","treeFileContent","borderBottom","treeFolder","treeFolderContent","treeFolderText","allowSelect","userSelect","cursor","margin","scrollPaper","alignItems","name","whiteSpace","overflow","textOverflow","marginBottom","titlebar","titlebarLeft","header","headerLeft","flex","headerRight","textAlign","closeButton","colors_1","Object","keys","input","forEach","params","k","stringVal","changes","length","loglevel_1","_1","AppWrapper","title","history","signOut","containerProps","ThemeProvider","themes","home","noScroll","fullWidth","topbar","signOutHandler","shareUrl","window","location","href","ProjectLoading","logoSVG","CircularProgress","size","thickness","status","Typography","variant","component","style","position","top","left","width","height","mapStyles","id","toolTip","Icon","SatelliteOutlined","Satellite","DirectionsCarOutlined","BasicMap","TerrainOutlined","GrayscaleHS","domain","process","REACT_APP_DOMAIN","log","debug","endpoints","graphql","warehouseUrl","appDefaults","appName","zoomRange","worldBounds","baseLayer","baseLayers","drawerOpen","init","minFilterTextLength","maxMapLayers","retryDelayS","refreshDelayS","legendColors","red","green","blue","orange","purple","cyan","lime","brown","redirectUrl","URL","endsWith","origin","console","publicUrl","addColorAlpha","inColor","alpha","bgTmp","decomposeColor","type","values","recomposeColor","newBounds","oldBounds","newRect","fallback","Math","max","min","SORT_ORDER","ProjectTreeLayerTypes","POINT","LINE","POLYGON","TIN","RASTER","projectAtom","atom","key","authAtom","drawerOpenAtom","activeIdsAtom","activeTreeLeavesSelector","selector","get","proj","activeIds","tree","leaves","filter","leaf","indexOf","activeLeavesSortedSelector","newArr","lyrA","lyrB","layerType","layerSort","projectMapLayerLeafsSelector","layerPath","nodeExists","ProjectTreeLayerTileTypes","projectLayerPathsSelector","reduce","acc","projectSymbologiesSelector","symbology","treeFilterTextAtom","projectLeafHierarchySelector","project","parent","pid","ancestry","searchStrings","branches","foundBranch","find","br","bid","push","label","toLowerCase","trim","map","idx","projectLeafSearchAncestry","treeInfoPaneIdAtom","treeInfoPaneOpenAtom","treeLeafSelectorFamily","selectorFamily","ptid","Error","treeSelectedIdsAtom","treeSelectedSelector","rawIds","selectedIds","ids","parseInt","replace","projectHiddenNodesSelector","retVal","hierarchy","filterText","filterTextArr","split","w","allowedLeaves","leafHierarchy","every","word","allowedBranches","Array","from","Set","lid","treeLeafStateSelector","layer","layerStateSelectorFamily","hidden","active","tilesState","tileStatus","treeAllowed","renderable","treeRootBranchId","branch","treeBranchSelectorFamily","lf","treeBranchStateSelectorFamily","hiddenNodes","collapsed","Boolean","treeExpandedSelector","selected","treeContextMenuAtom","treeExpandedIdsAtom","treeAllIdsSelector","QUEUE","Bottleneck","maxConcurrent","tilesRequestIdAtomFamily","atomFamily","tilesRetriesAtomFamily","tilesSelectorFamily","auth","TilingStatus","UNKNOWN","downloadQueue","schedule","priority","getCurrentToken","then","jwt","getLayerTiles","projType","program","apiRes","errors","data","TILING_ERROR","error","e","JSON","stringify","join","FETCH_ERROR","toString","symbologySelectorFamily","SymbologyStatus","getWebVectorSymbology","catch","err","ERROR","assignedRandomColorsAtom","leafRandomColAtomFamily","selectNextColor","current","leafid","tileServLoadable","noWait","symbologyLoadable","legendActive","treeSelected","state","FETCHING","contents","FILE","SUCCESS","symbologyStatus","NOT_APPLICABLE","tiles","viewProjLeafIdsSelector","views","view","viewIds","layers","vl","ptl","blLayerId","baseLayerAtom","mapErrorAtom","mapLoadingAtom","renderableMapLayersSelector","usableLayers","rndCols","lyr","randomColor","idStr","beforeId","activeViewAtom","boundsAtom","zoomBoundsAtom","boundsSelector","zoom","bounds","useViews","useRecoilState","currView","setCurrView","viewLeafIds","useRecoilValue","setActiveMapIds","useSetRecoilState","setView","viewId","resetView","defaultView","useAppStateInit","initAuth","initProj","setProjectTree","setAuth","projectSymbologies","projectLayerPaths","setExpanded","useEffect","preFetchLayerTile","useRecoilCallback","snapshot","getLoadable","preFetchSymbology","symbName","useStyles","makeStyles","rootContainer","flexDirection","spacer","buttonContainer","logoContainer","ProjectNotFound","classes","Container","className","Paper","src","alt","paragraph","Link","stay","splitPane","resizer","opacity","boxSizing","backgroundClip","transition","borderTop","borderLeft","borderRight","borderColor","AppSplitter","open","child1","child2","defaultSize","minSize","maxSize","resizerClassName","pane1Style","pane2Style","appBar","tabs","tabContents","secondary","main","right","TreeDrawer","useState","activeTab","setValue","Tabs","value","onChange","event","newValue","indicatorColor","textColor","aria-label","tab","Tab","tid","useMapLayers","setActiveIds","setError","removeLayer","addLayer","toggleLayer","normal","fontStyle","highlighted","fontWeight","TreeNodeLabel","query","sanitized","t","chunks","highlightWords","c","match","useLeafStyles","treeLeafLabel","innerLabel","metaIcon","fontSize","lineHeight","loadingSpinner","leafQUEUED","leafCREATING","leafTILING_ERROR","leafFETCH_ERROR","leafNOT_FOUND","leafUNKNOWN","leafFETCHING","leafSUCCESS","TreeLeaf","searchText","handleContext","handleClick","handleDoubleClick","mapAddable","tileStatusStr","QUEUED","CREATING","TreeItem","nodeId","clsx","NOT_FOUND","REPORT","onClick","onDoubleClick","onContextMenu","preventDefault","clientX","clientY","icon","useBranchStyles","marginTop","iconContainer","TreeBranch","stopPropagation","container","folderIcon","paddingBottom","searchBox","searchBoxInput","TreeControl","lyrInfoOpen","setSearchText","expanded","ctxMenu","lyrInfo","setSelected","setSearchDebounced","debounce","stext","TextField","placeholder","target","InputProps","startAdornment","InputAdornment","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","isArray","item","TreeContextMenu","onClose","menuItems","Menu","keepMounted","anchorReference","anchorPosition","disabled","MenuItem","TreeContextMenuConnect","ctxState","leafId","setTreeInfoPaneId","setTreeeInfoPaneOpen","table","section","sectionHeader","metaKey","metaValue","SPECIAL_FORMATS","datecreated","val","valDate","dates","HTML5InputToTimestamp","formatDate","formatDateAgo","formatString","lwrKey","MetaData","meta","TableContainer","Table","TableBody","rowKey","TableRow","TableCell","scope","align","DONTSHOW","minimal","whNote","LayerMeta","sections","distill","rk","upstreamWarehouse","upstreamProject","upstreamLayer","Layer","makeSections","_rs_prj_projType","LayerTileInfo","Status","Started","started","lastStatus","duration","toFixed","originFile","numeral","format","rsLayer","path","lastModified","toolbar","minHeight","dark","layerTitle","layerIcon","layerMeta","overflowY","typeContainer","LayerInfo","handleClose","Toolbar","Tooltip","IconButton","edge","TreeLayerInfo","leafID","TreeBranchConnector","branchId","depth","branchState","d","TreeLeafConnector","treeLeafState","setCtxState","setInfoPaneId","TreeControlConnect","setFilterText","rootBranchId","expandedIds","setExpandedIds","setSelectedIds","infoPaneId","allIds","infoPaneOpen","setInfoPaneOpen","realExpanded","realSetExpanded","treeContrextMenu","rootBranch","isEqual","MapTilesConnect","tLoad","useRecoilValueLoadable","updateBoundsState","set","getPromise","reqId","retryId","zoomBounds","oldZBounds","newZbounds","minZoom","maxZoom","setTimeout","EMPTY_VID","ViewList","activeView","projectViews","handleChange","realView","viewOptions","useMemo","viewOpts","v","defaultString","FormControl","InputLabel","htmlFor","Select","menuIcon","marginRight","menuItem","BaseLayerPicker","setBaseLayer","selectMenu","newBl","bl","LegendError","legendBox","border","borderRadius","boxShadow","subheaders","Legend","setViewId","List","dense","heading","layerItem","legendName","deleteButtonHover","legendColor","deleteButton","LegendLayerItem","loading","fgColor","bgColor","bgColFinal","fgColFinal","ListItem","ListItemAvatar","Avatar","iconProps","ListItemText","ListItemSecondaryAction","LegendConnect","mapError","activeLeaves","currentView","LegendItemConnect","rndColIdx","cols","sym","fallbackColor","defaultFg","defaultReturn","fg","bg","lineNode","s","line","fillNode","fill","circleNode","circleFill","legendColorFinder","symbologyJSON","undefined","MapLoading","mapContainer","transform","drawerContents","drawerSpacer","drawerSpacerOpen","dialogContainer","justifyContent","loaderSpinner","bottom","dialog","dummyText","defaultViewport","debounceConsoleLog","_","Map","styleLoading","viewport","_setViewport","viewportRef","useRef","setViewport","inV","outV","pitch","bearing","longitude","latitude","baseStyle","bs","newViewport","mapLoader","mapStyle","clickRadius","onViewportChange","mapboxApiAccessToken","config","mapConfig","mapBoxToken","toggleDrawer","Fab","calculateOpacity","transparency","commonFeatures","layerId","lyrProps","minzoom","maxzoom","layout","subLayers","sublyr","sl","rndColor","paint","point","polygon","outline","MapLayers","retry","setRetry","React","useContext","MapContext","mapLoading","setMapLoading","renderableMapLayers","recalcMapLayers","useCallback","isStyleLoaded","lastId","getMapStyle","getStyle","mapLayers","mapSources","sources","renderablelayersDict","sourceId","newKey","addedLayers","addSource","scheme","url","getVectorSource","source","getRasterLayerProps","symbJSON","rndCol","defaultSymbology","symb","idStrIdx","getVectorLayerProps","lKey","addKey","moveLayer","currId","info","MapConnect","Fragment","TreeToggleBtn","btnGroup","divider","footerLogo","ProjectInfoTab","downloadZipFile","pendingZips","projectInfo","Title","Type","tags","createdOn","updatedOn","pendingSince","Divider","rel","useColourFallback","activeTreeLeaves","assignRndCol","colIds","currRndCol","nextCol","needRndCol","FOUND","cid","exFunc","AppConnect","programs","useProgram","hasViewAccess","WarehouseRoleEnum","useProject","isProjLoading","initialized","useDownloads","plp","AppAuthConnect","authInfo","setAuthInfo","programsState","setProgramsState","isAppPreLoading","setIsAppPreLoading","useHosted","useHistory","authCheck","authResp","authVals","region","userPoolId","userPool","userPoolWebClientId","clientId","mandatorySignIn","oauth","redirectSignIn","redirectSignOut","responseType","storageUrl","localStorage","getItem","localUrl","pathname","isAuthenticated","isAuthComplete","setItem","removeItem","navigate","machineName","getPrograms","allPrograms","message","version","appWrapProps","render","props","signIn","mapboxgl","workerClass","require","setDefaultLevel","levels","DEBUG","ReactDOM","basename","hashHistory","document","getElementById","addEventListener","pushState","navigator","storage","persist","granted","warn"],"mappings":"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","file":"static/js/main.45c83d7b.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Footer_1 = require(\"./frame/Footer\");\nObject.defineProperty(exports, \"Footer\", { enumerable: true, get: function () { return Footer_1.default; } });\nvar Topbar_1 = require(\"./frame/Topbar\");\nObject.defineProperty(exports, \"Topbar\", { enumerable: true, get: function () { return Topbar_1.default; } });\nvar WarehouseTags_1 = require(\"./misc/WarehouseTags\");\nObject.defineProperty(exports, \"WarehouseTags\", { enumerable: true, get: function () { return WarehouseTags_1.default; } });\nvar DownloadZipBtn_1 = require(\"./misc/DownloadZipBtn\");\nObject.defineProperty(exports, \"DownloadZipBtn\", { enumerable: true, get: function () { return DownloadZipBtn_1.default; } });\nvar WarehouseButton_1 = require(\"./misc/WarehouseButton\");\nObject.defineProperty(exports, \"WarehouseButton\", { enumerable: true, get: function () { return WarehouseButton_1.default; } });\nvar WebRaveBtn_1 = require(\"./misc/WebRaveBtn\");\nObject.defineProperty(exports, \"WebRaveBtn\", { enumerable: true, get: function () { return WebRaveBtn_1.default; } });\nvar ProgramChooser_1 = require(\"./modals/ProgramChooser\");\nObject.defineProperty(exports, \"ProgramChooser\", { enumerable: true, get: function () { return ProgramChooser_1.default; } });\nvar ProjectModal_1 = require(\"./modals/ProjectModal/ProjectModal\");\nObject.defineProperty(exports, \"ProjectModal\", { enumerable: true, get: function () { return ProjectModal_1.default; } });\nvar ShareDialog_1 = require(\"./modals/ShareDialog\");\nObject.defineProperty(exports, \"ShareDialog\", { enumerable: true, get: function () { return ShareDialog_1.default; } });\nvar LoginScreen_1 = require(\"./modals/LoginScreen\");\nObject.defineProperty(exports, \"LoginScreen\", { enumerable: true, get: function () { return LoginScreen_1.default; } });\nvar NotAllowedModal_1 = require(\"./modals/NotAllowedModal\");\nObject.defineProperty(exports, \"NotAllowedModal\", { enumerable: true, get: function () { return NotAllowedModal_1.default; } });\nvar useDownloads_1 = require(\"./hooks/useDownloads\");\nObject.defineProperty(exports, \"useDownloads\", { enumerable: true, get: function () { return useDownloads_1.default; } });\nvar useProgram_1 = require(\"./hooks/useProgram\");\nObject.defineProperty(exports, \"useProgram\", { enumerable: true, get: function () { return useProgram_1.default; } });\nvar useProject_1 = require(\"./hooks/useProject\");\nObject.defineProperty(exports, \"useProject\", { enumerable: true, get: function () { return useProject_1.default; } });\nvar useQueryParams_1 = require(\"./hooks/useQueryParams\");\nObject.defineProperty(exports, \"useQueryParams\", { enumerable: true, get: function () { return useQueryParams_1.default; } });\nObject.defineProperty(exports, \"hashHistory\", { enumerable: true, get: function () { return useQueryParams_1.hashHistory; } });\nvar themes_1 = require(\"./themes\");\nObject.defineProperty(exports, \"themes\", { enumerable: true, get: function () { return themes_1.default; } });\nexports.config = __importStar(require(\"./config\"));\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.awsAuth = exports.redirectUrl = exports.mandatoryMetaColors = exports.endpoints = exports.version = exports.mapConfig = exports.isDev = exports.tagColors = void 0;\nvar colors_1 = require(\"@material-ui/core/colors\");\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nexports.tagColors = {\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n};\nvar domain = process.env.REACT_APP_DOMAIN;\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost';\n}\nloglevel_1.default.debug('config: ', { domain: domain });\nexports.isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development';\nexports.mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n};\nexports.version = process.env.REACT_APP_VERSION;\nexports.endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n};\nexports.mandatoryMetaColors = [colors_1.red, colors_1.green, colors_1.blue, colors_1.orange, colors_1.purple, colors_1.cyan, colors_1.lime, colors_1.brown];\nexports.redirectUrl = new URL(process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/', window.location.origin);\nconsole.log('RedirectUrl', { redirectUrl: exports.redirectUrl, publicUrl: process.env.PUBLIC_URL });\nexports.awsAuth = {\n    Auth: {\n        region: process.env.REACT_APP_AWS_REGION_DEPLOY,\n        userPoolId: process.env.REACT_APP_AWS_USERPOOLID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USERPOOLWEBCLIENTID,\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: exports.redirectUrl,\n            redirectSignOut: exports.redirectUrl,\n            responseType: 'code'\n        }\n    }\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar TextField_1 = __importDefault(require(\"@material-ui/core/TextField\"));\nvar Dialog_1 = __importDefault(require(\"@material-ui/core/Dialog\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\nvar Share_1 = __importDefault(require(\"@material-ui/icons/Share\"));\nvar Close_1 = __importDefault(require(\"@material-ui/icons/Close\"));\nvar DialogContent_1 = __importDefault(require(\"@material-ui/core/DialogContent\"));\nvar DialogContentText_1 = __importDefault(require(\"@material-ui/core/DialogContentText\"));\nvar DialogTitle_1 = __importDefault(require(\"@material-ui/core/DialogTitle\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar react_share_1 = require(\"react-share\");\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    root: {},\n    shareIconTitle: {},\n    shareButtons: {\n        margin: theme.spacing(1, 0),\n        '&>*': {\n            marginRight: theme.spacing(1)\n        }\n    },\n    flexGrow: {\n        flexGrow: 1\n    },\n    dlgTitle: {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        display: 'flex'\n    },\n    closeButton: {\n        flex: '0 0'\n    }\n}); });\nvar ShareDialog = function (_a) {\n    var open = _a.open, shareUrl = _a.shareUrl, handleClose = _a.handleClose;\n    var classes = useStyles();\n    return (react_1.default.createElement(Dialog_1.default, { open: open, onClose: handleClose, \"aria-labelledby\": \"form-dialog-title\" },\n        react_1.default.createElement(DialogTitle_1.default, { className: classes.dlgTitle, disableTypography: true },\n            react_1.default.createElement(IconButton_1.default, { color: \"inherit\" },\n                react_1.default.createElement(Share_1.default, { className: classes.shareIconTitle })),\n            react_1.default.createElement(Typography_1.default, { variant: \"h4\", className: classes.flexGrow }, \"Share\"),\n            react_1.default.createElement(\"div\", { className: classes.closeButton },\n                react_1.default.createElement(IconButton_1.default, { onClick: handleClose, color: \"inherit\" },\n                    react_1.default.createElement(Close_1.default, null)))),\n        react_1.default.createElement(DialogContent_1.default, null,\n            react_1.default.createElement(DialogContentText_1.default, null, \"Copy this link and share it using your preferred method.\"),\n            react_1.default.createElement(TextField_1.default, { value: shareUrl, margin: \"dense\", id: \"name\", variant: \"outlined\", fullWidth: true, inputProps: {\n                    onClick: function (e) {\n                        e.preventDefault();\n                        var target = e.target;\n                        target.select();\n                    }\n                } }),\n            react_1.default.createElement(\"div\", { className: classes.shareButtons },\n                react_1.default.createElement(react_share_1.EmailShareButton, { url: shareUrl },\n                    react_1.default.createElement(react_share_1.EmailIcon, { size: 32, round: true })),\n                react_1.default.createElement(react_share_1.TwitterShareButton, { url: shareUrl },\n                    react_1.default.createElement(react_share_1.TwitterIcon, { size: 32, round: true })),\n                react_1.default.createElement(react_share_1.LinkedinShareButton, { url: shareUrl },\n                    react_1.default.createElement(react_share_1.LinkedinIcon, { size: 32, round: true })),\n                react_1.default.createElement(react_share_1.FacebookShareButton, { url: shareUrl, quote: 'title' },\n                    react_1.default.createElement(react_share_1.FacebookIcon, { size: 32, round: true }))))));\n};\nexports.default = ShareDialog;\n//# sourceMappingURL=ShareDialog.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectTreeLayerTileTypes = exports.ProjectTreeLayerTypes = exports.TileTypes = exports.SymbologyStatus = exports.TilingStatus = exports.AccessEnum = exports.WarehouseRoleEnum = exports.FieldTypeEnum = void 0;\nvar FieldTypeEnum;\n(function (FieldTypeEnum) {\n    FieldTypeEnum[\"string\"] = \"S\";\n    FieldTypeEnum[\"number\"] = \"N\";\n    FieldTypeEnum[\"boolean\"] = \"BOOL\";\n    FieldTypeEnum[\"stringArr\"] = \"SARR\";\n    FieldTypeEnum[\"numberArr\"] = \"NARR\";\n})(FieldTypeEnum = exports.FieldTypeEnum || (exports.FieldTypeEnum = {}));\nvar WarehouseRoleEnum;\n(function (WarehouseRoleEnum) {\n    WarehouseRoleEnum[\"SuperUser\"] = \"SUPER\";\n    WarehouseRoleEnum[\"Admin\"] = \"ADMIN\";\n    WarehouseRoleEnum[\"Observer\"] = \"OBSERVER\";\n    WarehouseRoleEnum[\"Participant\"] = \"PARTICIPANT\";\n})(WarehouseRoleEnum = exports.WarehouseRoleEnum || (exports.WarehouseRoleEnum = {}));\nvar AccessEnum;\n(function (AccessEnum) {\n    AccessEnum[\"Public\"] = \"PUBLIC\";\n    AccessEnum[\"Private\"] = \"PRIVATE\";\n    AccessEnum[\"Secret\"] = \"SECRET\";\n})(AccessEnum = exports.AccessEnum || (exports.AccessEnum = {}));\nvar TilingStatus;\n(function (TilingStatus) {\n    TilingStatus[\"QUEUED\"] = \"QUEUED\";\n    TilingStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n    TilingStatus[\"FETCHING\"] = \"FETCHING\";\n    TilingStatus[\"CREATING\"] = \"CREATING\";\n    TilingStatus[\"TILING_ERROR\"] = \"TILING_ERROR\";\n    TilingStatus[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    TilingStatus[\"FETCH_ERROR\"] = \"FETCH_ERROR\";\n    TilingStatus[\"SUCCESS\"] = \"SUCCESS\";\n})(TilingStatus = exports.TilingStatus || (exports.TilingStatus = {}));\nvar SymbologyStatus;\n(function (SymbologyStatus) {\n    SymbologyStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n    SymbologyStatus[\"FETCHING\"] = \"FETCHING\";\n    SymbologyStatus[\"MISSING\"] = \"MISSING\";\n    SymbologyStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n    SymbologyStatus[\"FOUND\"] = \"FOUND\";\n    SymbologyStatus[\"ERROR\"] = \"ERROR\";\n})(SymbologyStatus = exports.SymbologyStatus || (exports.SymbologyStatus = {}));\nvar TileTypes;\n(function (TileTypes) {\n    TileTypes[\"RASTER\"] = \"RASTER\";\n    TileTypes[\"HTML\"] = \"HTML\";\n    TileTypes[\"VECTOR_SHP\"] = \"VECTOR_SHP\";\n    TileTypes[\"VECTOR_GPKG\"] = \"VECTOR_GPKG\";\n})(TileTypes = exports.TileTypes || (exports.TileTypes = {}));\nvar ProjectTreeLayerTypes;\n(function (ProjectTreeLayerTypes) {\n    ProjectTreeLayerTypes[\"REPORT\"] = \"report\";\n    ProjectTreeLayerTypes[\"RASTER\"] = \"raster\";\n    ProjectTreeLayerTypes[\"LINE\"] = \"line\";\n    ProjectTreeLayerTypes[\"POLYGON\"] = \"polygon\";\n    ProjectTreeLayerTypes[\"POINT\"] = \"point\";\n    ProjectTreeLayerTypes[\"FILE\"] = \"file\";\n    ProjectTreeLayerTypes[\"TIN\"] = \"tin\";\n})(ProjectTreeLayerTypes = exports.ProjectTreeLayerTypes || (exports.ProjectTreeLayerTypes = {}));\nexports.ProjectTreeLayerTileTypes = [\n    ProjectTreeLayerTypes.RASTER,\n    ProjectTreeLayerTypes.POLYGON,\n    ProjectTreeLayerTypes.LINE,\n    ProjectTreeLayerTypes.POINT\n];\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar Tooltip_1 = __importDefault(require(\"@material-ui/core/Tooltip\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    root: {\n        marginLeft: theme.spacing(1) / 2\n    },\n    tooltip: {\n        maxWidth: 220\n    }\n}); });\nvar WarehouseTags = function (_a) {\n    var tags = _a.tags, typographyProps = _a.typographyProps;\n    if (!tags)\n        return null;\n    return (react_1.default.createElement(react_1.default.Fragment, null, tags.reduce(function (acc, ts, idx) { return __spreadArrays(acc, [\n        react_1.default.createElement(Typography_1.default, __assign({ variant: \"caption\" }, typographyProps, { key: \"sep-\" + idx }), idx > 0 && ', '),\n        react_1.default.createElement(Tooltip_1.default, { key: \"whTag-\" + idx, title: react_1.default.createElement(react_1.default.Fragment, null,\n                react_1.default.createElement(Typography_1.default, { variant: \"body1\" },\n                    \"Warehouse Tag: \",\n                    ts),\n                react_1.default.createElement(Typography_1.default, { variant: \"caption\" }, \"Warehouse tags can be added to delineate two identical projects in the warehouse\")) },\n            react_1.default.createElement(Typography_1.default, __assign({ variant: \"caption\", color: \"secondary\" }, typographyProps), ts))\n    ]); }, [])));\n};\nexports.default = WarehouseTags;\n//# sourceMappingURL=WarehouseTags.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\nvar Tooltip_1 = __importDefault(require(\"@material-ui/core/Tooltip\"));\nvar CircularProgress_1 = __importDefault(require(\"@material-ui/core/CircularProgress\"));\nvar CloudDownload_1 = __importDefault(require(\"@material-ui/icons/CloudDownload\"));\nvar moment_1 = __importDefault(require(\"moment\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar useStyles = styles_1.makeStyles(function () { return ({\n    root: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    disabledButton: {\n        opacity: 0.5\n    }\n}); });\nvar DownloadZipBtn = function (_a) {\n    var title = _a.title, project = _a.project, pendingSince = _a.pendingSince, btnProps = _a.btnProps, downloadZipFile = _a.downloadZipFile;\n    var classes = useStyles();\n    var btnRender = (react_1.default.createElement(Tooltip_1.default, { title: react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(Typography_1.default, { variant: \"body1\" }, \"Download Project Zip\"),\n            react_1.default.createElement(Typography_1.default, { variant: \"caption\", paragraph: true }, \"Click to download this project as a single zip file\"),\n            react_1.default.createElement(Typography_1.default, { variant: \"caption\", paragraph: true }, \"There may be a delay if the zip file needs to be built.\")) }, title ? (react_1.default.createElement(Button_1.default, __assign({ variant: \"contained\", color: \"primary\", onClick: function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            downloadZipFile(project);\n        }, startIcon: react_1.default.createElement(CloudDownload_1.default, null) }, btnProps), title || 'ZIP')) : (react_1.default.createElement(IconButton_1.default, __assign({ color: \"primary\", onClick: function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            downloadZipFile(project);\n        } }, btnProps),\n        react_1.default.createElement(CloudDownload_1.default, null)))));\n    if (pendingSince) {\n        btnRender = (react_1.default.createElement(Tooltip_1.default, { title: react_1.default.createElement(react_1.default.Fragment, null,\n                react_1.default.createElement(Typography_1.default, { variant: \"body1\" }, \"Preparing Zip\"),\n                react_1.default.createElement(Typography_1.default, { variant: \"caption\", paragraph: true }, \"The warehouse is building your zip file for you.\"),\n                react_1.default.createElement(Typography_1.default, { variant: \"caption\", paragraph: true },\n                    \"started \",\n                    moment_1.default(pendingSince, 'x').fromNow())) },\n            react_1.default.createElement(Button_1.default, __assign({ variant: \"outlined\", disableFocusRipple: true, disableRipple: true, disableTouchRipple: true, color: \"primary\", onClick: function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }, className: classes.disabledButton, startIcon: react_1.default.createElement(CircularProgress_1.default, { color: btnProps && btnProps.color && btnProps.color === 'secondary' ? 'primary' : 'secondary', size: 24, thickness: 6 }) }, btnProps), title || 'ZIP')));\n    }\n    return react_1.default.createElement(\"div\", { className: classes.root }, btnRender);\n};\nexports.default = DownloadZipBtn;\n//# sourceMappingURL=DownloadZipBtn.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\nvar Tooltip_1 = __importDefault(require(\"@material-ui/core/Tooltip\"));\nvar Public_1 = __importDefault(require(\"@material-ui/icons/Public\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar useStyles = styles_1.makeStyles(function () { return ({\n    root: {\n        '& *': {\n            cursor: 'pointer'\n        }\n    },\n    disabledButton: {\n        opacity: 0.5\n    }\n}); });\nvar WebRaveBtn = function (_a) {\n    var title = _a.title, project = _a.project, url = _a.url, btnProps = _a.btnProps;\n    var classes = useStyles();\n    if (!url || url.length === 0)\n        return null;\n    var webRaveUrl = url + \"#/\" + project.program + \"/\" + project.id;\n    var btnRender = (react_1.default.createElement(Tooltip_1.default, { title: react_1.default.createElement(react_1.default.Fragment, null,\n            react_1.default.createElement(Typography_1.default, { variant: \"body1\" }, \"Explore using map\"),\n            react_1.default.createElement(Typography_1.default, { variant: \"caption\", paragraph: true }, \"Explore this data set using an online map\")) }, title ? (react_1.default.createElement(Button_1.default, __assign({ variant: \"contained\", onClick: function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            window.open(webRaveUrl);\n        }, color: \"primary\", startIcon: react_1.default.createElement(Public_1.default, null) }, btnProps), title || 'MAP')) : (react_1.default.createElement(IconButton_1.default, __assign({ color: \"primary\", onClick: function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            window.open(webRaveUrl);\n        } }, btnProps),\n        react_1.default.createElement(Public_1.default, null)))));\n    return react_1.default.createElement(\"div\", { className: classes.root }, btnRender);\n};\nexports.default = WebRaveBtn;\n//# sourceMappingURL=WebRaveBtn.js.map","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.accessColors = void 0;\nvar common_1 = require(\"@riverscapes/common\");\nvar colors_1 = require(\"@material-ui/core/colors\");\nexports.accessColors = (_a = {},\n    _a[common_1.WarehouseRoleEnum.SuperUser] = colors_1.pink,\n    _a[common_1.WarehouseRoleEnum.Admin] = colors_1.red,\n    _a[common_1.WarehouseRoleEnum.Participant] = colors_1.lime,\n    _a[common_1.WarehouseRoleEnum.Observer] = colors_1.blue,\n    _a);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar Container_1 = __importDefault(require(\"@material-ui/core/Container\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    root: {\n        display: 'flex',\n        zIndex: theme.zIndex.drawer + 1\n    },\n    text: {\n        flexGrow: 1\n    },\n    logo: {}\n}); });\nvar Footer = function (_a) {\n    var version = _a.version;\n    var classes = useStyles();\n    return (react_1.default.createElement(Container_1.default, { className: classes.root, maxWidth: \"md\" },\n        version && (react_1.default.createElement(Typography_1.default, { component: \"div\", className: classes.text, color: \"textSecondary\", variant: \"overline\" },\n            \"v.\",\n            version)),\n        react_1.default.createElement(\"img\", { className: classes.logo, alt: \"footer\", src: process.env.PUBLIC_URL + \"/cc-watermarks-riverscapes_orig.png\" })));\n};\nexports.default = Footer;\n//# sourceMappingURL=Footer.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDisabled = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar Toolbar_1 = __importDefault(require(\"@material-ui/core/Toolbar\"));\nvar AppBar_1 = __importDefault(require(\"@material-ui/core/AppBar\"));\nvar Divider_1 = __importDefault(require(\"@material-ui/core/Divider\"));\nvar MenuItem_1 = __importDefault(require(\"@material-ui/core/MenuItem\"));\nvar Menu_1 = __importDefault(require(\"@material-ui/core/Menu\"));\nvar Share_1 = __importDefault(require(\"@material-ui/icons/Share\"));\nvar SupervisorAccount_1 = __importDefault(require(\"@material-ui/icons/SupervisorAccount\"));\nvar ListAlt_1 = __importDefault(require(\"@material-ui/icons/ListAlt\"));\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\nvar MoreVert_1 = __importDefault(require(\"@material-ui/icons/MoreVert\"));\nvar common_1 = require(\"@riverscapes/common\");\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar core_1 = require(\"@material-ui/core\");\nvar Topbar_style_1 = __importDefault(require(\"./Topbar.style\"));\nvar ShareDialog_1 = __importDefault(require(\"../modals/ShareDialog\"));\nvar config_1 = require(\"../config\");\nvar useStyles = styles_1.makeStyles(Topbar_style_1.default);\nfunction isDisabled(prog) {\n    if (prog.meta && prog.meta.access && prog.meta.access === 'PUBLIC')\n        return false;\n    return prog.role === null;\n}\nexports.isDisabled = isDisabled;\nvar TopBar = function (_a) {\n    var title = _a.title, program = _a.program, programs = _a.programs, signOutHandler = _a.signOutHandler, toolbarItems = _a.toolbarItems, shareUrl = _a.shareUrl, history = _a.history;\n    var classes = useStyles();\n    var _b = react_1.useState(false), shareOpen = _b[0], setShareOpen = _b[1];\n    var _c = react_1.useState(null), mobileMoreAnchorEl = _c[0], setMobileMoreAnchorEl = _c[1];\n    var handleMobileMenuClose = function () { return setMobileMoreAnchorEl(null); };\n    var handleShareMenuOpen = function () { return setShareOpen(true); };\n    var handleNavigate = function (nm) {\n        handleMobileMenuClose();\n        if (history)\n            history.push(\"/\" + nm.machineName);\n    };\n    var isAdmin = history && history.location.pathname.indexOf('/admin') > -1;\n    var handleAdmin = function () {\n        if (history) {\n            if (isAdmin)\n                history.push(\"/\" + program.machineName);\n            else\n                history.push(\"/\" + program.machineName + \"/admin\");\n        }\n    };\n    var handleMobileMenuOpen = function (event) { return setMobileMoreAnchorEl(event.currentTarget); };\n    var renderMobileMenu = (signOutHandler || programs) && (react_1.default.createElement(Menu_1.default, { anchorEl: mobileMoreAnchorEl, anchorOrigin: { vertical: 'top', horizontal: 'right' }, keepMounted: true, transformOrigin: { vertical: 'top', horizontal: 'right' }, open: !!mobileMoreAnchorEl, onClose: handleMobileMenuClose },\n        programs && (react_1.default.createElement(MenuItem_1.default, null,\n            react_1.default.createElement(core_1.Typography, { variant: \"overline\", onClick: function () { return history.push(\"/\"); } }, \"Programs\"))),\n        programs && react_1.default.createElement(Divider_1.default, null),\n        programs &&\n            programs.length > 0 &&\n            programs.map(function (prog, idx) { return (react_1.default.createElement(MenuItem_1.default, { disabled: (program && program.machineName === prog.machineName) || isDisabled(prog), key: \"prog-\" + idx, onClick: function () { return handleNavigate(prog); }, value: prog.machineName }, prog.name)); }),\n        signOutHandler && react_1.default.createElement(Divider_1.default, null),\n        signOutHandler && react_1.default.createElement(MenuItem_1.default, { onClick: signOutHandler }, \"Log Out\")));\n    var showAdmin = program && (program.role === common_1.WarehouseRoleEnum.Admin || program.role === common_1.WarehouseRoleEnum.SuperUser);\n    return (react_1.default.createElement(react_1.default.Fragment, null,\n        react_1.default.createElement(AppBar_1.default, { position: \"static\", className: classes.appBar },\n            react_1.default.createElement(Toolbar_1.default, { className: classes.root, disableGutters: true },\n                react_1.default.createElement(\"a\", { href: \"http://riverscapes.xyz/\" },\n                    react_1.default.createElement(\"img\", { className: classes.logo, src: 'https://riverscapes.xyz/assets/images/RiverscapesLogo.png', alt: \"logo\" })),\n                program ? (react_1.default.createElement(\"div\", null,\n                    react_1.default.createElement(core_1.Typography, { variant: \"subtitle1\" }, program.name),\n                    react_1.default.createElement(core_1.Typography, { variant: \"caption\" }, title))) : (react_1.default.createElement(core_1.Typography, { variant: \"subtitle1\" }, title)),\n                react_1.default.createElement(\"div\", { className: classes.spacer }),\n                config_1.version && (react_1.default.createElement(core_1.Typography, { component: \"div\", className: classes.text, color: \"inherit\", variant: \"overline\" },\n                    \"v.\",\n                    config_1.version)),\n                showAdmin && (react_1.default.createElement(IconButton_1.default, { \"aria-haspopup\": \"true\", onClick: handleAdmin, color: \"inherit\" }, isAdmin ? react_1.default.createElement(ListAlt_1.default, null) : react_1.default.createElement(SupervisorAccount_1.default, null))),\n                toolbarItems,\n                shareUrl && (react_1.default.createElement(IconButton_1.default, { \"aria-haspopup\": \"true\", onClick: handleShareMenuOpen, color: \"inherit\" },\n                    react_1.default.createElement(Share_1.default, null))),\n                (signOutHandler || programs) && (react_1.default.createElement(IconButton_1.default, { \"aria-haspopup\": \"true\", onClick: handleMobileMenuOpen, color: \"inherit\" },\n                    react_1.default.createElement(MoreVert_1.default, null))))),\n        renderMobileMenu,\n        react_1.default.createElement(ShareDialog_1.default, { open: shareOpen, shareUrl: shareUrl, handleClose: function () { return setShareOpen(false); } })));\n};\nexports.default = TopBar;\n//# sourceMappingURL=Topbar.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyMeta = exports.augmentXML = exports.parseProjectXML = exports.parseProgramXML = exports.parseXMLMeta = exports.getXML = void 0;\nvar xml2js_1 = require(\"xml2js\");\nvar axios_1 = __importDefault(require(\"axios\"));\nvar _1 = require(\"./\");\nvar xmldom_1 = __importDefault(require(\"xmldom\"));\nfunction getXML(url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var result;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, axios_1.default({\n                        url: url,\n                        method: 'get'\n                    })];\n                case 1:\n                    result = _a.sent();\n                    if (!result.data)\n                        throw new Error('Error retrieving XML file');\n                    return [2, result.data];\n            }\n        });\n    });\n}\nexports.getXML = getXML;\nfunction parseXMLMeta(metaArr) {\n    try {\n        return metaArr.reduce(function (acc, _a) {\n            var _b;\n            var $ = _a.$, _ = _a._;\n            return (__assign(__assign({}, acc), (_b = {}, _b[$.name] = _ && _.trim(), _b)));\n        }, {});\n    }\n    catch (_a) {\n        return {};\n    }\n}\nexports.parseXMLMeta = parseXMLMeta;\nfunction _recursePaths(xmlDom, products, groups, collections) {\n    var HierarchyNode = xmlDom.getElementsByTagName('Hierarchy')[0];\n    var productsInHierarchy = Array.from(HierarchyNode.getElementsByTagName('Product'));\n    var retVal = [];\n    productsInHierarchy.forEach(function (prodEl) {\n        var pathArr = [];\n        var ref = prodEl.getAttribute('ref');\n        var product = products.find(function (o) { return o.id === ref; });\n        if (!product)\n            throw new Error(\"Product not found for ref='\" + ref + \"'\");\n        var currEl = prodEl.parentNode;\n        var _loop_1 = function () {\n            var ref_1 = currEl.getAttribute('ref');\n            var tag = currEl.tagName;\n            var def = tag === 'Group' ? groups.find(function (g) { return g.id === ref_1; }) : collections.find(function (g) { return g.id === ref_1; });\n            var folder = def.folder, name_1 = def.name;\n            pathArr.push({\n                type: tag,\n                id: ref_1,\n                folder: folder,\n                name: name_1\n            });\n            currEl = currEl.parentNode;\n        };\n        while (currEl && currEl.parentNode && currEl.tagName !== 'Hierarchy') {\n            _loop_1();\n        }\n        retVal.push(__assign(__assign({}, product), { pathArr: pathArr.reverse() }));\n    });\n    return retVal;\n}\nfunction parseProgramXML(rawXML) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedProgramJSON, _a, projectFile, projectXSDs, meta, collections, groups, productsRaw, xmlDom, products;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, xml2js_1.parseStringPromise(rawXML).catch(function (err) {\n                        throw new _1.ValidationError('Error parsing XML file. This likely means a broken or unclosed tag.', [err.message]);\n                    })];\n                case 1:\n                    parsedProgramJSON = _b.sent();\n                    _a = parseXMLMeta(parsedProgramJSON.Program.MetaData[0].Meta), projectFile = _a.projectFile, projectXSDs = _a.projectXSDs, meta = __rest(_a, [\"projectFile\", \"projectXSDs\"]);\n                    collections = parsedProgramJSON.Program.Definitions[0].Collections[0].Collection.map(function (_a) {\n                        var $ = _a.$, Allow = _a.Allow, AllowRegex = _a.AllowRegex;\n                        return (__assign(__assign({}, $), { Allow: Allow ? (Array.isArray(Allow) ? Allow.map(function (a) { return a.$; }) : [Allow]) : undefined, AllowRegex: AllowRegex\n                                ? Array.isArray(AllowRegex)\n                                    ? AllowRegex.map(function (a) { return a.$.pattern; })\n                                    : [AllowRegex.pattern]\n                                : undefined }));\n                    });\n                    groups = [];\n                    if (parsedProgramJSON.Program.Definitions[0].Groups[0].Group) {\n                        if (Array.isArray(parsedProgramJSON.Program.Definitions[0].Groups[0].Group))\n                            groups = parsedProgramJSON.Program.Definitions[0].Groups[0].Group.map(function (a) { return a.$; });\n                        else\n                            groups = [parsedProgramJSON.Program.Definitions[0].Groups[0].Group];\n                    }\n                    productsRaw = [];\n                    if (parsedProgramJSON.Program.Definitions[0].Products[0].Product) {\n                        if (Array.isArray(parsedProgramJSON.Program.Definitions[0].Products[0].Product))\n                            productsRaw = parsedProgramJSON.Program.Definitions[0].Products[0].Product.map(function (a) { return a.$; });\n                        else\n                            productsRaw = [parsedProgramJSON.Program.Definitions[0].Products[0].Product];\n                    }\n                    xmlDom = new xmldom_1.default.DOMParser().parseFromString(rawXML);\n                    products = _recursePaths(xmlDom, productsRaw, groups, collections);\n                    return [2, Promise.resolve(new _1.Program({\n                            name: parsedProgramJSON.Program.Name[0],\n                            machineName: parsedProgramJSON.Program.MachineName[0],\n                            projectXSDs: projectXSDs,\n                            projectFile: projectFile,\n                            meta: meta,\n                            products: products,\n                            collections: collections,\n                            groups: groups\n                        }))];\n            }\n        });\n    });\n}\nexports.parseProgramXML = parseProgramXML;\nfunction parseProjectXML(rawXML) {\n    return __awaiter(this, void 0, void 0, function () {\n        var parsedProjectJSON, retVal, whMeta, meta;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, xml2js_1.parseStringPromise(rawXML).catch(function (err) {\n                        throw new _1.ValidationError('Error parsing XML file. This likely means a broken or unclosed tag.', [err.message]);\n                    })];\n                case 1:\n                    parsedProjectJSON = _a.sent();\n                    retVal = parsedProjectJSON.Project;\n                    whMeta = {};\n                    if (retVal.Warehouse) {\n                        whMeta = parseXMLMeta(retVal.Warehouse[0].Meta);\n                    }\n                    meta = {};\n                    if (retVal.MetaData) {\n                        meta = parseXMLMeta(retVal.MetaData[0].Meta);\n                    }\n                    return [2, Promise.resolve({\n                            id: whMeta.id,\n                            name: retVal.Name[0],\n                            projType: retVal.ProjectType[0],\n                            Warehouse: whMeta,\n                            program: whMeta.program,\n                            meta: meta,\n                            tags: _1.Project.parseTagString(whMeta.tags),\n                            xml: rawXML,\n                            parsedProjectJSON: parsedProjectJSON,\n                            rawXML: rawXML\n                        })];\n            }\n        });\n    });\n}\nexports.parseProjectXML = parseProjectXML;\nfunction augmentXML(newMeta, xmlfile) {\n    var parsed = new xmldom_1.default.DOMParser().parseFromString(xmlfile);\n    var metadata = parsed.getElementsByTagName('MetaData')[0];\n    if (parsed.getElementsByTagName('Warehouse').length > 0) {\n        parsed.removeChild(parsed.getElementsByTagName('Warehouse')[0]);\n    }\n    var warehouseNode = parsed.createElement('Warehouse');\n    Object.keys(newMeta).forEach(function (k) {\n        var mNode = parsed.createElement('Meta');\n        mNode.setAttribute('name', k);\n        mNode.appendChild(parsed.createTextNode(newMeta[k]));\n        warehouseNode.appendChild(mNode);\n    });\n    parsed.insertBefore(warehouseNode, metadata);\n    var formatted = new xmldom_1.default.XMLSerializer().serializeToString(parsed);\n    return formatted;\n}\nexports.augmentXML = augmentXML;\nfunction verifyMeta(projType, projectMeta, program) {\n    var projectDef = program.products.find(function (p) { return p.id === projType; });\n    if (!projectDef) {\n        throw new Error(\"No project type '\" + projType + \"' found in program '\" + program.name + \"'\");\n    }\n    var collectionathArrs = projectDef.pathArr.filter(function (f) { return f.type === 'Collection'; });\n    return collectionathArrs.map(function (arrEl) { return ({\n        name: arrEl.name,\n        value: projectMeta[arrEl.name]\n    }); });\n}\nexports.verifyMeta = verifyMeta;\n//# sourceMappingURL=xml.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adminGetUsers = exports.adminUpdateUserPermissions = exports.search = exports.deleteProject = exports.downloadZipFile = exports.getWebVectorSymbology = exports.getLayerTiles = exports.downloadFile = exports.getUploadUrls = exports.getProject = exports.getProgram = exports.getPrograms = exports.validateProjectXML = exports.authCheck = exports.apiCall = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar graphql_1 = require(\"graphql\");\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar _1 = require(\"./\");\nexports.apiCall = function (url, jwt, query, variables) {\n    return axios_1.default({\n        url: url,\n        method: 'post',\n        headers: jwt\n            ? {\n                Authorization: \"Bearer \" + jwt\n            }\n            : null,\n        data: {\n            query: graphql_1.print(query),\n            variables: variables\n        }\n    })\n        .then(function (_a) {\n        var axiosData = _a.data;\n        return axiosData;\n    })\n        .catch(function (err) {\n        if (err.response && err.response.status === 404) {\n            throw new Error(\"API Url not found: \" + url);\n        }\n        else if (err.code && err.code === 'ECONNREFUSED') {\n            throw new Error(\"Connection refused. Could not contact: '\" + url + \"'\");\n        }\n        else {\n            loglevel_1.default.error('apiCall Error', { url: url, jwt: jwt, query: graphql_1.print(query), variables: variables, err: err });\n            throw err;\n        }\n    });\n};\nfunction authCheck(url, jwt) {\n    return exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n            }\\n        \"], [\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                    domain\\n                }\\n            }\\n        \"]))), {});\n}\nexports.authCheck = authCheck;\nfunction validateProjectXML(url, jwt, xml, projType, program) {\n    return exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\\n                validate(xml: $xml, projType: $projType, program: $program) {\\n                    result\\n                    xmlErrors\\n                }\\n            }\\n        \"], [\"\\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\\n                validate(xml: $xml, projType: $projType, program: $program) {\\n                    result\\n                    xmlErrors\\n                }\\n            }\\n        \"]))), { xml: xml, program: program, projType: projType });\n}\nexports.validateProjectXML = validateProjectXML;\nfunction getPrograms(url, jwt) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n            query programs {\\n                programs {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query programs {\\n                programs {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"])))).then(function (gqlReturn) {\n                    return __assign(__assign({}, gqlReturn), { data: {\n                            programs: gqlReturn.data.programs.map(_1.Program.fromGraphQL)\n                        } });\n                })];\n        });\n    });\n}\nexports.getPrograms = getPrograms;\nfunction getProgram(url, jwt, programName) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, program, errors;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"], [\"\\n            query program($program: String!) {\\n                program(program: $program) {\\n                    name\\n                    machineName\\n                    projectXSDs\\n                    projectFile\\n                    role\\n                    groups {\\n                        id\\n                        name\\n                        folder\\n                    }\\n                    collections {\\n                        id\\n                        name\\n                        AllowRegex\\n                        Allow {\\n                            id\\n                            name\\n                            aliases\\n                            folder\\n                        }\\n                    }\\n                    products {\\n                        id\\n                        name\\n                        folder\\n                        pathArr\\n                    }\\n                    hierarchy\\n                    meta\\n                }\\n            }\\n        \"]))), { program: programName })];\n                case 1:\n                    _a = _b.sent(), program = _a.data.program, errors = _a.errors;\n                    return [2, {\n                            data: {\n                                program: _1.Program.fromGraphQL(program)\n                            },\n                            errors: errors\n                        }];\n            }\n        });\n    });\n}\nexports.getProgram = getProgram;\nfunction getProject(url, jwt, id, program, files, tree) {\n    if (files === void 0) { files = false; }\n    if (tree === void 0) { tree = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n            query getProject($id: ID!, $program: String!) {\\n                project(id: $id, program: $program) {\\n                    id\\n                    name\\n                    projType\\n                    totalSize\\n                    program\\n                    tags\\n                    createdBy\\n                    updatedBy\\n                    createdOn\\n                    updatedOn\\n                    meta\\n                    \", \"\\n                    \", \"\\n                }\\n            }\\n        \"], [\"\\n            query getProject($id: ID!, $program: String!) {\\n                project(id: $id, program: $program) {\\n                    id\\n                    name\\n                    projType\\n                    totalSize\\n                    program\\n                    tags\\n                    createdBy\\n                    updatedBy\\n                    createdOn\\n                    updatedOn\\n                    meta\\n                    \",\n                    \"\\n                    \",\n                    \"\\n                }\\n            }\\n        \"])), files\n                    ? \"\\n                    files {\\n                        key\\n                        md5\\n                        size\\n                        downloadUrl\\n                    }\"\n                    : '', tree\n                    ? \"\\n                        tree {\\n                            name\\n                            description\\n                            projectType\\n                            metaStr\\n                            leaves {\\n                                id\\n                                pid\\n                                label\\n                                layerId\\n                                blLayerId\\n                                layerType\\n                                layerPath\\n                                layerName\\n                                nodeExists\\n                                metaStr\\n                                symbology\\n                                transparency\\n                            }\\n                            branches {\\n                                label\\n                                collapsed\\n                                bid\\n                                pid\\n                            }\\n                            defaultView\\n                            views  {\\n                                id\\n                                name\\n                                description\\n                                layers{\\n                                id\\n                                visible\\n                                }\\n                            }\\n                        }\\n                    \"\n                    : ''), { id: id, program: program }).then(function (gqlReturn) { return (__assign(__assign({}, gqlReturn), { data: {\n                        project: _1.Project.fromGraphQL(gqlReturn.data.project)\n                    } })); })];\n        });\n    });\n}\nexports.getProject = getProject;\nfunction getUploadUrls(url, jwt, id, fileList, projectType, program) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\\n                    id\\n                    uploadUrls {\\n                        url\\n                        fields\\n                        origPath\\n                    }\\n                }\\n            }\\n        \"], [\"\\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\\n                    id\\n                    uploadUrls {\\n                        url\\n                        fields\\n                        origPath\\n                    }\\n                }\\n            }\\n        \"]))), { id: id, files: fileList, projectType: projectType, program: program })];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.getUploadUrls = getUploadUrls;\nfunction downloadFile(url, jwt, projType, program, id, filePath) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                }\\n            }\\n        \"], [\"\\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id, filePath: filePath })];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.downloadFile = downloadFile;\nfunction getLayerTiles(url, jwt, projType, program, id, layerPath) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, retVal;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_8 || (templateObject_8 = __makeTemplateObject([\"\\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\\n                    url\\n                    indexUrl\\n                    status\\n                    lastStatus\\n                    error\\n                    rsLayer\\n                    started\\n                    duration\\n                    format\\n                    bounds\\n                    maxZoom\\n                    minZoom\\n                    originFile {\\n                        lastModified\\n                        etag\\n                        size\\n                        key\\n                    }\\n                }\\n            }\\n        \"], [\"\\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\\n                    url\\n                    indexUrl\\n                    status\\n                    lastStatus\\n                    error\\n                    rsLayer\\n                    started\\n                    duration\\n                    format\\n                    bounds\\n                    maxZoom\\n                    minZoom\\n                    originFile {\\n                        lastModified\\n                        etag\\n                        size\\n                        key\\n                    }\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id, layerPath: layerPath })];\n                case 1:\n                    res = _a.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        retVal = res.data.getLayerTiles;\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    getLayerTiles: __assign(__assign({}, retVal), { started: retVal && retVal.started && parseInt(retVal.started, 10), lastStatus: retVal && retVal.lastStatus && parseInt(retVal.lastStatus, 10), rasterStats: retVal && retVal.rasterStats && JSON.parse(retVal.rasterStats), rsLayer: retVal && retVal.rsLayer && JSON.parse(retVal.rsLayer), originFile: retVal &&\n                                            retVal.originFile && __assign(__assign({}, retVal.originFile), { lastModified: parseInt(retVal.originFile.lastModified, 10) }) })\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.getLayerTiles = getLayerTiles;\nfunction getWebVectorSymbology(url, jwt, projType, name) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_9 || (templateObject_9 = __makeTemplateObject([\"\\n            query getWebVectorSymbologyQuery($projType: String!, $name: String!) {\\n                getWebVectorSymbology(projType: $projType, name: $name) {\\n                    name\\n                    symbologyJSON\\n                    url\\n                    error\\n                }\\n            }\\n        \"], [\"\\n            query getWebVectorSymbologyQuery($projType: String!, $name: String!) {\\n                getWebVectorSymbology(projType: $projType, name: $name) {\\n                    name\\n                    symbologyJSON\\n                    url\\n                    error\\n                }\\n            }\\n        \"]))), { projType: projType, name: name })];\n                case 1:\n                    res = _a.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    getWebVectorSymbology: res.data.getWebVectorSymbology && __assign(__assign({}, res.data.getWebVectorSymbology), { symbologyJSON: res.data.getWebVectorSymbology.symbologyJSON &&\n                                            JSON.parse(res.data.getWebVectorSymbology.symbologyJSON) })\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.getWebVectorSymbology = getWebVectorSymbology;\nfunction downloadZipFile(url, jwt, projType, program, id) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_10 || (templateObject_10 = __makeTemplateObject([\"\\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\\n                downloadZip(program: $program, id: $id, projType: $projType) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                    pendingSince\\n                }\\n            }\\n        \"], [\"\\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\\n                downloadZip(program: $program, id: $id, projType: $projType) {\\n                    key\\n                    md5\\n                    contentType\\n                    size\\n                    downloadUrl\\n                    pendingSince\\n                }\\n            }\\n        \"]))), { projType: projType, program: program, id: id })];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.downloadZipFile = downloadZipFile;\nfunction deleteProject(url, jwt, id, program) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_11 || (templateObject_11 = __makeTemplateObject([\"\\n            mutation deleteProject($id: ID!, $program: String!) {\\n                deleteProject(id: $id, program: $program)\\n            }\\n        \"], [\"\\n            mutation deleteProject($id: ID!, $program: String!) {\\n                deleteProject(id: $id, program: $program)\\n            }\\n        \"]))), { program: program, id: id })];\n                case 1:\n                    response = _a.sent();\n                    return [2, response];\n            }\n        });\n    });\n}\nexports.deleteProject = deleteProject;\nfunction search(url, jwt, program, params) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, _a, nextToken, projects, total;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_12 || (templateObject_12 = __makeTemplateObject([\"\\n            query searchQuery(\\n                $program: String!\\n                $projType: String\\n                $nameStr: String\\n                $metaStr: String\\n                $metaArr: String\\n                $tags: String\\n                $noTags: Boolean\\n                $limit: Int\\n                $nextToken: Int\\n            ) {\\n                search(\\n                    program: $program\\n                    projType: $projType\\n                    nameStr: $nameStr\\n                    metaStr: $metaStr\\n                    metaArr: $metaArr\\n                    tags: $tags\\n                    noTags: $noTags\\n                    limit: $limit\\n                    nextToken: $nextToken\\n                ) {\\n                    projects {\\n                        id\\n                        name\\n                        projType\\n                        program\\n                        tags\\n                        totalSize\\n                        createdBy\\n                        updatedBy\\n                        createdOn\\n                        updatedOn\\n                        meta\\n                        score\\n                    }\\n                    nextToken\\n                    total\\n                }\\n            }\\n        \"], [\"\\n            query searchQuery(\\n                $program: String!\\n                $projType: String\\n                $nameStr: String\\n                $metaStr: String\\n                $metaArr: String\\n                $tags: String\\n                $noTags: Boolean\\n                $limit: Int\\n                $nextToken: Int\\n            ) {\\n                search(\\n                    program: $program\\n                    projType: $projType\\n                    nameStr: $nameStr\\n                    metaStr: $metaStr\\n                    metaArr: $metaArr\\n                    tags: $tags\\n                    noTags: $noTags\\n                    limit: $limit\\n                    nextToken: $nextToken\\n                ) {\\n                    projects {\\n                        id\\n                        name\\n                        projType\\n                        program\\n                        tags\\n                        totalSize\\n                        createdBy\\n                        updatedBy\\n                        createdOn\\n                        updatedOn\\n                        meta\\n                        score\\n                    }\\n                    nextToken\\n                    total\\n                }\\n            }\\n        \"]))), __assign(__assign({}, params), { program: program }))];\n                case 1:\n                    res = _b.sent();\n                    if (!res.data)\n                        return [2, { errors: res.errors }];\n                    else {\n                        _a = res.data.search || {}, nextToken = _a.nextToken, projects = _a.projects, total = _a.total;\n                        return [2, {\n                                errors: res.errors,\n                                data: {\n                                    search: {\n                                        projects: Array.isArray(projects) ? projects.map(_1.Project.fromGraphQL) : projects,\n                                        nextToken: nextToken,\n                                        total: total\n                                    }\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.search = search;\nfunction adminUpdateUserPermissions(url, jwt, id, program, permission) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_13 || (templateObject_13 = __makeTemplateObject([\"\\n            mutation project($id: ID!, $program: String!, $permission: String) {\\n                updateUser(id: $id, program: $program, permission: $permission) {\\n                    email\\n                    name\\n                    picture\\n                    username\\n                    createdOn\\n                    updatedOn\\n                    role\\n                }\\n            }\\n        \"], [\"\\n            mutation project($id: ID!, $program: String!, $permission: String) {\\n                updateUser(id: $id, program: $program, permission: $permission) {\\n                    email\\n                    name\\n                    picture\\n                    username\\n                    createdOn\\n                    updatedOn\\n                    role\\n                }\\n            }\\n        \"]))), { program: program, id: id, permission: permission })];\n                case 1:\n                    response = _a.sent();\n                    if (!response.data)\n                        return [2, { errors: response.errors }];\n                    else {\n                        return [2, {\n                                errors: response.errors,\n                                data: {\n                                    updateUser: response.data.updateUser\n                                        ? __assign(__assign({}, response.data.updateUser), { createdOn: parseInt(response.data.updateUser.createdOn, 10), updatedOn: parseInt(response.data.updateUser.updatedOn, 10) }) : null\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.adminUpdateUserPermissions = adminUpdateUserPermissions;\nfunction adminGetUsers(url, jwt, program, limit, nextToken) {\n    return __awaiter(this, void 0, void 0, function () {\n        var response, _a, nextTokenNEW, users;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4, exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_14 || (templateObject_14 = __makeTemplateObject([\"\\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\\n                    users {\\n                        email\\n                        name\\n                        picture\\n                        username\\n                        createdOn\\n                        updatedOn\\n                        role\\n                    }\\n                    nextToken\\n                }\\n            }\\n        \"], [\"\\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\\n                    users {\\n                        email\\n                        name\\n                        picture\\n                        username\\n                        createdOn\\n                        updatedOn\\n                        role\\n                    }\\n                    nextToken\\n                }\\n            }\\n        \"]))), { program: program, limit: limit, nextToken: nextToken })];\n                case 1:\n                    response = _b.sent();\n                    if (!response.data)\n                        return [2, { errors: response.errors }];\n                    else {\n                        _a = response.data.getUsers || {}, nextTokenNEW = _a.nextToken, users = _a.users;\n                        return [2, {\n                                errors: response.errors,\n                                data: {\n                                    getUsers: {\n                                        users: Array.isArray(users)\n                                            ? users.map(function (u) { return (__assign(__assign({}, u), { createdOn: parseInt(u.createdOn, 10), updatedOn: parseInt(u.updatedOn, 10) })); })\n                                            : users,\n                                        nextToken: nextTokenNEW\n                                    }\n                                }\n                            }];\n                    }\n                    return [2];\n            }\n        });\n    });\n}\nexports.adminGetUsers = adminGetUsers;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar types_1 = require(\"./types\");\nvar typeDefs = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        mutation: Mutation\\n    }\\n\\n    type Query {\\n        # Get a project and associated metadata\\n        auth: AuthParams\\n\\n        project(id: ID!, program: String!): Project\\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\\n\\n        program(program: String!): Program\\n        programs: [Program]\\n\\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\\n\\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\\n\\n        getWebVectorSymbology(projType: String, name: String!): Symbology\\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\\n\\n\\n        # Request an upload start. Writes a manifest file on the upload bucket\\n        # and creates upload urls for everything\\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\\n\\n        search(\\n            program: String!\\n            projType: String\\n            nameStr: String\\n            metaStr: String\\n            metaArr: String\\n            tags: String\\n            noTags: Boolean\\n            limit: Int\\n            nextToken: Int\\n        ): PaginatedSearchResults\\n\\n        validate(xml: String!, projType: String!, program: String!): Validation\\n\\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\\n\\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\\n    }\\n\\n    # this schema allows the following mutation:\\n    type Mutation {\\n        # signal a deletion of a project\\n        deleteProject(id: ID!, program: String!): ID!\\n        updateUser(id: ID!, program: String!, permission: String): User\\n    }\\n\\n    type User {\\n        email: String\\n        name: String\\n        picture: String\\n        username: String!\\n        createdOn: String\\n        updatedOn: String\\n        role: String\\n    }\\n\\n    type PaginatedUsers {\\n        users: [User]\\n        nextToken: String\\n    }\\n\\n    type Validation {\\n        result: Boolean\\n        xmlErrors: [String]\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n        domain: String\\n    }\\n\\n    interface ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n    }\\n\\n    type Project implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        files: [FileDownloadMeta]\\n        tree: ProjectTree\\n    }\\n\\n    type ProjectSearchResult implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        score: Float\\n        files: [FileDownloadMeta]\\n    }\\n\\n    # This is mostly just JSON that's stringified\\n    type Product {\\n        id: ID!\\n        name: String!\\n        folder: String\\n        # Stringified JSON Array:\\n        pathArr: String\\n    }\\n    type Group {\\n        id: ID!\\n        name: String!\\n        folder: String\\n    }\\n    type NamedAllow {\\n        id: ID!\\n        name: String!\\n        aliases: String\\n        folder: String\\n    }\\n    type Collection {\\n        id: ID!\\n        name: String!\\n        AllowRegex: [String]\\n        Allow: [NamedAllow]\\n    }\\n    type Program {\\n        name: String\\n        machineName: String\\n        projectXSDs: String\\n        projectFile: String\\n        meta: String\\n        groups: [Group]\\n        collections: [Collection]\\n        products: [Product]\\n        hierarchy: String\\n        role: String\\n    }\\n\\n    type FileDownloadMeta {\\n        key: String!\\n        md5: String!\\n        size: String\\n        contentType: String\\n        downloadUrl: String!\\n        pendingSince: String\\n    }\\n\\n    type FileUpload {\\n        id: ID!\\n        uploadUrls: [UploadUrl]\\n    }\\n\\n    type UploadUrl {\\n        url: String\\n        fields: String\\n        origPath: String\\n    }\\n\\n    type FileUploadMeta {\\n        key: String!\\n        downloadUrl: String!\\n    }\\n\\n    # Series Connection allows us to implement pagination easily\\n    type PaginatedProjects {\\n        projects: [Project]\\n        nextToken: String\\n    }\\n\\n    type PaginatedSearchResults {\\n        projects: [ProjectSearchResult]\\n        nextToken: Int\\n        total: Int\\n    }\\n\\n    type NewProject {\\n        id: ID!\\n    }\\n\\n    \\\"\\\"\\\"\\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\\n    correct icon and assign them to the right slot\\n    \\\"\\\"\\\"\\n    enum ProjectTreeLayerTypes {\\n        \", \"\\n    }\\n    enum SymbologyStatus {\\n        \", \"\\n    }\\n    enum TilingStatus {\\n        \", \"\\n    }\\n\\n    type ProjectTreeBranch {\\n        label: String!\\n        collapsed: Boolean\\n        # Branch ID and parent ID\\n        bid: Int\\n        pid: Int\\n    }\\n    type ProjectTreeLeaf {\\n        id: Int # This is a global ID not an id within a branch\\n        pid: Int\\n        label: String!\\n        layerId: ID\\n        blLayerId: ID\\n        layerType: ProjectTreeLayerTypes!\\n        layerPath: String\\n        layerName: String\\n        nodeExists: Boolean\\n        # This is the path that helps u\\n        metaStr: String\\n        symbology: String\\n        transparency: Int\\n    }\\n\\n    # The project tree comes back as non-recursive list of layers.\\n    # The ProjectTree class will need to parse this into a typescript \\n    # Recursive type\\n    type ProjectTreeViewLayer {\\n        id: ID!\\n        visible: Boolean\\n    }\\n\\n    type ProjectTreeViews {\\n        id: ID!\\n        name: String!\\n        description: String\\n        layers: [ProjectTreeViewLayer]\\n    }\\n\\n    type ProjectTree {\\n        name: String\\n        description: String\\n        projectType: String\\n        metaStr: String\\n        leaves: [ProjectTreeLeaf]\\n        branches: [ProjectTreeBranch]\\n        defaultView: ID\\n        views: [ProjectTreeViews]\\n    }\\n\\n    type TileServiceOriginFile {\\n        lastModified: String\\n        etag: String\\n        size: Int\\n        key: String\\n    }\\n\\n    type TileService {\\n        url: String\\n        indexUrl: String\\n        status: TilingStatus!\\n        lastStatus: String\\n        error: String\\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\\n        started: String\\n        duration: Float\\n        format: String\\n        bounds: [Float]\\n        maxZoom: Int\\n        minZoom: Int\\n        originFile: TileServiceOriginFile\\n    }\\n    type Symbology {\\n        name: String!\\n        status: SymbologyStatus\\n        symbologyJSON: String\\n        url: String\\n        error: String\\n    }\\n\"], [\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        mutation: Mutation\\n    }\\n\\n    type Query {\\n        # Get a project and associated metadata\\n        auth: AuthParams\\n\\n        project(id: ID!, program: String!): Project\\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\\n\\n        program(program: String!): Program\\n        programs: [Program]\\n\\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\\n\\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\\n\\n        getWebVectorSymbology(projType: String, name: String!): Symbology\\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\\n\\n\\n        # Request an upload start. Writes a manifest file on the upload bucket\\n        # and creates upload urls for everything\\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\\n\\n        search(\\n            program: String!\\n            projType: String\\n            nameStr: String\\n            metaStr: String\\n            metaArr: String\\n            tags: String\\n            noTags: Boolean\\n            limit: Int\\n            nextToken: Int\\n        ): PaginatedSearchResults\\n\\n        validate(xml: String!, projType: String!, program: String!): Validation\\n\\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\\n\\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\\n    }\\n\\n    # this schema allows the following mutation:\\n    type Mutation {\\n        # signal a deletion of a project\\n        deleteProject(id: ID!, program: String!): ID!\\n        updateUser(id: ID!, program: String!, permission: String): User\\n    }\\n\\n    type User {\\n        email: String\\n        name: String\\n        picture: String\\n        username: String!\\n        createdOn: String\\n        updatedOn: String\\n        role: String\\n    }\\n\\n    type PaginatedUsers {\\n        users: [User]\\n        nextToken: String\\n    }\\n\\n    type Validation {\\n        result: Boolean\\n        xmlErrors: [String]\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n        domain: String\\n    }\\n\\n    interface ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n    }\\n\\n    type Project implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        files: [FileDownloadMeta]\\n        tree: ProjectTree\\n    }\\n\\n    type ProjectSearchResult implements ProjectBase {\\n        id: ID!\\n        name: String\\n        meta: String\\n        tags: String\\n        projType: String\\n        totalSize: String\\n        program: String\\n        createdBy: ID!\\n        updatedBy: ID!\\n        createdOn: String!\\n        updatedOn: String!\\n        score: Float\\n        files: [FileDownloadMeta]\\n    }\\n\\n    # This is mostly just JSON that's stringified\\n    type Product {\\n        id: ID!\\n        name: String!\\n        folder: String\\n        # Stringified JSON Array:\\n        pathArr: String\\n    }\\n    type Group {\\n        id: ID!\\n        name: String!\\n        folder: String\\n    }\\n    type NamedAllow {\\n        id: ID!\\n        name: String!\\n        aliases: String\\n        folder: String\\n    }\\n    type Collection {\\n        id: ID!\\n        name: String!\\n        AllowRegex: [String]\\n        Allow: [NamedAllow]\\n    }\\n    type Program {\\n        name: String\\n        machineName: String\\n        projectXSDs: String\\n        projectFile: String\\n        meta: String\\n        groups: [Group]\\n        collections: [Collection]\\n        products: [Product]\\n        hierarchy: String\\n        role: String\\n    }\\n\\n    type FileDownloadMeta {\\n        key: String!\\n        md5: String!\\n        size: String\\n        contentType: String\\n        downloadUrl: String!\\n        pendingSince: String\\n    }\\n\\n    type FileUpload {\\n        id: ID!\\n        uploadUrls: [UploadUrl]\\n    }\\n\\n    type UploadUrl {\\n        url: String\\n        fields: String\\n        origPath: String\\n    }\\n\\n    type FileUploadMeta {\\n        key: String!\\n        downloadUrl: String!\\n    }\\n\\n    # Series Connection allows us to implement pagination easily\\n    type PaginatedProjects {\\n        projects: [Project]\\n        nextToken: String\\n    }\\n\\n    type PaginatedSearchResults {\\n        projects: [ProjectSearchResult]\\n        nextToken: Int\\n        total: Int\\n    }\\n\\n    type NewProject {\\n        id: ID!\\n    }\\n\\n    \\\"\\\"\\\"\\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\\n    correct icon and assign them to the right slot\\n    \\\"\\\"\\\"\\n    enum ProjectTreeLayerTypes {\\n        \", \"\\n    }\\n    enum SymbologyStatus {\\n        \", \"\\n    }\\n    enum TilingStatus {\\n        \", \"\\n    }\\n\\n    type ProjectTreeBranch {\\n        label: String!\\n        collapsed: Boolean\\n        # Branch ID and parent ID\\n        bid: Int\\n        pid: Int\\n    }\\n    type ProjectTreeLeaf {\\n        id: Int # This is a global ID not an id within a branch\\n        pid: Int\\n        label: String!\\n        layerId: ID\\n        blLayerId: ID\\n        layerType: ProjectTreeLayerTypes!\\n        layerPath: String\\n        layerName: String\\n        nodeExists: Boolean\\n        # This is the path that helps u\\n        metaStr: String\\n        symbology: String\\n        transparency: Int\\n    }\\n\\n    # The project tree comes back as non-recursive list of layers.\\n    # The ProjectTree class will need to parse this into a typescript \\n    # Recursive type\\n    type ProjectTreeViewLayer {\\n        id: ID!\\n        visible: Boolean\\n    }\\n\\n    type ProjectTreeViews {\\n        id: ID!\\n        name: String!\\n        description: String\\n        layers: [ProjectTreeViewLayer]\\n    }\\n\\n    type ProjectTree {\\n        name: String\\n        description: String\\n        projectType: String\\n        metaStr: String\\n        leaves: [ProjectTreeLeaf]\\n        branches: [ProjectTreeBranch]\\n        defaultView: ID\\n        views: [ProjectTreeViews]\\n    }\\n\\n    type TileServiceOriginFile {\\n        lastModified: String\\n        etag: String\\n        size: Int\\n        key: String\\n    }\\n\\n    type TileService {\\n        url: String\\n        indexUrl: String\\n        status: TilingStatus!\\n        lastStatus: String\\n        error: String\\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\\n        started: String\\n        duration: Float\\n        format: String\\n        bounds: [Float]\\n        maxZoom: Int\\n        minZoom: Int\\n        originFile: TileServiceOriginFile\\n    }\\n    type Symbology {\\n        name: String!\\n        status: SymbologyStatus\\n        symbologyJSON: String\\n        url: String\\n        error: String\\n    }\\n\"])), Object.values(types_1.ProjectTreeLayerTypes).join('\\n      '), Object.values(types_1.SymbologyStatus).join('\\n      '), Object.values(types_1.TilingStatus).join('\\n      '));\nexports.default = typeDefs;\nvar templateObject_1;\n//# sourceMappingURL=schema.graphql.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Program = void 0;\nvar Program = (function () {\n    function Program(programObj) {\n        Object.assign(this, programObj);\n    }\n    Program.fromGraphQL = function (input) {\n        if (!input)\n            return null;\n        var meta = JSON.parse(input.meta);\n        return new Program(__assign(__assign({}, input), { meta: meta, role: input.role, products: input.products.map(function (p) { return (__assign(__assign({}, p), { pathArr: JSON.parse(p.pathArr) })); }) }));\n    };\n    return Program;\n}());\nexports.Program = Program;\n//# sourceMappingURL=Program.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Project = void 0;\nvar path_1 = __importDefault(require(\"path\"));\nfunction fileSort(currFolder) {\n    currFolder.sort(function (a, b) {\n        if (a.children && !b.children)\n            return -1;\n        if (!a.children && b.children)\n            return 1;\n        if (a.name.toLowerCase() < b.name.toLowerCase())\n            return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase())\n            return 1;\n        return 0;\n    });\n}\nvar Project = (function () {\n    function Project(projectObj) {\n        var _this = this;\n        this.treeIzeFilePaths = function () {\n            var root = [];\n            _this.files.forEach(function (_a) {\n                var key = _a.key;\n                var pathArr = key.split('/');\n                if (pathArr.length === 1 && key.indexOf('\\\\') > -1) {\n                    pathArr = key.split('\\\\');\n                }\n                var currFolder = root;\n                var _loop_1 = function () {\n                    var folder = { name: pathArr.shift(), children: [] };\n                    var found = currFolder.find(function (f) { return f.name === folder.name; });\n                    if (found && found.children) {\n                        currFolder = found.children;\n                    }\n                    else {\n                        currFolder.push(folder);\n                        currFolder = folder.children;\n                    }\n                    fileSort(currFolder);\n                };\n                while (pathArr.length > 1) {\n                    _loop_1();\n                }\n                currFolder.push({ name: pathArr[0], path: key });\n            });\n            fileSort(root);\n            return root;\n        };\n        Object.assign(this, projectObj);\n        if (!this.files)\n            this.files = [];\n        if (this.tree && this.tree.leaves) {\n            this.tree.leaves = this.tree.leaves.map(function (lf) { return (__assign(__assign({}, lf), { meta: lf && lf.metaStr ? JSON.parse(lf.metaStr) : {} })); });\n        }\n    }\n    Project.fromGraphQL = function (input) {\n        if (!input)\n            return null;\n        return new Project(__assign(__assign({}, input), { createdOn: parseInt(input.createdOn, 10), updatedOn: parseInt(input.updatedOn, 10), meta: input.meta ? JSON.parse(input.meta) : {}, tags: input.tags ? input.tags.split(',') : [] }));\n    };\n    Project.diff = function (left, right) {\n        var different = [];\n        var same = [];\n        if (!right || right.length === 0) {\n            return {\n                leftOnly: left.map(function (f) { return f.key; }),\n                rightOnly: [],\n                different: [],\n                same: []\n            };\n        }\n        else if (!left || left.length === 0) {\n            return {\n                leftOnly: [],\n                rightOnly: right.map(function (f) { return f.key; }),\n                different: [],\n                same: []\n            };\n        }\n        var leftOnly = left\n            .filter(function (leftFile) {\n            var found = right.find(function (rightFile) { return leftFile.key === rightFile.key; });\n            if (found) {\n                if (found.md5 === leftFile.md5)\n                    same.push(leftFile.key);\n                else\n                    different.push(leftFile.key);\n            }\n            return !found;\n        })\n            .map(function (f) { return f.key; });\n        var rightOnly = right\n            .filter(function (rightFile) { return !left.find(function (leftFile) { return rightFile.key === leftFile.key; }); })\n            .map(function (f) { return f.key; });\n        return {\n            leftOnly: leftOnly,\n            rightOnly: rightOnly,\n            different: different,\n            same: same\n        };\n    };\n    Project.getProjectS3Keys = function (program, projectId, projType) {\n        var prefix = path_1.default.join(program.machineName, projType, projectId);\n        var zipKey = prefix + \".zip\";\n        var projFileKey = path_1.default.join(prefix, program.projectFile);\n        var zipKeyPending = path_1.default.join(program.machineName, projType, projectId + \".zip.pending\");\n        var downloadFolderName = \"\" + [program.machineName, projType, projectId].join('-');\n        var downloadZipFilename = downloadFolderName + \".zip\";\n        return {\n            prefix: prefix,\n            zipKey: zipKey,\n            projFileKey: projFileKey,\n            zipKeyPending: zipKeyPending,\n            downloadFolderName: downloadFolderName,\n            downloadZipFilename: downloadZipFilename\n        };\n    };\n    Project.parseDynamoMeta = function (dynObj) {\n        var metavals = Object.keys(dynObj)\n            .filter(function (k) { return k.indexOf('META_') === 0; })\n            .reduce(function (acc, k) {\n            var _a;\n            var newk = k.split('META_')[1];\n            return __assign(__assign({}, acc), (_a = {}, _a[newk] = dynObj[k], _a));\n        }, {});\n        return JSON.stringify(metavals);\n    };\n    Project.parseTagString = function (tagString) {\n        if (!tagString || tagString.trim().length === 0)\n            return [];\n        return tagString\n            .split(',')\n            .map(function (t) { return t.trim(); })\n            .filter(function (t) { return t.length > 0 && t !== 'null' && t !== 'undefined'; });\n    };\n    Project.parseS3Key = function (program, key) {\n        var keyArr = key.split('/');\n        if (keyArr.length < 3)\n            throw new Error('Not a valid project key');\n        var _a = key.split('/'), programMachineName = _a[0], projType = _a[1], id = _a[2];\n        if (program.machineName !== programMachineName) {\n            throw new Error(\"Program passed to parseS3 key \" + program.machineName + \" does not correspond to program in key: \" + programMachineName);\n        }\n        return Project.getProjectS3Keys(program, id, projType);\n    };\n    Project.parseS3KeyDUMB = function (key) {\n        var keyArr = key.split('/');\n        if (keyArr.length < 3)\n            throw new Error('Not a valid project key');\n        var programMachineName = keyArr[0], projType = keyArr[1], id = keyArr[2];\n        var prefix = path_1.default.join(programMachineName, projType, id);\n        var zipKey = prefix + \".zip\";\n        return {\n            programMachineName: programMachineName,\n            projType: projType,\n            id: id,\n            zipKey: zipKey,\n            prefix: prefix\n        };\n    };\n    return Project;\n}());\nexports.Project = Project;\n//# sourceMappingURL=Project.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidationError = void 0;\nvar ValidationError = (function (_super) {\n    __extends(ValidationError, _super);\n    function ValidationError(message, reasons) {\n        var _this = _super.call(this, message) || this;\n        _this.name = _this.constructor.name;\n        _this.reasons = reasons;\n        Error.captureStackTrace(_this, _this.constructor);\n        return _this;\n    }\n    return ValidationError;\n}(Error));\nexports.ValidationError = ValidationError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TileServiceJSONClass = void 0;\nvar TileServiceJSONClass = (function () {\n    function TileServiceJSONClass(raw) {\n        Object.assign(this, raw);\n    }\n    return TileServiceJSONClass;\n}());\nexports.TileServiceJSONClass = TileServiceJSONClass;\n//# sourceMappingURL=TileServiceJSONClass.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar styles_1 = require(\"@material-ui/core/styles\");\nexports.default = (function (theme) {\n    var _a, _b, _c, _d;\n    return ({\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1\n        },\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            padding: theme.spacing(0, 1),\n            textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n            backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/HeaderBackground.png)\",\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: '0% 50%',\n            backgroundSize: 'cover',\n            backgroundColor: '#444444'\n        },\n        logo: {\n            height: 40,\n            width: 40,\n            marginRight: theme.spacing(2)\n        },\n        programChooser: {\n            margin: theme.spacing(0, 1),\n            color: theme.palette.primary.contrastText,\n            '& svg': {\n                color: theme.palette.primary.contrastText\n            },\n            '&:before': {\n                borderColor: theme.palette.primary.contrastText\n            },\n            '&:after': {\n                borderColor: theme.palette.primary.contrastText\n            }\n        },\n        transparent: {\n            backgroundColor: 'transparent',\n            background: 'none',\n            color: theme.palette.text.primary\n        },\n        search: (_a = {\n                position: 'relative',\n                borderRadius: theme.shape.borderRadius,\n                backgroundColor: styles_1.fade(theme.palette.common.white, 0.15),\n                '&:hover': {\n                    backgroundColor: styles_1.fade(theme.palette.common.white, 0.25)\n                },\n                marginRight: theme.spacing(2),\n                marginLeft: 0,\n                width: '100%',\n                flexGrow: 1\n            },\n            _a[theme.breakpoints.up('sm')] = {\n                marginLeft: theme.spacing(3),\n                width: 'auto'\n            },\n            _a),\n        searchIcon: {\n            width: theme.spacing(7),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n        },\n        inputRoot: {\n            color: 'inherit'\n        },\n        spacer: {\n            flexGrow: 1\n        },\n        inputInput: (_b = {\n                padding: theme.spacing(1, 1, 1, 7),\n                transition: theme.transitions.create('width'),\n                width: '100%'\n            },\n            _b[theme.breakpoints.up('sm')] = {\n                width: 200\n            },\n            _b),\n        sectionDesktop: (_c = {\n                display: 'none'\n            },\n            _c[theme.breakpoints.up('sm')] = {\n                display: 'flex',\n                flexGrow: 1\n            },\n            _c),\n        sectionMobile: (_d = {\n                display: 'flex',\n                flexGrow: 1\n            },\n            _d[theme.breakpoints.up('sm')] = {\n                display: 'none'\n            },\n            _d)\n    });\n});\n//# sourceMappingURL=Topbar.style.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    root: {},\n    whBtnLogo: { height: 20, width: 20, marginRight: theme.spacing(1) },\n    whButton: {\n        maxWidth: 300\n    }\n}); });\nvar WarehouseButton = function (_a) {\n    var title = _a.title, href = _a.href, stay = _a.stay;\n    var classes = useStyles();\n    return (react_1.default.createElement(Button_1.default, { className: classes.whButton, target: stay ? undefined : '_blank', variant: \"contained\", href: href, color: \"secondary\", fullWidth: true },\n        react_1.default.createElement(\"img\", { className: classes.whBtnLogo, src: 'https://riverscapes.xyz/assets/images/RiverscapesLogo.png', alt: \"logo\" }),\n        title));\n};\nexports.default = WarehouseButton;\n//# sourceMappingURL=WarehouseButton.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDisabled = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar Paper_1 = __importDefault(require(\"@material-ui/core/Paper\"));\nvar Avatar_1 = __importDefault(require(\"@material-ui/core/Avatar\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar List_1 = __importDefault(require(\"@material-ui/core/List\"));\nvar Chip_1 = __importDefault(require(\"@material-ui/core/Chip\"));\nvar ListItem_1 = __importDefault(require(\"@material-ui/core/ListItem\"));\nvar ListItemText_1 = __importDefault(require(\"@material-ui/core/ListItemText\"));\nvar ListItemAvatar_1 = __importDefault(require(\"@material-ui/core/ListItemAvatar\"));\nvar Face_1 = __importDefault(require(\"@material-ui/icons/Face\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar clsx_1 = __importDefault(require(\"clsx\"));\nvar constants_1 = require(\"../constants\");\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    rootContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {},\n    accessChip: __assign({}, Object.keys(constants_1.accessColors).reduce(function (acc, ack) {\n        var _a;\n        return (__assign(__assign({}, acc), (_a = {}, _a[\"&.access_\" + ack] = {\n            color: theme.palette.getContrastText(constants_1.accessColors[ack][500]),\n            background: constants_1.accessColors[ack][500]\n        }, _a)));\n    }, {}))\n}); });\nfunction isDisabled(prog) {\n    if (prog.meta && prog.meta.access && prog.meta.access === 'PUBLIC')\n        return false;\n    return prog.role === null;\n}\nexports.isDisabled = isDisabled;\nvar ProgramChooser = function (_a) {\n    var programs = _a.programs, history = _a.history, navigate = _a.navigate;\n    var classes = useStyles();\n    return (react_1.default.createElement(\"div\", { className: classes.rootContainer },\n        react_1.default.createElement(\"div\", { className: classes.spacer }),\n        react_1.default.createElement(Paper_1.default, { className: classes.root, elevation: 1 },\n            react_1.default.createElement(\"div\", { className: classes.logoContainer },\n                react_1.default.createElement(\"img\", { className: classes.logo, src: process.env.PUBLIC_URL + '/RiverscapesLogo.png', alt: \"logo\" })),\n            react_1.default.createElement(Typography_1.default, { variant: \"h5\" }, \"Choose a program:\"),\n            react_1.default.createElement(List_1.default, null, programs &&\n                programs.map(function (p, idx) {\n                    var chip = (react_1.default.createElement(Chip_1.default, { icon: react_1.default.createElement(Face_1.default, null), className: clsx_1.default(classes.accessChip, \"access_\" + p.role), label: p.role || 'Observer', color: \"primary\" }));\n                    var disabled = isDisabled(p);\n                    if (disabled)\n                        chip = react_1.default.createElement(Chip_1.default, { label: \"No Access\", color: \"default\" });\n                    return (react_1.default.createElement(ListItem_1.default, { key: \"progKey-\" + idx, disabled: disabled, button: true, divider: true, onClick: function () { return navigate(history, p); } },\n                        react_1.default.createElement(ListItemAvatar_1.default, null,\n                            react_1.default.createElement(Avatar_1.default, { alt: \"programname\" }, p.name.substr(0, 1))),\n                        react_1.default.createElement(ListItemText_1.default, { primary: p.name, secondary: p.meta.description }),\n                        chip));\n                })),\n            react_1.default.createElement(Typography_1.default, { paragraph: true, variant: \"caption\" },\n                \"If there are programs labeled\",\n                ' ',\n                react_1.default.createElement(Chip_1.default, { label: \"No Access\", component: \"span\", color: \"default\", size: \"small\" }),\n                \" and you think you should be able to see them please contact your program administrator.\")),\n        react_1.default.createElement(\"div\", { className: classes.spacer })));\n};\nexports.default = ProgramChooser;\n//# sourceMappingURL=ProgramChooser.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importStar(require(\"react\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar Link_1 = __importDefault(require(\"@material-ui/core/Link\"));\nvar Tooltip_1 = __importDefault(require(\"@material-ui/core/Tooltip\"));\nvar Dialog_1 = __importDefault(require(\"@material-ui/core/Dialog\"));\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nvar ButtonGroup_1 = __importDefault(require(\"@material-ui/core/ButtonGroup\"));\nvar DialogTitle_1 = __importDefault(require(\"@material-ui/core/DialogTitle\"));\nvar DialogContent_1 = __importDefault(require(\"@material-ui/core/DialogContent\"));\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\nvar Divider_1 = __importDefault(require(\"@material-ui/core/Divider\"));\nvar Close_1 = __importDefault(require(\"@material-ui/icons/Close\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar Popover_1 = __importDefault(require(\"@material-ui/core/Popover\"));\nvar Share_1 = __importDefault(require(\"@material-ui/icons/Share\"));\nvar InsertDriveFile_1 = __importDefault(require(\"@material-ui/icons/InsertDriveFile\"));\nvar Photo_1 = __importDefault(require(\"@material-ui/icons/Photo\"));\nvar Terrain_1 = __importDefault(require(\"@material-ui/icons/Terrain\"));\nvar Assignment_1 = __importDefault(require(\"@material-ui/icons/Assignment\"));\nvar TreeView_1 = __importDefault(require(\"@material-ui/lab/TreeView\"));\nvar ExpandMore_1 = __importDefault(require(\"@material-ui/icons/ExpandMore\"));\nvar ChevronRight_1 = __importDefault(require(\"@material-ui/icons/ChevronRight\"));\nvar WarehouseTags_1 = __importDefault(require(\"../../misc/WarehouseTags\"));\nvar clsx_1 = __importDefault(require(\"clsx\"));\nvar filesize_1 = __importDefault(require(\"filesize\"));\nvar moment_1 = __importDefault(require(\"moment\"));\nvar WebRaveBtn_1 = __importDefault(require(\"../../misc/WebRaveBtn\"));\nvar DownloadZipBtn_1 = __importDefault(require(\"../../misc/DownloadZipBtn\"));\nvar ShareDialog_1 = __importDefault(require(\"../../modals/ShareDialog\"));\nvar RecurseTreeItem_1 = __importDefault(require(\"./RecurseTreeItem\"));\nvar ProjectModal_style_1 = __importDefault(require(\"./ProjectModal.style\"));\nvar useStyles = styles_1.makeStyles(ProjectModal_style_1.default);\nvar ProjectModal = function (_a) {\n    var onClose = _a.onClose, project = _a.project, downloadFile = _a.downloadFile, webRaveUrl = _a.webRaveUrl, program = _a.program, showFileTree = _a.showFileTree, pendingZips = _a.pendingZips, downloadZipFile = _a.downloadZipFile;\n    var classes = useStyles();\n    var _b = react_1.useState(null), popOver = _b[0], setPopover = _b[1];\n    var _c = react_1.useState(false), shareOpen = _c[0], setShareOpen = _c[1];\n    var pendingSince = pendingZips[project.id];\n    var iconMapping = [\n        { pattern: /.*\\.(png|gif|jpg|jpeg)$/i, icon: react_1.default.createElement(Photo_1.default, { className: classes.photoIcon }), classStr: 'photo' },\n        { pattern: /.*\\.(tif|img|shp)$/i, icon: react_1.default.createElement(Terrain_1.default, { className: classes.TerrainIcon }), classStr: 'terrain' },\n        {\n            pattern: /.*\\.(csv|pdf|doc)$/i,\n            icon: react_1.default.createElement(Assignment_1.default, { className: classes.documentIcon }),\n            classStr: 'assignment'\n        }\n    ];\n    var files = (project.files || []).reduce(function (acc, file) {\n        var _a;\n        var found = iconMapping.find(function (_a) {\n            var pattern = _a.pattern;\n            return file.key.match(pattern);\n        });\n        return __assign(__assign({}, acc), (_a = {}, _a[file.key] = __assign(__assign({}, file), { icon: found ? found.icon : react_1.default.createElement(InsertDriveFile_1.default, { className: classes.normalIcon }), classStr: found ? found.classStr : 'normalIcon' }), _a));\n    }, {});\n    var fileTree = project.treeIzeFilePaths();\n    var pType = program.products.find(function (p) { return p.id === project.projType; });\n    var pTypeName = pType ? pType.name : 'Unknown';\n    var descriptionTag = Object.keys(project.meta).find(function (k) { return k.toLowerCase() === 'description'; });\n    return (react_1.default.createElement(Dialog_1.default, { onClose: onClose, open: true, maxWidth: \"md\", fullWidth: true, className: classes.root, classes: {\n            scrollPaper: classes.scrollPaper\n        } },\n        react_1.default.createElement(ShareDialog_1.default, { open: shareOpen, shareUrl: window.location.href, handleClose: function () { return setShareOpen(false); } }),\n        react_1.default.createElement(DialogTitle_1.default, { disableTypography: true, className: classes.titlebar },\n            react_1.default.createElement(\"div\", { className: classes.titlebarLeft },\n                react_1.default.createElement(Tooltip_1.default, { title: react_1.default.createElement(Typography_1.default, { variant: \"body1\" }, project.name) },\n                    react_1.default.createElement(Typography_1.default, { variant: \"h5\", component: \"div\", className: clsx_1.default(classes.name, classes.allowSelect) }, project.name)),\n                react_1.default.createElement(\"div\", { className: classes.subHeader },\n                    react_1.default.createElement(\"div\", { className: classes.flexGrow },\n                        react_1.default.createElement(Typography_1.default, { variant: \"caption\", color: \"inherit\", component: \"div\" },\n                            \"ID: \",\n                            react_1.default.createElement(\"span\", { className: classes.allowSelect }, project.id))))),\n            onClose ? (react_1.default.createElement(\"div\", null,\n                react_1.default.createElement(IconButton_1.default, { \"aria-label\": \"close\", className: classes.closeButton, onClick: onClose, size: \"small\" },\n                    react_1.default.createElement(Close_1.default, null)))) : null),\n        react_1.default.createElement(DialogContent_1.default, { dividers: true },\n            react_1.default.createElement(\"div\", { className: clsx_1.default(classes.allowSelect) },\n                react_1.default.createElement(\"div\", { className: classes.header },\n                    react_1.default.createElement(\"div\", { className: classes.headerLeft },\n                        react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"inherit\" },\n                            react_1.default.createElement(\"strong\", null, \"Project Type\"),\n                            \": \",\n                            react_1.default.createElement(\"strong\", null, pTypeName),\n                            \" (\",\n                            pType && pType.id,\n                            \")\"),\n                        react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"inherit\" },\n                            react_1.default.createElement(\"strong\", null, \"Created\"),\n                            \": \",\n                            moment_1.default(project.createdOn, 'x').fromNow(),\n                            \" (\",\n                            moment_1.default(project.createdOn, 'x').format('lll'),\n                            \")\"),\n                        react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"inherit\" },\n                            react_1.default.createElement(\"strong\", null, \"Updated\"),\n                            \": \",\n                            moment_1.default(project.updatedOn, 'x').fromNow(),\n                            \" (\",\n                            moment_1.default(project.updatedOn, 'x').format('lll'),\n                            \")\"),\n                        react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"inherit\" },\n                            react_1.default.createElement(\"strong\", null, \"Warehouse tags: \"),\n                            react_1.default.createElement(WarehouseTags_1.default, { tags: project.tags })),\n                        react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"inherit\" },\n                            react_1.default.createElement(\"strong\", null, \"Size (Unzipped)\"),\n                            \":\",\n                            ' ',\n                            project.totalSize && project.totalSize > -1\n                                ? filesize_1.default(project.totalSize)\n                                : 'Not available')),\n                    react_1.default.createElement(\"div\", { className: classes.headerRight },\n                        react_1.default.createElement(ButtonGroup_1.default, { color: \"primary\" },\n                            webRaveUrl && (react_1.default.createElement(WebRaveBtn_1.default, __assign({ title: \"Map\", url: webRaveUrl }, { project: project }, { btnProps: {\n                                    variant: 'text'\n                                } }))),\n                            react_1.default.createElement(Button_1.default, { variant: \"text\", onClick: function () { return setShareOpen(true); }, style: {\n                                    cursor: 'pointer'\n                                }, startIcon: react_1.default.createElement(Share_1.default, null) }, \"Share\"),\n                            react_1.default.createElement(DownloadZipBtn_1.default, __assign({ title: \"Download\" }, { project: project, pendingSince: pendingSince, downloadZipFile: downloadZipFile }, { btnProps: {\n                                    variant: 'text'\n                                } }))))),\n                descriptionTag && (react_1.default.createElement(\"div\", null,\n                    react_1.default.createElement(Typography_1.default, { className: classes.title, color: \"inherit\", component: \"div\", variant: \"subtitle1\" }, \"Description\"),\n                    react_1.default.createElement(Typography_1.default, { color: \"textSecondary\", variant: \"body2\" }, project.meta[descriptionTag]))),\n                react_1.default.createElement(Typography_1.default, { className: classes.title, color: \"inherit\", variant: \"subtitle1\" }, \"Metadata\"),\n                react_1.default.createElement(Divider_1.default, null),\n                react_1.default.createElement(\"div\", { className: classes.metaDisplay }, Object.keys(project.meta)\n                    .filter(function (k) { return ['description'].indexOf(k.toLowerCase()) === -1; })\n                    .map(function (metaKey, idk) {\n                    var textComponent = project.meta[metaKey];\n                    if (project.meta[metaKey].indexOf('http') === 0) {\n                        textComponent = (react_1.default.createElement(Link_1.default, { href: project.meta[metaKey], target: \"_blank\" }, project.meta[metaKey]));\n                    }\n                    return (react_1.default.createElement(Tooltip_1.default, { key: \"result-\" + idk, placement: \"bottom\", title: react_1.default.createElement(react_1.default.Fragment, null,\n                            react_1.default.createElement(Typography_1.default, { variant: \"body1\", component: \"div\" },\n                                react_1.default.createElement(\"strong\", null, metaKey)),\n                            react_1.default.createElement(Typography_1.default, { variant: \"body2\", component: \"div\" }, textComponent)) },\n                        react_1.default.createElement(\"div\", { className: classes.metaDisplayItem },\n                            react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"textPrimary\" },\n                                react_1.default.createElement(\"strong\", null, metaKey)),\n                            react_1.default.createElement(Typography_1.default, { variant: \"caption\", component: \"div\", color: \"textPrimary\" }, textComponent))));\n                }))),\n            showFileTree && (react_1.default.createElement(react_1.default.Fragment, null,\n                react_1.default.createElement(Typography_1.default, { className: classes.title, color: \"inherit\", variant: \"subtitle1\" }, \"Files\"),\n                react_1.default.createElement(Divider_1.default, null),\n                react_1.default.createElement(TreeView_1.default, { className: classes.treeRoot, defaultExpanded: ['1'], disableSelection: true, defaultCollapseIcon: react_1.default.createElement(ExpandMore_1.default, { color: \"inherit\" }), defaultExpandIcon: react_1.default.createElement(ChevronRight_1.default, { color: \"inherit\" }) }, fileTree.map(function (ft, idx) { return (react_1.default.createElement(RecurseTreeItem_1.default, { project: project, key: \"treeNode-\" + idx, keyStr: \"treeNode-\" + idx, item: ft, fileDict: files, fileClick: downloadFile })); }))))),\n        react_1.default.createElement(Popover_1.default, { open: Boolean(popOver), anchorEl: popOver ? popOver[0] : null, onClose: function () { return setPopover(null); }, anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'center'\n            }, transformOrigin: {\n                vertical: 'top',\n                horizontal: 'center'\n            } },\n            react_1.default.createElement(Typography_1.default, { className: classes.popOver }, popOver ? popOver[1] : ''))));\n};\nexports.default = ProjectModal;\n//# sourceMappingURL=ProjectModal.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar Tooltip_1 = __importDefault(require(\"@material-ui/core/Tooltip\"));\nvar CloudDownload_1 = __importDefault(require(\"@material-ui/icons/CloudDownload\"));\nvar TreeItem_1 = __importDefault(require(\"@material-ui/lab/TreeItem\"));\nvar filesize_1 = __importDefault(require(\"filesize\"));\nvar RecurseTreeItem_style_1 = __importDefault(require(\"./RecurseTreeItem.style\"));\nvar useStyles = styles_1.makeStyles(RecurseTreeItem_style_1.default);\nvar RecurseTreeItem = function (_a) {\n    var item = _a.item, fileDict = _a.fileDict, keyStr = _a.keyStr, project = _a.project, fileClick = _a.fileClick;\n    var classes = useStyles();\n    if (item.children) {\n        var childNodes = item.children.map(function (c, idx) { return (react_1.default.createElement(RecurseTreeItem, { keyStr: keyStr + \"-l\" + idx, key: keyStr + \"-l\" + idx, item: c, fileDict: fileDict, project: project, fileClick: fileClick })); });\n        return (react_1.default.createElement(TreeItem_1.default, { nodeId: keyStr, className: classes.treeFolder, classes: {\n                content: classes.treeFolderContent\n            }, label: react_1.default.createElement(\"div\", { className: classes.treeFolderText }, item.name) }, childNodes));\n    }\n    else {\n        var lookup = item.path ? fileDict[item.path] : { size: '0' };\n        return (react_1.default.createElement(TreeItem_1.default, { nodeId: keyStr, className: classes.treeFile, classes: {\n                root: classes.treeItemRoot,\n                content: classes.treeFileContent\n            }, label: react_1.default.createElement(\"div\", { className: classes.treeItemContainer },\n                react_1.default.createElement(\"div\", { className: classes.treeItemText },\n                    react_1.default.createElement(Typography_1.default, { color: \"textPrimary\", component: \"div\", variant: \"body1\" }, item.name),\n                    react_1.default.createElement(Typography_1.default, { color: \"textSecondary\", component: \"div\", variant: \"caption\" },\n                        filesize_1.default(parseInt(lookup.size, 10)),\n                        \" --\",\n                        ' ',\n                        react_1.default.createElement(\"span\", { className: classes.allowSelect }, item.path))),\n                react_1.default.createElement(Tooltip_1.default, { title: react_1.default.createElement(react_1.default.Fragment, null,\n                        react_1.default.createElement(Typography_1.default, { variant: \"body1\" },\n                            \"Download: \",\n                            item.path)) },\n                    react_1.default.createElement(IconButton_1.default, { disableRipple: true, className: classes.treeItemIcon, color: \"primary\", onClick: function () { return fileClick(project, item.path); } },\n                        react_1.default.createElement(CloudDownload_1.default, null)))), endIcon: lookup.icon }));\n    }\n};\nexports.default = RecurseTreeItem;\n//# sourceMappingURL=RecurseTreeItem.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (function (theme) { return ({\n    treeItemRoot: {\n        backgroundColor: theme.palette.background.paper,\n        '&:nth-child(odd)': {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    treeItemContainer: {\n        display: 'flex'\n    },\n    treeItemText: {\n        marginLeft: theme.spacing(1),\n        padding: theme.spacing(1),\n        flexGrow: 1\n    },\n    treeItemIcon: {},\n    treeFile: {},\n    treeFileContent: {\n        borderBottom: \"1px solid \" + theme.palette.grey[100]\n    },\n    treeFolder: {},\n    treeFolderContent: {},\n    treeFolderText: {\n        padding: theme.spacing(1)\n    },\n    allowSelect: {\n        '&,& *': {\n            userSelect: 'text',\n            cursor: 'auto'\n        }\n    }\n}); });\n//# sourceMappingURL=RecurseTreeItem.style.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar colors_1 = require(\"@material-ui/core/colors\");\nexports.default = (function (theme) { return ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    allowSelect: {\n        '&,& *': {\n            userSelect: 'text',\n            cursor: 'auto'\n        }\n    },\n    scrollPaper: {\n        alignItems: 'baseline'\n    },\n    name: {\n        maxWidth: '95%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        marginBottom: theme.spacing(1)\n    },\n    titlebar: {\n        backgroundColor: '#444444',\n        color: theme.palette.primary.contrastText,\n        display: 'flex'\n    },\n    titlebarLeft: {\n        flexGrow: 1\n    },\n    header: {\n        display: 'flex'\n    },\n    headerLeft: {\n        flex: '1 1 80%'\n    },\n    headerRight: {\n        textAlign: 'right',\n        flex: '1 0'\n    },\n    flexGrow: {\n        flexGrow: 1\n    },\n    closeButton: {\n        flex: '0 0',\n        color: theme.palette.grey[500]\n    },\n    normalIcon: {},\n    documentIcon: {\n        color: colors_1.red[500]\n    },\n    photoIcon: {\n        color: colors_1.purple[500]\n    },\n    TerrainIcon: {\n        color: colors_1.green[500]\n    },\n    metaDisplay: {\n        display: 'flex',\n        flexFlow: 'wrap'\n    },\n    title: {\n        marginTop: theme.spacing(2)\n    },\n    treeItemContainer: {\n        display: 'flex'\n    },\n    treeItemText: {\n        marginLeft: theme.spacing(1),\n        flexGrow: 1\n    },\n    treeItemIcon: {},\n    treeFileContent: {\n        borderBottom: \"1px solid \" + theme.palette.grey[100],\n        padding: theme.spacing(1)\n    },\n    treeFolder: {},\n    treeFolderContent: {\n        padding: theme.spacing(1)\n    },\n    metaDisplayItem: {\n        flex: '1 1',\n        borderRadius: theme.spacing(1),\n        backgroundColor: '#fafafa',\n        margin: theme.spacing(1, 0.5),\n        border: '#1px solid #e7e7e7',\n        padding: theme.spacing(1),\n        maxWidth: '25%',\n        minWidth: 150,\n        '&>*': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }\n    },\n    prodChip: {\n        marginLeft: theme.spacing(1),\n        backgroundColor: theme.palette.primary.light,\n        color: 'white'\n    },\n    popOver: {\n        padding: theme.spacing(2)\n    },\n    subHeader: {\n        width: '100%',\n        display: 'flex'\n    }\n}); });\n//# sourceMappingURL=ProjectModal.style.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nvar Paper_1 = __importDefault(require(\"@material-ui/core/Paper\"));\nvar Container_1 = __importDefault(require(\"@material-ui/core/Container\"));\nvar LockOpen_1 = __importDefault(require(\"@material-ui/icons/LockOpen\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    rootContainer: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}); });\nvar LoginScreen = function (_a) {\n    var title = _a.title, signIn = _a.signIn;\n    var classes = useStyles();\n    return (react_1.default.createElement(Container_1.default, { className: classes.rootContainer, maxWidth: \"md\" },\n        react_1.default.createElement(\"div\", { className: classes.spacer }),\n        react_1.default.createElement(Paper_1.default, { className: classes.root },\n            react_1.default.createElement(\"div\", { className: classes.logoContainer },\n                react_1.default.createElement(\"img\", { className: classes.logo, src: process.env.PUBLIC_URL + '/RiverscapesLogo.png', alt: \"logo\" })),\n            react_1.default.createElement(Typography_1.default, { paragraph: true, variant: \"body1\" },\n                \"Welcome to \",\n                react_1.default.createElement(\"strong\", null, title),\n                \". Please click the button below to log in.\"),\n            react_1.default.createElement(Typography_1.default, { paragraph: true, variant: \"body1\" }, \"If you don't have an account you will be prompted to use your Google account or create a new account using another email address.\"),\n            react_1.default.createElement(Button_1.default, { variant: \"contained\", onClick: signIn, color: \"primary\", fullWidth: true, size: \"large\", startIcon: react_1.default.createElement(LockOpen_1.default, null) }, \"Sign In\")),\n        react_1.default.createElement(\"div\", { className: classes.spacer })));\n};\nexports.default = LoginScreen;\n//# sourceMappingURL=LoginScreen.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar Dialog_1 = __importDefault(require(\"@material-ui/core/Dialog\"));\nvar DialogTitle_1 = __importDefault(require(\"@material-ui/core/DialogTitle\"));\nvar DialogContent_1 = __importDefault(require(\"@material-ui/core/DialogContent\"));\nvar DialogActions_1 = __importDefault(require(\"@material-ui/core/DialogActions\"));\nvar Button_1 = __importDefault(require(\"@material-ui/core/Button\"));\nvar Error_1 = __importDefault(require(\"@material-ui/icons/Error\"));\nvar Typography_1 = __importDefault(require(\"@material-ui/core/Typography\"));\nvar useStyles = styles_1.makeStyles(function (theme) { return ({\n    root: {\n        marginLeft: theme.spacing(1)\n    },\n    titlebar: {\n        display: 'flex',\n        background: theme.palette.error.main,\n        color: theme.palette.error.contrastText\n    },\n    closeButton: {},\n    name: {\n        paddingLeft: theme.spacing(1),\n        flexGrow: 1\n    }\n}); });\nvar ProjectModal = function (_a) {\n    var onClose = _a.onClose, program = _a.program;\n    var classes = useStyles();\n    return (react_1.default.createElement(Dialog_1.default, { onClose: onClose, open: true, maxWidth: \"xs\", fullWidth: true, className: classes.root, classes: {} },\n        react_1.default.createElement(DialogTitle_1.default, { disableTypography: true, className: classes.titlebar },\n            react_1.default.createElement(Error_1.default, { color: \"inherit\" }),\n            react_1.default.createElement(Typography_1.default, { className: classes.name }, \"Access Denied\")),\n        react_1.default.createElement(DialogContent_1.default, { dividers: true }, program ? (react_1.default.createElement(Typography_1.default, { variant: \"body1\", component: \"div\", color: \"inherit\" },\n            \"You don't have access to the program \",\n            react_1.default.createElement(\"strong\", null, program.name),\n            \".\",\n            'If you arrived here via URL you will be able to use the URL ',\n            'again once you have access.')) : (react_1.default.createElement(Typography_1.default, { variant: \"body1\", component: \"div\", color: \"inherit\" }, 'This URL is not valid. If you arrived here via URL you will be able to use the URL again once you have access.'))),\n        react_1.default.createElement(DialogActions_1.default, null,\n            react_1.default.createElement(Button_1.default, { onClick: onClose, color: \"primary\" }, 'Back'))));\n};\nexports.default = ProjectModal;\n//# sourceMappingURL=NotAllowedModal.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar common_1 = require(\"@riverscapes/common\");\nvar lodash_1 = __importDefault(require(\"lodash\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar config_1 = require(\"../config\");\nvar useDownload = function (auth, program) {\n    var _a = react_1.useState({}), pendingZips = _a[0], setPendingZips = _a[1];\n    var pendingZipsRef = react_1.useRef();\n    pendingZipsRef.current = pendingZips;\n    var downloadFileFn = react_1.useCallback(function (project, fkey) { return __awaiter(void 0, void 0, void 0, function () {\n        var jwt, res, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!program)\n                        return [2, Promise.resolve()];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 5]);\n                    return [4, auth.getCurrentToken()];\n                case 2:\n                    jwt = _a.sent();\n                    return [4, common_1.downloadFile(config_1.endpoints.graphql, jwt, project.projType, program.machineName, project.id, fkey)];\n                case 3:\n                    res = _a.sent();\n                    try {\n                        if (res.data)\n                            window.open(res.data.downloadFile.downloadUrl, '_self');\n                    }\n                    catch (err) {\n                        loglevel_1.default.error('DOWNLOAD err', err);\n                    }\n                    return [3, 5];\n                case 4:\n                    error_1 = _a.sent();\n                    loglevel_1.default.error('DOWNLOAD err', error_1);\n                    return [3, 5];\n                case 5: return [2];\n            }\n        });\n    }); }, [program, auth]);\n    var downloadZipFile = react_1.useCallback(function (project) {\n        if (!program)\n            return Promise.resolve();\n        var checkZipFunc = function () {\n            return auth\n                .getCurrentToken()\n                .then(function (jwt) {\n                return common_1.downloadZipFile(config_1.endpoints.graphql, jwt, project.projType, program.machineName, project.id);\n            })\n                .then(function (res) {\n                var _a;\n                try {\n                    if (res.data && !res.data.downloadZip.pendingSince) {\n                        setPendingZips(lodash_1.default.pickBy(pendingZipsRef.current, function (val, key) { return key !== project.id; }));\n                        window.open(res.data.downloadZip.downloadUrl, '_self');\n                    }\n                    else {\n                        setPendingZips(__assign(__assign({}, pendingZipsRef.current), (_a = {}, _a[project.id] = res.data ? res.data.downloadZip.pendingSince : Date.now(), _a)));\n                        setTimeout(checkZipFunc, 5000);\n                    }\n                }\n                catch (err) {\n                    loglevel_1.default.error('DOWNLOAD err', err);\n                }\n            })\n                .catch(function (err) {\n                loglevel_1.default.error('DOWNLOAD err', err);\n            });\n        };\n        return checkZipFunc();\n    }, [program, auth]);\n    return {\n        pendingZips: pendingZipsRef.current,\n        downloadFileFn: downloadFileFn,\n        downloadZipFile: downloadZipFile\n    };\n};\nexports.default = useDownload;\n//# sourceMappingURL=useDownloads.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar config_1 = require(\"../config\");\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar useProgram = function (programs, onProgramChange) {\n    var _a = react_1.useState(), program = _a[0], setProgram = _a[1];\n    var programId = react_router_dom_1.useParams().programId;\n    var currProgramRef = react_1.useRef();\n    currProgramRef.current = program;\n    react_1.useEffect(function () {\n        if (!programId || programId.length < 0)\n            return;\n        try {\n            var newProg = programs === null || programs === void 0 ? void 0 : programs.find(function (p) { return p.machineName === programId; });\n            if (newProg && (!currProgramRef.current || currProgramRef.current.machineName !== newProg.machineName)) {\n                newProg.collections = newProg.collections.map(function (c, idx) { return (__assign(__assign({}, c), { color: config_1.mandatoryMetaColors[idx % config_1.mandatoryMetaColors.length] })); });\n                currProgramRef.current = newProg;\n                loglevel_1.default.debug('useProgram', { programId: programId, newProg: newProg, programs: programs });\n                setProgram(newProg);\n                if (onProgramChange)\n                    onProgramChange(newProg);\n            }\n        }\n        catch (_a) {\n            return;\n        }\n    }, [programs, programId, onProgramChange]);\n    return program;\n};\nexports.default = useProgram;\n//# sourceMappingURL=useProgram.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar common_1 = require(\"@riverscapes/common\");\nvar config_1 = require(\"../config\");\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar useProject = function (auth, program, files, tree) {\n    if (files === void 0) { files = false; }\n    if (tree === void 0) { tree = false; }\n    var projectId = react_router_dom_1.useParams().projectId;\n    var _a = react_1.useState({ loading: false, initialized: false }), projState = _a[0], setProjState = _a[1];\n    var currProjectStateRef = react_1.useRef();\n    currProjectStateRef.current = projState;\n    react_1.useEffect(function () {\n        if (!projectId || projectId.length < 2) {\n            setProjState({ loading: false, initialized: true });\n            return;\n        }\n        try {\n            if (!program || !projectId)\n                return;\n            var progMachineName_1 = program.machineName;\n            var done_1 = false;\n            setTimeout(function () {\n                if (!done_1)\n                    setProjState(__assign(__assign({}, currProjectStateRef.current), { loading: true }));\n            }, 500);\n            auth.getCurrentToken()\n                .then(function (jwt) { return common_1.getProject(config_1.endpoints.graphql, jwt, projectId, progMachineName_1, files, tree); })\n                .then(function (res) {\n                var _a;\n                done_1 = true;\n                loglevel_1.default.debug('getProjectById::Response', res);\n                if (res.data &&\n                    res.data.project &&\n                    currProjectStateRef.current &&\n                    currProjectStateRef.current.project &&\n                    ((_a = currProjectStateRef.current) === null || _a === void 0 ? void 0 : _a.project.id) === res.data.project.id) {\n                    return;\n                }\n                else if (res.data) {\n                    setProjState({ project: res.data.project, loading: false, initialized: true });\n                }\n                else {\n                    setProjState({ project: undefined, loading: false, initialized: true });\n                }\n            })\n                .catch(function (err) {\n                done_1 = true;\n                setProjState({ project: undefined, loading: false, initialized: true });\n                loglevel_1.default.error('api.getProjectById error', err);\n            });\n        }\n        catch (_a) {\n            return;\n        }\n    }, [projectId, program, auth]);\n    return projState;\n};\nexports.default = useProject;\n//# sourceMappingURL=useProject.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashHistory = void 0;\nvar react_1 = require(\"react\");\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nvar base64url_1 = __importDefault(require(\"base64url\"));\nvar history_1 = require(\"history\");\nvar lodash_1 = require(\"lodash\");\nexports.hashHistory = history_1.createHashHistory();\nvar useQueryParams = function (pathPattern) {\n    var params = react_router_dom_1.useParams();\n    var _a = react_1.useState(), userQuery = _a[0], _setUserQuery = _a[1];\n    var _b = react_1.useState(), decoded = _b[0], setDecoded = _b[1];\n    var setQuery = function (input) {\n        var changes = {};\n        Object.keys(input).forEach(function (k) {\n            var stringVal = encode(input[k]);\n            if (!params[k] || params[k] !== stringVal) {\n                changes[k] = stringVal;\n            }\n        });\n        if (Object.keys(changes).length > 0) {\n            loglevel_1.default.debug('DEBUG::useQueryParams setQuery', { input: input, params: params, changes: changes });\n            setDecoded(__assign(__assign({}, params), input));\n            exports.hashHistory.replace(react_router_dom_1.generatePath(pathPattern, __assign(__assign({}, params), changes)));\n        }\n    };\n    react_1.useEffect(function () {\n        var newDecoded = decode(params);\n        if (!lodash_1.isEqual(decoded, newDecoded)) {\n            loglevel_1.default.debug('DEBUG::useQueryParams setDecoded', { newDecoded: newDecoded, params: params });\n            setDecoded(newDecoded);\n            _setUserQuery(newDecoded);\n        }\n    }, [params]);\n    return { query: decoded, userQuery: userQuery, setQuery: setQuery };\n};\nexports.default = useQueryParams;\nfunction encode(qry) {\n    if (qry === null || lodash_1.isUndefined(qry))\n        return null;\n    switch (typeof qry) {\n        case 'string':\n            return qry;\n        default:\n            if (typeof qry === 'object' && Object.keys(qry).length === 0) {\n                return '';\n            }\n            else {\n                return '~' + base64url_1.default(JSON.stringify(qry));\n            }\n    }\n}\nfunction decode(input) {\n    return Object.keys(input).reduce(function (acc, k) {\n        var _a;\n        var output = null;\n        try {\n            if (input[k].length > 0) {\n                if (input[k][0] === '~')\n                    output = JSON.parse(base64url_1.default.decode(input[k].slice(1)));\n                else\n                    output = input[k];\n            }\n        }\n        catch (_b) {\n            output = input[k];\n        }\n        return __assign(__assign({}, acc), (_a = {}, _a[k] = output, _a));\n    }, {});\n}\n//# sourceMappingURL=useQueryParams.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar colors_1 = require(\"@material-ui/core/colors\");\nvar home = {\n    palette: {\n        primary: {\n            main: colors_1.indigo[500]\n        },\n        secondary: {\n            main: colors_1.orange[600],\n            contrastText: '#FFFFFF'\n        },\n        text: {}\n    }\n};\nvar homeDark = __assign(__assign({}, home), { palette: __assign(__assign({}, home.palette), { type: 'dark' }) });\nexports.default = {\n    home: styles_1.createMuiTheme(home),\n    homeDark: styles_1.createMuiTheme(homeDark)\n};\n//# sourceMappingURL=themes.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar createSvgIcon_1 = __importDefault(require(\"@material-ui/icons/utils/createSvgIcon\"));\nexports.default = createSvgIcon_1.default(react_1.default.createElement(react_1.default.Fragment, null,\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"5.5\", cy: \"5.5\", r: \"2.5\" }),\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"5.5\", cy: \"18.5\", r: \"2.5\" }),\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"12\", cy: \"12\", r: \"2.5\" }),\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"18.5\", cy: \"10\", r: \"2.5\" }),\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"17.5\", cy: \"16.5\", r: \"2.5\" })), 'Multidot');\n//# sourceMappingURL=Multidot.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar createSvgIcon_1 = __importDefault(require(\"@material-ui/icons/utils/createSvgIcon\"));\nexports.default = createSvgIcon_1.default(react_1.default.createElement(react_1.default.Fragment, null,\n    react_1.default.createElement(\"path\", { d: \" M 5.932 4.519 C 5.976 4.353 6 4.179 6 4 C 6 2.896 5.104 2 4 2 C 2.896 2 2 2.896 2 4 L 2 4 L 2 4 L 2 4 L 2 4 C 2 4.74 2.402 5.386 3 5.732 L 3 18.268 C 2.402 18.614 2 19.26 2 20 L 2 20 L 2 20 L 2 20 L 2 20 C 2 21.104 2.896 22 4 22 C 4.74 22 5.386 21.598 5.732 21 L 18.268 21 L 18.268 21 C 18.614 21.598 19.26 22 20 22 C 21.104 22 22 21.104 22 20 C 22 19.26 21.598 18.614 21 18.268 L 21 9.732 L 21 9.732 C 21.598 9.386 22 8.74 22 8 C 22 6.896 21.104 6 20 6 C 18.937 6 18.067 6.831 18.004 7.878 L 13.1 10.33 C 12.784 10.121 12.406 10 12 10 C 11.822 10 11.65 10.023 11.486 10.067 L 5.932 4.519 Z  M 5 18.268 C 5.303 18.444 5.556 18.697 5.732 19 L 18.268 19 C 18.444 18.697 18.697 18.444 19 18.268 L 19 9.732 C 18.966 9.712 18.933 9.692 18.9 9.67 L 13.996 12.122 C 13.933 13.169 13.063 14 12 14 C 10.896 14 10 13.104 10 12 L 10 12 C 10 11.822 10.023 11.649 10.067 11.485 L 5 6.41 L 5 18.268 Z \", fillRule: \"evenodd\" })), 'Polygon');\n//# sourceMappingURL=Polygon.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar createSvgIcon_1 = __importDefault(require(\"@material-ui/icons/utils/createSvgIcon\"));\nexports.default = createSvgIcon_1.default(react_1.default.createElement(react_1.default.Fragment, null,\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"4\", cy: \"13\", r: \"2\" }),\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"12\", cy: \"9\", r: \"2\" }),\n    react_1.default.createElement(\"circle\", { vectorEffect: \"non-scaling-stroke\", cx: \"20\", cy: \"13\", r: \"2\" }),\n    react_1.default.createElement(\"path\", { d: \" M 4.45 13.89 L 3.55 14.34 L 2.66 12.55 L 3.55 12.11 L 12 7.88 L 20.45 12.11 L 21.34 12.55 L 20.45 14.34 L 19.55 13.89 L 12 10.12 L 4.45 13.89 Z \" })), 'Polyline');\n//# sourceMappingURL=Polyline.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar createSvgIcon_1 = __importDefault(require(\"@material-ui/icons/utils/createSvgIcon\"));\nexports.default = createSvgIcon_1.default(react_1.default.createElement(react_1.default.Fragment, null,\n    react_1.default.createElement(\"path\", { d: \"M22,2l0,20l-20,0l0,-20l20,0Zm-2,2l-16,0l0,16l16,0l0,-16Z\" }),\n    react_1.default.createElement(\"rect\", { x: \"5\", y: \"5\", width: \"4\", height: \"4\" }),\n    react_1.default.createElement(\"rect\", { x: \"15\", y: \"5\", width: \"4\", height: \"4\" }),\n    react_1.default.createElement(\"rect\", { x: \"5\", y: \"15\", width: \"4\", height: \"4\" }),\n    react_1.default.createElement(\"rect\", { x: \"10\", y: \"10\", width: \"1\", height: \"5\" }),\n    react_1.default.createElement(\"rect\", { x: \"11\", y: \"10\", width: \"6\", height: \"2\" }),\n    react_1.default.createElement(\"rect\", { x: \"11\", y: \"12\", width: \"2\", height: \"2\" }),\n    react_1.default.createElement(\"rect\", { x: \"13\", y: \"7\", width: \"1\", height: \"2\" }),\n    react_1.default.createElement(\"rect\", { x: \"14\", y: \"9\", width: \"1\", height: \"1\" }),\n    react_1.default.createElement(\"rect\", { x: \"8\", y: \"10\", width: \"1\", height: \"4\" }),\n    react_1.default.createElement(\"rect\", { x: \"7\", y: \"11\", width: \"1\", height: \"3\" }),\n    react_1.default.createElement(\"rect\", { x: \"9\", y: \"11\", width: \"1\", height: \"1\" }),\n    react_1.default.createElement(\"rect\", { x: \"10\", y: \"6\", width: \"2\", height: \"3\" }),\n    react_1.default.createElement(\"rect\", { x: \"12\", y: \"7\", width: \"1\", height: \"1\" }),\n    react_1.default.createElement(\"rect\", { x: \"15\", y: \"14\", width: \"2\", height: \"4\" }),\n    react_1.default.createElement(\"rect\", { x: \"14\", y: \"14\", width: \"1\", height: \"1\" }),\n    react_1.default.createElement(\"rect\", { x: \"17\", y: \"15\", width: \"2\", height: \"2\" }),\n    react_1.default.createElement(\"rect\", { x: \"11\", y: \"16\", width: \"1\", height: \"3\" }),\n    react_1.default.createElement(\"rect\", { x: \"12\", y: \"15\", width: \"2\", height: \"2\" }),\n    react_1.default.createElement(\"rect\", { x: \"10\", y: \"18\", width: \"1\", height: \"1\" })), 'QRCode');\n//# sourceMappingURL=QRCode.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar createSvgIcon_1 = __importDefault(require(\"@material-ui/icons/utils/createSvgIcon\"));\nexports.default = createSvgIcon_1.default(react_1.default.createElement(react_1.default.Fragment, null,\n    react_1.default.createElement(\"g\", null,\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,-1.77636e-15,3.97768)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,0,11.9777)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,8,4)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,8,12)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,4,-0.0223232)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,4,7.97768)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,12,0)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" })),\n        react_1.default.createElement(\"g\", { transform: \"matrix(1,0,0,1,12,8)\" },\n            react_1.default.createElement(\"rect\", { x: \"4\", y: \"4.022\", width: \"4\", height: \"3.978\" }))),\n    react_1.default.createElement(\"g\", { id: \"Raster\" },\n        react_1.default.createElement(\"path\", { d: \"M21,5.432C21,4.09 19.91,3 18.568,3L5.432,3C4.09,3 3,4.09 3,5.432L3,18.568C3,19.91 4.09,21 5.432,21L18.568,21C19.91,21 21,19.91 21,18.568L21,5.432Z\", style: { fillOpacity: 0 } }),\n        react_1.default.createElement(\"path\", { d: \"M22,5.432C22,3.538 20.462,2 18.568,2L5.432,2C3.538,2 2,3.538 2,5.432L2,18.568C2,20.462 3.538,22 5.432,22L18.568,22C20.462,22 22,20.462 22,18.568L22,5.432ZM20,5.432L20,18.568C20,19.358 19.358,20 18.568,20C18.568,20 5.432,20 5.432,20C4.642,20 4,19.358 4,18.568C4,18.568 4,5.432 4,5.432C4,4.642 4.642,4 5.432,4C5.432,4 18.568,4 18.568,4C19.358,4 20,4.642 20,5.432Z\" }))), 'Multidot');\n//# sourceMappingURL=Raster.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar common_1 = require(\"@riverscapes/common\");\nvar styles_1 = require(\"@material-ui/core/styles\");\nvar InsertDriveFile_1 = __importDefault(require(\"@material-ui/icons/InsertDriveFile\"));\nvar Description_1 = __importDefault(require(\"@material-ui/icons/Description\"));\nvar _1 = require(\"./\");\nvar useStyles = styles_1.makeStyles(function () { return ({\n    root: {}\n}); });\nvar LayerIcon = function (_a) {\n    var layerType = _a.layerType, iconProps = _a.iconProps, className = _a.className;\n    var classes = useStyles();\n    var Icon = _1.Multidot;\n    switch (layerType) {\n        case common_1.ProjectTreeLayerTypes.POINT:\n            Icon = _1.Multidot;\n            break;\n        case common_1.ProjectTreeLayerTypes.LINE:\n            Icon = _1.Polyline;\n            break;\n        case common_1.ProjectTreeLayerTypes.POLYGON:\n            Icon = _1.Polygon;\n            break;\n        case common_1.ProjectTreeLayerTypes.RASTER:\n            Icon = _1.Raster;\n            break;\n        case common_1.ProjectTreeLayerTypes.FILE:\n            Icon = InsertDriveFile_1.default;\n            break;\n        case common_1.ProjectTreeLayerTypes.REPORT:\n            Icon = Description_1.default;\n            break;\n        default:\n            break;\n    }\n    return react_1.default.createElement(Icon, __assign({ className: className || classes.root }, iconProps));\n};\nexports.default = LayerIcon;\n//# sourceMappingURL=LayerIcon.js.map","import React from 'react'\nimport { History, useHistory } from 'react-router-dom'\nimport log from 'loglevel'\n\nimport { ThemeProvider } from '@material-ui/styles'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport { ContainerProps } from '@material-ui/core/Container'\n\nimport { Topbar, themes } from '@riverscapes/react-common'\n\ninterface Props {\n    title: string\n    children: React.ReactChild | React.ReactChildren | React.ReactElement\n    history?: History\n    containerProps?: Partial<ContainerProps>\n    signOut?: () => Promise<void>\n}\n\n/**\n * Note: We keep this as a separate component in case WebRAVE needs a second screen\n * (like a settings screen or something)\n * It's basically the screen template with topbar and app frame all set up\n * @param param0\n * @returns\n */\nconst AppWrapper: React.FC<Props> = ({ title, children, history, signOut, containerProps }: Props) => {\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={{ maxWidth: 'md', ...containerProps }}\n                noScroll\n                fullWidth\n                topbar={\n                    <Topbar history={history} title={title} signOutHandler={signOut} shareUrl={window.location.href} />\n                }\n                // footer={<Footer version={config.version as string} />}\n            >\n                <>{children}</>\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\nexport default AppWrapper\n\n/**\n * The cosmos wrapper is here to make our cosmos experience prettier\n * @param param0\n * @returns\n */\nexport const CosmosAppWrapper: React.FC<Props> = ({ children, containerProps }: Props) => {\n    const signOut = (): Promise<void> => Promise.resolve(log.info('logging out'))\n    const history = useHistory()\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={{ maxWidth: 'md', ...containerProps }}\n                noScroll\n                fullWidth\n                topbar={\n                    <Topbar\n                        history={history}\n                        title=\"Riverscapes Warehouse\"\n                        signOutHandler={signOut}\n                        shareUrl={window.location.href}\n                    />\n                }\n            >\n                {children}\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\n// import log from 'loglevel'\n// import { useHosted } from '@northarrowresearch/react-auth'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport { Loading } from '@northarrowresearch/react-common'\n\ninterface Props {\n    title?: string\n}\n\nconst ProjectLoading: React.FC<Props> = ({ title }: Props) => {\n    return (\n        <Loading\n            logoSVG={<CircularProgress size=\"7rem\" thickness={7} />}\n            status={\n                <Typography variant=\"h5\" component=\"div\">\n                    {title || 'Loading...'}\n                </Typography>\n            }\n            containerProps={{\n                maxWidth: 'xl',\n                style: {\n                    position: 'absolute',\n                    zIndex: 1000,\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: '#FFFFFF77'\n                }\n            }}\n        />\n    )\n}\n\nexport default ProjectLoading\n","import Satellite from './SatStreets.json'\n// import Satellite from './Satellite.json'\nimport BasicMap from './BasicMap.json'\n// import TopoMap from './TopoMap.json'\nimport GrayscaleHS from './GrayscaleHS.json'\nimport { BaseLayer } from '../types'\n\nimport {\n    // Satellite as SatIcon,\n    SatelliteOutlined,\n    // Terrain,\n    // DirectionsCar,\n    DirectionsCarOutlined,\n    TerrainOutlined\n} from '@material-ui/icons'\n\nconst mapStyles: BaseLayer[] = [\n    {\n        id: 'SATELLITE',\n        title: 'Satellite Imagery',\n        toolTip: 'Satellite Imagery',\n        Icon: SatelliteOutlined,\n        color: 'green',\n        style: Satellite\n    },\n    {\n        id: 'STREET',\n        title: 'Street Map',\n        toolTip: 'Street Map',\n        Icon: DirectionsCarOutlined,\n        color: 'blue',\n        style: BasicMap\n    },\n    {\n        id: 'HILLSHADE',\n        title: 'Hillshade',\n        toolTip: 'Hillshade',\n        Icon: TerrainOutlined,\n        color: 'blue',\n        style: GrayscaleHS\n    }\n]\n\nexport default mapStyles\n","import { red, green, blue, orange, purple, cyan, lime, brown } from '@material-ui/core/colors'\nimport { Color } from '@material-ui/core'\nimport log from 'loglevel'\nimport baseLayers from './mapStyles'\n\nlet domain = process.env.REACT_APP_DOMAIN\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost'\n    // basename = ''\n}\nlog.debug('config: ', { domain })\nexport const isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development'\nexport const version = process.env.REACT_APP_VERSION\n\nexport const endpoints = {\n    graphql: `${process.env.REACT_APP_GRAPHQL}`\n}\n\nexport const warehouseIconUrl = process.env.PUBLIC_URL + '/RiverscapesLogo.png'\nexport const warehouseUrl = process.env.REACT_APP_WAREHOUSE_URL\n\n/**\n * Here are the App defaults we might want to change\n */\nexport const appDefaults = {\n    appName: 'Riverscapes Project Viewer (webRAVE)',\n    zoomRange: [2, 18], // Think of this like the min and max possible zooms\n    worldBounds: [-180, -90, 180, 90], // the maximum possible bounds\n    baseLayer: baseLayers[0],\n    drawerOpen: true,\n    init: false,\n    minFilterTextLength: 3,\n    maxMapLayers: 5,\n    retryDelayS: 2,\n    refreshDelayS: 20\n}\n\nexport const appRouterPath = '/:programId/:projectId/:config?'\n\nexport const mandatoryMetaColors: Color[] = [red, green, blue, orange, purple, cyan, lime, brown]\n// These are used if the symbology fails to load\nexport const legendColors: Color[] = [red, green, blue, orange, purple, cyan, lime, brown]\n\nexport const redirectUrl = new URL(\n    process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/',\n    window.location.origin\n)\n\nconsole.log('RedirectUrl', { redirectUrl, publicUrl: process.env.PUBLIC_URL })\n","import { appDefaults } from '../config'\nimport { Project, SymbologyJSON, ProjectTreeLeaf, ProjectTreeLayerTypes } from '@riverscapes/common'\nimport { Color } from '@material-ui/core'\nimport { decomposeColor, recomposeColor } from '@material-ui/core/styles/colorManipulator'\n\nexport type FallbackColor = { fg: string; bg: string }\n\n// It's annoying that MaterialUI doesn't expose Alpha function\n// Hopefully this stays put over the next few versions\nexport function addColorAlpha(inColor: string, alpha: number): string {\n    const bgTmp = decomposeColor(inColor)\n    if (bgTmp.type === 'rgb' || bgTmp.type === 'hsl') {\n        bgTmp.type += 'a'\n    }\n    bgTmp.values[3] = alpha\n    const bg = recomposeColor(bgTmp)\n    return bg\n}\n\n/**\n * Tricky problem. Return a string color hex value from a symbology file\n * @param sym\n */\n//  [\n//     {\n//         \"id\": \"bratreachgeometry-bv59z4\",\n//         \"type\": \"line\",\n//         \"source\": \"composite\",\n//         \"source-layer\": \"bratReachGeometry-bv59z4\",\n//         \"layout\": {},\n//         \"paint\": {\"line-color\": \"hsl(0, 100%, 44%)\", \"line-width\": 10}\n//     },\n//     {\n//         \"id\": \"bratreachgeometry-bv59z4 copy\",\n//         \"type\": \"symbol\",\n//         \"source\": \"composite\",\n//         \"source-layer\": \"bratReachGeometry-bv59z4\",\n//         \"layout\": {\"text-field\": [\"get\", \"NHDPlusID\"]},\n//         \"paint\": {\"text-color\": \"hsl(0, 0%, 100%)\"}\n//     }\n//   ]\n\nexport function legendColorFinder(sym?: SymbologyJSON, fallbackColor?: Color): FallbackColor {\n    const defaultFg = fallbackColor ? fallbackColor[500] : '#44444400' // dark grey lines\n    const defaultBg = addColorAlpha(defaultFg, 0.5)\n    const defaultReturn = { fg: defaultFg, bg: defaultBg }\n\n    if (!sym) return defaultReturn\n\n    // For now just return the first color we find\n    try {\n        // Start with line work\n        const lineNode = sym.find((s) => s.type === 'line')\n        const line = lineNode && (lineNode['line-color'] as string)\n\n        const fillNode = sym.find((s) => s.type === 'fill')\n        const fill = fillNode && (fillNode['fill-color'] as string)\n\n        const circleNode = sym.find((s) => s.type === 'circle')\n        const circleFill = circleNode && (circleNode['circle-color'] as string)\n\n        // Foreground prioritizes lines over fills\n        const fg = line || fill || circleFill || defaultFg\n        const bg = addColorAlpha(line || fill || circleFill || defaultFg, 0.5)\n        return { fg, bg }\n    } catch {\n        return defaultReturn\n    }\n}\n\n/**\n * Just a function to grow a bounding rectangle around\n * @param oldBounds [minx, miny, maxx, maxy]\n * @param newRect\n * @returns\n */\nexport function newBounds(\n    oldBounds: [number, number, number, number] | null,\n    newRect?: [number, number, number, number]\n): [number, number, number, number] {\n    const fallback = appDefaults.worldBounds as [number, number, number, number]\n    if (!newRect && !oldBounds) return fallback\n    else if (newRect && !oldBounds) return newRect\n    else if (oldBounds && !newRect) return oldBounds\n    else if (oldBounds && newRect) {\n        return [\n            // Note the extra wrapper function. We do this to keep really wonky values out\n            Math.max(appDefaults.worldBounds[0], Math.min(newRect[0], oldBounds[0])),\n            Math.max(appDefaults.worldBounds[1], Math.min(newRect[1], oldBounds[1])),\n            Math.min(appDefaults.worldBounds[2], Math.max(newRect[2], oldBounds[2])),\n            Math.min(appDefaults.worldBounds[3], Math.max(newRect[3], oldBounds[3]))\n        ]\n    }\n    return fallback\n}\n\nexport function newZoomBounds(\n    oldZBounds: [number, number],\n    newZbounds?: [number | undefined, number | undefined]\n): [number, number] {\n    const fallback = appDefaults.zoomRange as [number, number]\n    if (!oldZBounds && !newZbounds) return fallback\n    else if (!newZbounds) return oldZBounds\n\n    // The min zoom is always set at the APP level\n    const min = oldZBounds ? oldZBounds[0] : appDefaults.zoomRange[0]\n    const max = Math.min(appDefaults.zoomRange[1], Math.max(oldZBounds[1], newZbounds[1] || oldZBounds[1]))\n\n    return [min, max]\n}\n\nexport type TreeNodeID = { branches: number[]; leaves: number[] }\n\n/**\n * MAterial UI uses strings as treenodes. This is a bit awkward for us trying to differentiate branches and leaves\n * @param ids\n */\nexport function treeNodeIDsParse(rawIds: string[]): TreeNodeID {\n    return {\n        branches: rawIds.filter((ids) => ids.indexOf('b-') > -1).map((ids) => parseInt(ids.replace('b-', ''), 10)),\n        leaves: rawIds.filter((ids) => ids.indexOf('l-') > -1).map((ids) => parseInt(ids.replace('l-', ''), 10))\n    }\n}\n\n/**\n * This is the return trip function for taking our TreeNodeID and squooshing it back to an array of strings\n * @param betterIds\n * @returns\n */\nexport function treeNodeIDCreate(betterIds: TreeNodeID): string[] {\n    return [...betterIds.branches.map((bid) => `b-${bid}`), ...betterIds.leaves.map((lid) => `l-${lid}`)]\n}\n\n/**\n * Create an ancestry array with search text we can use to filter the tree\n * it is ordered deepest (current) --> shallowest (root)\n * @param project\n * @param bid\n * @returns\n */\nexport function projectLeafSearchAncestry(project: Project, leaf: ProjectTreeLeaf): [number, string][] {\n    let parent = leaf.pid\n    // Let's just track what we've already found so we don't get circles\n    const ancestry: number[] = []\n    const searchStrings: string[] = []\n\n    // The touchedIds is basically just to insulate against\n    // Everything in  a tree can only have one parent so work down\n    while (parent > -1 && ancestry.length < project.tree.branches.length) {\n        const foundBranch = project.tree.branches.find((br) => br.bid === parent)\n        // If we've found a valid parent then add its label to the search terms\n        if (foundBranch && ancestry.indexOf(foundBranch.bid) < 0) {\n            ancestry.push(foundBranch.bid)\n            searchStrings.push(foundBranch.label.toLowerCase().trim())\n            parent = foundBranch.pid\n        }\n        // Insulate ourselves from endless searching\n        else {\n            parent = -1\n        }\n    }\n    // We put it back int\n    return ancestry.map((bid, idx) => [bid, searchStrings[idx]])\n}\n\nconst SORT_ORDER = [\n    ProjectTreeLayerTypes.POINT,\n    ProjectTreeLayerTypes.LINE,\n    ProjectTreeLayerTypes.POLYGON,\n    ProjectTreeLayerTypes.TIN,\n    ProjectTreeLayerTypes.RASTER\n]\n\nexport function layerSort(leaves: ProjectTreeLeaf[]): ProjectTreeLeaf[] {\n    const newArr = [...leaves]\n    newArr.sort((lyrA, lyrB) => {\n        // First we sort by the layer type\n        if (lyrA.layerType !== lyrB.layerType)\n            return SORT_ORDER.indexOf(lyrA.layerType) - SORT_ORDER.indexOf(lyrB.layerType)\n        // Then we sort by the treePath id order. The way the BusinessLogic file is parsed should be the\n        // same as tree order (TODO: Verify this?!?)\n        else {\n            return lyrA.id - lyrB.id\n        }\n    })\n    return newArr\n}\n","import { atom, selector } from 'recoil'\nimport { appDefaults } from '../config'\nimport { Project, ProjectTreeLeaf, ProjectTreeLayerTileTypes } from '@riverscapes/common'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport { layerSort } from '../lib/util'\n// import log from 'loglevel'\n\n/**\n * This is the SOURCE OF TRUTH for the project tree. In some ways it's the MOST IMPORTANT ATOM\n */\nexport const projectAtom = atom<Project | null>({\n    key: 'project',\n    default: null\n})\n\nexport const authAtom = atom<UseHostedReturn | null>({\n    key: 'auth',\n    default: null\n})\n\n/**\n * Whether the tree pane is open or closed.\n * TODO: this might be way better using useState. Not sure any other components need this\n */\nexport const drawerOpenAtom = atom<boolean>({\n    key: 'drawerOpen',\n    default: appDefaults.drawerOpen\n})\n\n/**\n * When setting active layers or when order isn't important use this one\n */\nexport const activeIdsAtom = atom<number[]>({\n    key: 'map/activeLayerIds',\n    default: []\n})\n\n/**\n * Which layer ids are currently on the map and highlighted in the tree\n */\n\nexport const activeTreeLeavesSelector = selector<ProjectTreeLeaf[]>({\n    key: 'activeTreeLeaves',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const activeIds = get(activeIdsAtom)\n        return proj?.tree.leaves.filter((leaf) => activeIds.indexOf(leaf.id) > -1) || []\n    }\n})\n\n/**\n * Get the active map layer ids in the correct order. Use this in the map or legend, anywhere order\n * is important\n */\nexport const activeLeavesSortedSelector = selector<ProjectTreeLeaf[]>({\n    key: 'map/activeLeavesSorted',\n    get: ({ get }) => {\n        const activeTreeLeaves = get(activeTreeLeavesSelector)\n        const sorted = layerSort(activeTreeLeaves)\n        return sorted\n    }\n})\n\n/**\n * Utility selector for getting just the leaves we can add to a map\n */\nexport const projectMapLayerLeafsSelector = selector<ProjectTreeLeaf[]>({\n    key: 'project/mapLayerLeaves',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj) return []\n        return proj.tree.leaves.filter(\n            ({ layerType, layerPath, nodeExists }) =>\n                ProjectTreeLayerTileTypes.indexOf(layerType) > -1 && nodeExists && layerPath && layerPath.length > 0\n        )\n    }\n})\n\n/**\n * Get all the unique layer paths in a project\n * Use to initilize project-level downloader\n */\nexport const projectLayerPathsSelector = selector<string[]>({\n    key: 'project/layerPaths',\n    get: ({ get }) => {\n        const mapLyrs = get(projectMapLayerLeafsSelector)\n        return mapLyrs.reduce<string[]>(\n            (acc, leaf) => (!leaf.layerPath || acc.indexOf(leaf.layerPath) > -1 ? acc : [...acc, leaf.layerPath]),\n            []\n        )\n    }\n})\n\n/**\n * Selector for all the unique symbologies in the whole project\n * Use to initilize project-level downloader\n */\nexport const projectSymbologiesSelector = selector<string[]>({\n    key: 'symbology/uniqueSymb',\n    get: ({ get }) => {\n        const mapLyrs = get(projectMapLayerLeafsSelector)\n        return mapLyrs.reduce<string[]>(\n            (acc, leaf) => (!leaf.symbology || acc.indexOf(leaf.symbology) > -1 ? acc : [...acc, leaf.symbology]),\n            []\n        )\n    }\n})\n","import { atom, selector, selectorFamily } from 'recoil'\nimport { appDefaults } from '../config'\nimport { ProjectTreeLeaf, TilingStatus, ProjectTreeBranch } from '@riverscapes/common'\nimport { treeNodeIDsParse, TreeNodeID, projectLeafSearchAncestry } from '../lib/util'\n// import log from 'loglevel'\n\nimport { projectAtom, activeIdsAtom } from './project'\nimport { layerStateSelectorFamily } from './layers'\n\nexport const treeFilterTextAtom = atom<string>({\n    key: 'treeFilterText',\n    default: ''\n})\n\nexport const projectLeafHierarchySelector = selector<Record<number, [number, string][]>>({\n    key: 'projectLeafHierarchy',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj) return {}\n        const leafHier = proj.tree.leaves.reduce<Record<number, [number, string][]>>((acc, leaf) => {\n            return {\n                ...acc,\n                [leaf.id]: projectLeafSearchAncestry(proj, leaf)\n            }\n        }, {})\n        return leafHier\n    }\n})\n\nexport const treeInfoPaneIdAtom = atom<number | null>({\n    key: 'tree/treeInfoPaneId',\n    default: null\n})\nexport const treeInfoPaneOpenAtom = atom<boolean>({\n    key: 'tree/treeInfoPaneOpen',\n    default: false\n})\n\n/**\n * Keep track of all the ProjectTreeLeaf objects in the system\n */\nexport const treeLeafSelectorFamily = selectorFamily<ProjectTreeLeaf, number>({\n    key: 'treeLeafSelectorFamily',\n    get:\n        (ptid) =>\n        ({ get }) => {\n            const proj = get(projectAtom)\n            if (!proj) throw new Error('treeLeafSelectorFamily: No project found')\n\n            const leaf = proj.tree.leaves.find(({ id }) => id === ptid)\n            if (!leaf) throw new Error('treeLeafSelectorFamily: No leaf found')\n\n            return leaf\n        }\n})\n\n/**\n * Keep track of the selected tree item.\n * MAterial tree control uses strings for ids so we use the convention 'b-##' and 'l-##' to separate leaves and branches\n */\nexport const treeSelectedIdsAtom = atom<string[]>({\n    key: 'tree/selectedIds',\n    default: []\n})\n\n// This is a convenience selector because the above ids are hard to parse\nexport const treeSelectedSelector = selector<TreeNodeID>({\n    key: 'tree/selectedIdsSelect',\n    get: ({ get }) => {\n        const selectedIds = get(treeSelectedIdsAtom)\n        return treeNodeIDsParse(selectedIds)\n    }\n})\n\n/**\n * Precalc the hidden nodes every time the search text changes\n */\nexport type HiddenNodes = { branches: number[]; leaves: number[] }\nexport const projectHiddenNodesSelector = selector<HiddenNodes>({\n    key: 'projectHiddenNodes',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const retVal: HiddenNodes = { branches: [], leaves: [] }\n        if (!proj) return retVal\n        const hierarchy = get(projectLeafHierarchySelector)\n        const filterText = get(treeFilterTextAtom).toLowerCase().trim()\n\n        // Return nothing if the search text is less than (n) characters\n        if (filterText.length < appDefaults.minFilterTextLength) return retVal\n\n        // Split words by spaces and filter out anything empties\n        const filterTextArr = filterText.split(' ').filter((w) => w.length > 0)\n\n        // Return nothing if there aren't any words\n        if (filterTextArr.length < 1) return retVal\n\n        // First we figure out which leaves are left\n        const allowedLeaves = proj.tree.leaves\n            .filter((leaf) => {\n                const leafHierarchy = hierarchy[leaf.id]\n                // Figure out if all our search words are present somewhere in the leaf's ancestry\n                return filterTextArr.every((word) => {\n                    // Easy case: the leaf contains the word\n                    if (leaf.label.toLowerCase().indexOf(word) > -1) return true\n                    // Harder case: the branch contains the work\n                    return leafHierarchy.find(([, bText]) => bText.indexOf(word) > -1)\n                })\n            })\n            .map(({ id }) => id)\n\n        // Now we figure out which branches have children that re allowed\n        const allowedBranches = Array.from(\n            new Set(allowedLeaves.reduce<number[]>((acc, lid) => [...acc, ...hierarchy[lid].map(([bid]) => bid)], []))\n        )\n        // Then we remove everything else\n        retVal.leaves = proj.tree.leaves.map(({ id }) => id).filter((lid) => allowedLeaves.indexOf(lid) < 0)\n        retVal.branches = proj.tree.branches.map(({ bid }) => bid).filter((bid) => allowedBranches.indexOf(bid) < 0)\n        return retVal\n    }\n})\n\nexport type TreeLeafState = {\n    leaf: ProjectTreeLeaf\n    tilesState: TilingStatus\n    treeAllowed: boolean\n    renderable: boolean\n    hidden: boolean\n    active: boolean\n}\n\nexport const treeLeafStateSelector = selectorFamily<TreeLeafState, number>({\n    key: 'treeLeafStateFamily',\n    get:\n        (ptid) =>\n        ({ get }) => {\n            const layer = get(layerStateSelectorFamily(ptid))\n            const hidden = get(projectHiddenNodesSelector).leaves.indexOf(ptid) > -1\n            const active = get(activeIdsAtom).indexOf(ptid) > -1\n\n            return {\n                leaf: layer.leaf,\n                tilesState: layer.tileStatus,\n                treeAllowed: true,\n                renderable: layer.renderable,\n                hidden,\n                active\n            }\n        }\n})\n\nexport const treeRootBranchId = selector<number | null>({\n    key: 'tree/rootBranchId',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        const branch = proj?.tree.branches.find((br) => br.pid === -1) as ProjectTreeBranch\n        if (!branch) return null\n        return branch.bid\n    }\n})\n\n/**\n * This is going to let us build a tree in a lazy-loading way\n */\n/**\n * This is just the raw, static treebranch\n */\nexport type TreeBranchSelectorReturn = {\n    branch: ProjectTreeBranch\n    children: {\n        // We store these as ids to keep the memory footprint small\n        branches: number[]\n        leaves: number[]\n    }\n}\n\nexport const treeBranchSelectorFamily = selectorFamily<TreeBranchSelectorReturn, number>({\n    key: 'tree/branches',\n    get:\n        (bid) =>\n        ({ get }) => {\n            const proj = get(projectAtom)\n            const branch = proj?.tree.branches.find((br) => br.bid === bid) as ProjectTreeBranch\n\n            if (!proj) throw new Error('treeBranchSelectorFamily: No project found')\n            if (!branch) throw new Error('treeBranchSelectorFamily: No branch found')\n\n            return {\n                branch,\n                children: {\n                    branches: proj.tree.branches.filter((br) => br.pid === bid).map((br) => br.bid),\n                    leaves: proj.tree.leaves.filter((lf) => lf.pid === bid).map(({ id }) => id)\n                }\n            }\n        }\n})\n\n/**\n * Branch state is things like collapsed and selected. We keep that separete so we don't need to worry about re-recursing the tree\n */\nexport type TreeBranchStateReturn = {\n    branch: TreeBranchSelectorReturn\n    hidden: boolean\n    selected: boolean\n    collapsed: boolean\n}\nexport const treeBranchStateSelectorFamily = selectorFamily<TreeBranchStateReturn, number>({\n    key: 'tree/branchState',\n    get:\n        (bid) =>\n        ({ get }) => {\n            const selectedIds = get(treeSelectedSelector)\n            const branch = get(treeBranchSelectorFamily(bid))\n            const hiddenNodes = get(projectHiddenNodesSelector)\n\n            const collapsed = Boolean(get(treeExpandedSelector).indexOf(bid) > -1)\n\n            const selected = Boolean(selectedIds.branches.indexOf(bid) > -1)\n\n            // Testing to see if this tree node should be hidden\n            const hidden = hiddenNodes.branches.indexOf(bid) > -1\n\n            return {\n                branch,\n                hidden,\n                selected,\n                collapsed\n            }\n        }\n})\n\n/****************************************\n * Misc Tree State\n ****************************************/\n\nexport type TreeCtxState = { leafId: number; position: { top: number; left: number } }\n\nexport const treeContextMenuAtom = atom<TreeCtxState | null>({\n    key: 'tree/contextMenu',\n    default: null\n})\n\n/**\n * Keep track of which branches are expanded\n * NOTE: We use 'collapsed' in the xml so this is inverted and a little messy\n * TODO: Not sure this needs to be externalized. Might be a good case for useState\n */\nexport const treeExpandedIdsAtom = atom<string[]>({\n    key: 'tree/expandedIds',\n    default: []\n})\n// This is a convenience selector because the above ids are hard to parse\nexport const treeExpandedSelector = selector<number[]>({\n    key: 'tree/expandedIdsSelect',\n    get: ({ get }) => {\n        return get(treeExpandedIdsAtom)\n            .filter((ids) => ids.indexOf('b-') > -1)\n            .map((ids) => parseInt(ids.replace('b-', ''), 10))\n    }\n})\n// Just get all ids in the project\nexport const treeAllIdsSelector = selector<string[]>({\n    key: 'tree/treeAllIds',\n    get: ({ get }) => {\n        const proj = get(projectAtom)\n        if (!proj) return []\n        return [...proj.tree.branches.map(({ bid }) => `b-${bid}`), ...proj.tree.leaves.map(({ id }) => `l-${id}`)]\n    }\n})\n","import Bottleneck from 'bottleneck'\n\nconst QUEUE = new Bottleneck({\n    maxConcurrent: 5\n})\n\nexport default QUEUE\n","import { atom, atomFamily, selectorFamily } from 'recoil'\nimport { endpoints } from '../config'\n// import { orange } from '@material-ui/core/colors'\nimport { TileService, TilingStatus, getLayerTiles } from '@riverscapes/common'\nimport downloadQueue from '../lib/downloadQueue'\n// import log from 'loglevel'\n\nimport { authAtom, projectAtom } from './project'\n\n/****************************************\n * Tile Service Library\n ****************************************/\n// This is using the requestId pattern found here: https://recoiljs.org/docs/guides/asynchronous-data-queries/\n// This atom does nothign but track the requests made\nexport const tilesRequestIdAtomFamily = atomFamily<number, string>({\n    key: 'tiles/tileReq',\n    default: 0\n})\n// Request and retry are subtly different. Requests can be used as a generic way to refresh data (valid or not)\n// Retries get incremented only when there's an error\nexport const tilesRetriesAtomFamily = atomFamily<number, string>({\n    key: 'tiles/tileRetries',\n    default: 0\n})\n\nexport const usableIdsAtom = atom<number[]>({\n    key: 'tiles/usableIds',\n    default: []\n})\n\nexport const tilesSelectorFamily = selectorFamily<TileService, string>({\n    key: 'tiles/tiles',\n    get:\n        (layerPath) =>\n        async ({ get }) => {\n            // By just including this here (even if we don't assign it) we add tilesRequestIdAtomFamily\n            // as a rippling dependency so updating tilesRequestIdAtomFamily will cause this query to refresh\n            get(tilesRequestIdAtomFamily(layerPath))\n            // Retries are for errors\n            get(tilesRetriesAtomFamily(layerPath))\n\n            const auth = get(authAtom)\n            const proj = get(projectAtom)\n\n            // TODO: Set Priority here\n            // ATOM LOOKUP PRIORITY\n            let retVal: TileService = {\n                status: TilingStatus.UNKNOWN\n            }\n            if (!proj || !auth || !layerPath) return retVal\n\n            // Make the Asynchronous call to the API here\n            // A priority between 0 and 9. A job with a priority of 4 will be queued ahead of a job with a priority of 5\n            // Default is 5\n            try {\n                const apiRes = await downloadQueue.schedule({ priority: 5 }, () =>\n                    auth\n                        .getCurrentToken()\n                        .then((jwt) =>\n                            getLayerTiles(endpoints.graphql, jwt, proj.projType, proj?.program, proj?.id, layerPath)\n                        )\n                )\n                if (!apiRes || apiRes.errors || !apiRes.data) {\n                    // Tiling errors don't get retried. We reached the server correctly so\n                    // Any further request will likely be met with a similar result\n                    retVal.status = TilingStatus.TILING_ERROR\n                    if (apiRes.errors && apiRes.errors.length > 0) {\n                        retVal.error = apiRes.errors.map((e) => JSON.stringify(e)).join(', \\n')\n                    }\n                }\n                retVal = {\n                    ...retVal,\n                    ...apiRes.data?.getLayerTiles\n                }\n            } catch (err) {\n                retVal.status = TilingStatus.FETCH_ERROR\n                retVal.error = err.toString()\n            }\n            return retVal\n        }\n})\n","import { selector, selectorFamily } from 'recoil'\nimport { endpoints } from '../config'\n// import { orange } from '@material-ui/core/colors'\nimport { Symbology, SymbologyStatus, getWebVectorSymbology } from '@riverscapes/common'\nimport downloadQueue from '../lib/downloadQueue'\nimport { authAtom, projectAtom, activeTreeLeavesSelector } from './project'\nimport log from 'loglevel'\n\n/****************************************\n * Tile Vector Symbology Library\n ****************************************/\n/**\n * Selector for all the unique symbologies currently on the map\n */\nexport const activeMapSymbologiesSelector = selector<string[]>({\n    key: 'symbology/activeSymbologies',\n    get: ({ get }) => {\n        const activeSymb = get(activeTreeLeavesSelector)\n        return activeSymb.reduce<string[]>(\n            (acc, leaf) => (!leaf.symbology || acc.indexOf(leaf.symbology) > -1 ? acc : [...acc, leaf.symbology]),\n            []\n        )\n    }\n})\n\nexport const symbologySelectorFamily = selectorFamily<Symbology | null, string>({\n    key: 'symbology/symbology',\n    get:\n        (name: string) =>\n        async ({ get }) => {\n            const proj = get(projectAtom)\n            const auth = get(authAtom)\n            if (!proj || !auth || !name) return null\n            const retVal: Symbology = {\n                name,\n                status: SymbologyStatus.UNKNOWN\n            }\n            // Make the Asynchronous call to the API here\n            // A priority between 0 and 9. A job with a priority of 4 will be queued ahead of a job with a priority of 5\n            // Default is 5\n            const apiRes = await downloadQueue.schedule({ priority: 5 }, () =>\n                auth\n                    .getCurrentToken()\n                    .then((jwt) => getWebVectorSymbology(endpoints.graphql, jwt, proj.projType, name))\n                    .catch((err) => {\n                        log.debug('symbologySelectorFamily', err)\n                    })\n            )\n\n            if (!apiRes || apiRes.errors) {\n                retVal.status = SymbologyStatus.ERROR\n                retVal.error = 'Error downloading symbology'\n                return retVal\n            }\n            return apiRes.data?.getWebVectorSymbology || retVal\n        }\n})\n","import { atom, atomFamily, selector, selectorFamily, noWait } from 'recoil'\nimport {\n    ProjectTreeLeaf,\n    TileService,\n    Symbology,\n    SymbologyStatus,\n    TilingStatus,\n    ProjectTreeLayerTypes\n} from '@riverscapes/common'\n// import log from 'loglevel'\nimport { projectAtom, activeIdsAtom } from './project'\nimport { treeLeafSelectorFamily, treeSelectedSelector } from './tree'\nimport { tilesSelectorFamily } from './tiles'\nimport { symbologySelectorFamily } from './symbology'\nimport { legendColors } from '../config'\n\nexport const assignedRandomColorsAtom = atom<number[]>({\n    key: 'map/assignedColors',\n    default: []\n})\nexport const leafRandomColAtomFamily = atomFamily<number | null, number>({\n    key: 'map/leafRandomCol',\n    default: null\n})\nexport const selectNextColor = selector<number>({\n    key: 'map/selectNextColor',\n    get: ({ get }) => {\n        const current = get(assignedRandomColorsAtom)\n        // Little sloppy here but after all the colours are used up we just get the same color over and over\n        // This shouldn't be an issue because we can't have more than 5 map layers active at a time usually.\n        for (let idx = 0; idx < legendColors.length; idx++) {\n            if (current.indexOf(idx) < 0) return idx\n        }\n        return 0\n    }\n})\n\n/**\n * Layers are derivative state objects with things that are commonly grouped together\n * THis is used PRETTY MUCH EVERYWHERE\n */\n\nexport type MapLayerState = {\n    leaf: ProjectTreeLeaf\n    tiles?: TileService\n    // Symbology can be null for rasters\n    symbology?: Symbology | null\n    treeSelected: boolean\n    legendActive: boolean\n    renderable: boolean\n    symbologyStatus: SymbologyStatus\n    tileStatus: TilingStatus\n}\nexport const layerStateSelectorFamily = selectorFamily<MapLayerState, number>({\n    key: 'map/layers',\n    get:\n        (leafid) =>\n        ({ get }): MapLayerState => {\n            const leaf = get(treeLeafSelectorFamily(leafid)) as ProjectTreeLeaf\n            const selectedIds = get(treeSelectedSelector)\n            const tileServLoadable = get(noWait(tilesSelectorFamily(leaf.layerPath as string)))\n            const symbologyLoadable = get(noWait(symbologySelectorFamily(leaf.symbology as string)))\n\n            // It can be active on the legend without being renderable\n            const legendActive = get(activeIdsAtom).indexOf(leafid) > -1\n\n            const treeSelected = Boolean(selectedIds.leaves && selectedIds.leaves.indexOf(leafid) > -1)\n\n            const tileStatus =\n                tileServLoadable.state !== 'hasValue' ? TilingStatus.FETCHING : tileServLoadable.contents.status\n            // Files are a direct download so they just get an automatic pass because there's nothing to tile\n            // NOTE: THis is not true for TilingStatus.REPORT that still needs to be copied\n            if (leaf.layerType === ProjectTreeLayerTypes.FILE) tileStatus === TilingStatus.SUCCESS\n\n            const symbologyStatus =\n                symbologyLoadable.state !== 'hasValue'\n                    ? SymbologyStatus.FETCHING\n                    : symbologyLoadable.contents?.status || SymbologyStatus.NOT_APPLICABLE\n            const renderable = tileStatus === TilingStatus.SUCCESS && symbologyStatus !== SymbologyStatus.FETCHING\n\n            const retVal: MapLayerState = {\n                leaf,\n                treeSelected,\n                legendActive,\n                renderable,\n                tileStatus,\n                symbologyStatus\n            }\n            if (tileServLoadable.state === 'hasValue') retVal.tiles = tileServLoadable.contents\n            if (symbologyLoadable.state === 'hasValue') retVal.symbology = symbologyLoadable.contents\n\n            return retVal\n        }\n})\n\n/**\n * Pull out the map leaf ids for a given view\n */\nexport const viewProjLeafIdsSelector = selector<Record<string, number[]>>({\n    key: 'map/viewProjLeafIds',\n    get: ({ get }): Record<string, number[]> => {\n        const proj = get(projectAtom)\n        if (!proj || !proj.tree.views) return {}\n        const retVal = proj.tree.views.reduce<Record<string, number[]>>((acc, view) => {\n            const viewIds = view.layers.reduce<number[]>((acc, vl) => {\n                const ptl = proj.tree.leaves.find(({ blLayerId }) => blLayerId && blLayerId === vl.id)\n                if (!ptl) return acc\n                else return [...acc, ptl.id]\n            }, [])\n            return {\n                ...acc,\n                [view.id]: viewIds\n            }\n        }, {})\n\n        return retVal\n    }\n})\n","import { TilingStatus } from '@riverscapes/common'\nimport { atom, selector } from 'recoil'\nimport { appDefaults } from '../config'\nimport { BaseLayer } from '../types'\nimport { layerStateSelectorFamily, leafRandomColAtomFamily, MapLayerState } from './layers'\nimport { activeLeavesSortedSelector } from './project'\n// import log from 'loglevel'\n\n/****************************************\n * Misc Map State\n ****************************************/\n\nexport const baseLayerAtom = atom<BaseLayer>({\n    key: 'map/baseLayer',\n    default: appDefaults.baseLayer\n})\n\n/**\n * What state the viewport is currently in. I'd like this to be ZOOM and LAT/LNG so we can code it into the url\n */\nexport const viewportAtom = atom({\n    key: 'map/viewport',\n    default: null\n})\n\nexport const mapErrorAtom = atom<string>({\n    key: 'map/mapError',\n    default: ''\n})\n\nexport const mapLoadingAtom = atom<boolean>({\n    key: 'map/mapLoading',\n    default: false\n})\n\nexport interface RenderableMapLayer extends MapLayerState {\n    randomColor: number | null\n    lid: number\n    idStr: string\n    beforeId?: string\n}\n\n/**\n * This selector aims to find the difference between what's requested on the map and return only\n * what's actually renderable. This is important because if 'beforeId' references a dud layer\n * there can be problems so it's important that Mapbox only try to render layers we can actually show\n */\nexport const renderableMapLayersSelector = selector<RenderableMapLayer[]>({\n    key: 'map/renderableMapLayers',\n    get: ({ get }) => {\n        const activeLeavesSorted = get(activeLeavesSortedSelector)\n        const usableLayers = activeLeavesSorted\n            .map(({ id }) => get(layerStateSelectorFamily(id)))\n            .filter(({ tileStatus }) => tileStatus === TilingStatus.SUCCESS)\n        const rndCols = usableLayers.map(({ leaf: { id } }) => get(leafRandomColAtomFamily(id)))\n\n        const retVal = usableLayers.reduce<RenderableMapLayer[]>((acc, lyr, idx) => {\n            const id = lyr.leaf.id\n            const retVal: RenderableMapLayer = {\n                ...lyr,\n                randomColor: rndCols[idx],\n                lid: id,\n                idStr: `mapLayer-${id}`\n            }\n            // Anything lower in the stack gets a beforeId tag\n            if (acc.length > 0) retVal.beforeId = acc[acc.length - 1].idStr\n            return [...acc, retVal]\n        }, [])\n        return retVal\n    }\n})\n\n/**\n * Which view is currently active.\\\n */\nexport const activeViewAtom = atom<string | null>({\n    key: 'map/view',\n    default: null\n})\n\n/**\n * The bound fence of the map\n * [minx, miny, maxx, maxy]\n */\nexport const boundsAtom = atom<[number, number, number, number] | null>({\n    key: 'map/bounds',\n    default: null\n})\n\n/**\n * The zoom bound limits [minz, maxz]\n */\nexport const zoomBoundsAtom = atom<[number, number]>({\n    key: 'map/zoomBounds',\n    default: [appDefaults.zoomRange[0], appDefaults.zoomRange[1]]\n})\n/**\n * THis selector is what the map will use to read the bounds. It has two functions\n * 1. It will always return something valid (even though bounds can be null)\n * 2. it groups bounds and zoombounds together since we use them that way a lot\n */\nexport const boundsSelector = selector<{ zoom: [number, number]; bounds: [number, number, number, number] }>({\n    key: 'bounds',\n    get: ({ get }) => {\n        return {\n            zoom: get(zoomBoundsAtom),\n            bounds: get(boundsAtom) || [-180, -90, 180, 90]\n        }\n    }\n})\n","import { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport { viewProjLeafIdsSelector, activeViewAtom, activeIdsAtom, projectAtom } from '../recoil'\n\nexport interface UseViewsReturn {\n    setView: (viewId: string) => void\n    resetView: () => void\n}\n\nconst useViews = (): UseViewsReturn => {\n    const [currView, setCurrView] = useRecoilState(activeViewAtom)\n    const viewLeafIds = useRecoilValue(viewProjLeafIdsSelector)\n    const proj = useRecoilValue(projectAtom)\n    const setActiveMapIds = useSetRecoilState(activeIdsAtom)\n\n    const setView = (viewId: string) => {\n        if (viewId === null || currView === viewId || !viewLeafIds[viewId]) return\n        setCurrView(viewId)\n        setActiveMapIds(viewLeafIds[viewId])\n    }\n    const resetView = () => {\n        if (proj && proj.tree.defaultView) setView(proj.tree.defaultView)\n    }\n\n    return { setView, resetView }\n}\n\nexport default useViews\n","import { useEffect } from 'react'\nimport { useRecoilCallback, useRecoilValue, useSetRecoilState, useRecoilState } from 'recoil'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport useViews from './useViews'\nimport {\n    authAtom,\n    projectAtom,\n    tilesSelectorFamily,\n    symbologySelectorFamily,\n    projectLayerPathsSelector,\n    projectSymbologiesSelector,\n    treeExpandedIdsAtom\n} from '../recoil'\nimport { Project } from '@riverscapes/common'\n// import log from 'loglevel'\n\n/**\n * This custom hook does all the state setup we need to initialize the project once it is loaded\n */\nconst useAppStateInit = (initAuth?: UseHostedReturn, initProj?: Project): void => {\n    const [project, setProjectTree] = useRecoilState(projectAtom)\n    const setAuth = useSetRecoilState(authAtom)\n    const projectSymbologies = useRecoilValue(projectSymbologiesSelector)\n    const projectLayerPaths = useRecoilValue(projectLayerPathsSelector)\n    const setExpanded = useSetRecoilState(treeExpandedIdsAtom)\n    const { resetView } = useViews()\n\n    // This just basically stuffs our project into Recoil\n    // TODO: This may not be needed later when the common library uses recoil too\n    useEffect(() => setProjectTree(initProj || null), [initProj])\n    useEffect(() => setAuth(initAuth || null), [initAuth])\n\n    const preFetchLayerTile = useRecoilCallback(({ snapshot }) => (layerPath: string) => {\n        snapshot.getLoadable(tilesSelectorFamily(layerPath)) // pre-fetch user info\n    })\n\n    const preFetchSymbology = useRecoilCallback(({ snapshot }) => (symbName: string) => {\n        snapshot.getLoadable(symbologySelectorFamily(symbName)) // pre-fetch symbology\n    })\n\n    // TODO:\n    // - load url params\n\n    // Here we set the default expanded nodes when the project loads\n    useEffect(() => {\n        if (!project) setExpanded([])\n        else {\n            resetView() // reset to the default view\n            setExpanded(project.tree.branches.filter((br) => !br.collapsed).map((br) => `b-${br.bid}`))\n        }\n    }, [project])\n\n    // When the symbologies change, preload them\n    useEffect(() => {\n        projectSymbologies.map(preFetchSymbology)\n    }, [projectSymbologies])\n    // When the unique layer paths change preload them\n    useEffect(() => {\n        projectLayerPaths.map(preFetchLayerTile)\n    }, [projectLayerPaths])\n}\n\nexport default useAppStateInit\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport { warehouseUrl } from '../config'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nconst useStyles = makeStyles((theme) => ({\n    rootContainer: {\n        // maxWidth: '50em',\n        // margin: '0 auto',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2, 4, 4, 4)\n    },\n    buttonContainer: {\n        textAlign: 'center'\n    },\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    },\n    logo: {}\n}))\n\n// interface Props {\n//     title: string\n// }\n\nconst ProjectNotFound: React.FC = () => {\n    const classes = useStyles()\n\n    return (\n        <Container className={classes.rootContainer} maxWidth=\"sm\">\n            <div className={classes.spacer} />\n            <Paper className={classes.root}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography paragraph variant=\"body1\">\n                    The project you are looking for could not be found.\n                </Typography>\n                <Typography paragraph variant=\"body1\">\n                    Please go back to the <Link href={`${warehouseUrl}/#/`}>Riverscapes Data Warehouse</Link> and choose\n                    a new project\n                </Typography>\n                <div className={classes.buttonContainer}>\n                    <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/`} stay />\n                </div>\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\nexport default ProjectNotFound\n","import React from 'react'\nimport SplitPane, { Size } from 'react-split-pane'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        height: '100%',\n        position: 'relative'\n        // marginLeft: theme.spacing(1)\n    },\n    splitPane: {},\n    resizer: {\n        background: '#000',\n        opacity: 0.2,\n        zIndex: 1,\n        boxSizing: 'border-box',\n        backgroundClip: 'padding-box',\n        '&:hover': {\n            transition: 'all 2s ease'\n        },\n        '&.horizontal': {\n            height: 11,\n            margin: '-5px 0',\n            borderTop: '5px solid rgba(255, 255, 255, 0)',\n            borderBottom: '5px solid rgba(255, 255, 255, 0)',\n            cursor: 'row-resize',\n            width: '100%',\n            '&:hover': {\n                borderTop: '5px solid rgba(0, 0, 0, 0.5)',\n                borderBottom: '5px solid rgba(0, 0, 0, 0.5)'\n            }\n        },\n        '&.vertical': {\n            width: 11,\n            margin: '0 -5px',\n            borderLeft: '5px solid rgba(255, 255, 255, 0)',\n            borderRight: '5px solid rgba(255, 255, 255, 0)',\n            cursor: 'col-resize',\n            height: '100%',\n            '&:hover': {\n                borderLeft: '5px solid rgba(0, 0, 0, 0.5)',\n                borderRight: '5px solid rgba(0, 0, 0, 0.5)'\n            }\n        },\n        '&.disabled': {\n            cursor: 'not-allowed',\n            '&:hover': {\n                borderColor: 'transparent'\n            }\n        }\n    }\n}))\n\nexport interface AppSplitterProps {\n    open: boolean\n    child1: React.ReactChild\n    child2: React.ReactChild\n    split?: 'horizontal' | 'vertical'\n    primary?: 'first' | 'second'\n    defaultSize?: Size\n    minSize?: Size\n    maxSize?: Size\n}\n\nconst AppSplitter: React.FC<AppSplitterProps> = ({\n    open,\n    child1,\n    child2,\n    split,\n    primary,\n    defaultSize,\n    minSize,\n    maxSize\n}: AppSplitterProps) => {\n    const classes = useStyles()\n    if (!open) return <div className={classes.root}>{!primary || primary === 'first' ? child1 : child2}</div>\n    else {\n        return (\n            <div className={classes.root}>\n                <SplitPane\n                    className={classes.splitPane}\n                    resizerClassName={classes.resizer}\n                    split={split}\n                    primary={primary}\n                    defaultSize={defaultSize}\n                    minSize={minSize}\n                    maxSize={maxSize}\n                    pane1Style={{ overflow: 'hidden' }}\n                    pane2Style={{ overflow: 'hidden' }}\n                >\n                    {child1}\n                    {child2}\n                </SplitPane>\n            </div>\n        )\n    }\n}\n\nexport default AppSplitter\n","import React, { useState } from 'react'\n\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n    },\n    appBar: {\n        flex: '0 0'\n    },\n    tabs: {},\n    tabContents: {\n        position: 'relative',\n        overflow: 'hidden',\n        flexGrow: 1\n    },\n    closeButton: {\n        zIndex: 1000,\n        background: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n        position: 'absolute',\n        top: 0,\n        right: 0\n    }\n}))\n\ninterface TreeDrawerProps {\n    tabs: { label: string; value: React.ReactChild }[]\n}\n\nconst TreeDrawer: React.FC<TreeDrawerProps> = ({ tabs }: TreeDrawerProps) => {\n    const classes = useStyles()\n    const [activeTab, setValue] = useState<number>(0)\n\n    const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n        setValue(newValue)\n    }\n    return (\n        <div className={classes.root}>\n            <Tabs\n                value={activeTab}\n                className={classes.tabs}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n            >\n                {tabs.map((tab, idx) => (\n                    <Tab key={`tab-${idx}`} label={tab.label} value={idx} />\n                ))}\n            </Tabs>\n            {tabs.map(({ value }, tid) => (\n                <div\n                    key={`tab-${tid}`}\n                    className={classes.tabContents}\n                    style={{ display: tid === activeTab ? 'block' : 'none' }}\n                >\n                    {value}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default TreeDrawer\n","import { useRecoilState } from 'recoil'\nimport { activeIdsAtom, activeViewAtom, mapErrorAtom } from '../recoil'\nimport { appDefaults } from '../config'\n\ninterface UseMapLayersReturn {\n    removeLayer: (lid: number) => void\n    addLayer: (lid: number) => void\n    toggleLayer: (lid: number) => void\n}\n\n/**\n * This is everything you'd ever want to do to manipulate layers on the map\n * @returns\n */\nconst useMapLayers = (): UseMapLayersReturn => {\n    const [currView, setCurrView] = useRecoilState(activeViewAtom)\n    const [activeIds, setActiveIds] = useRecoilState(activeIdsAtom)\n    const [error, setError] = useRecoilState(mapErrorAtom)\n\n    const removeLayer = (lid: number): void => {\n        if (error) setError('')\n        if (currView !== null) setCurrView(null)\n        setActiveIds(activeIds.filter((id) => id !== lid))\n    }\n    const addLayer = (lid: number): void => {\n        if (activeIds.length === appDefaults.maxMapLayers) {\n            setError(`Only ${appDefaults.maxMapLayers} layers are allowed at a time.`)\n            return\n        }\n\n        if (error) setError('')\n        if (currView !== null) setCurrView(null)\n        setActiveIds(Array.from(new Set([...activeIds, lid])))\n    }\n    const toggleLayer = (lid: number): void => {\n        if (activeIds.indexOf(lid) > -1) removeLayer(lid)\n        else addLayer(lid)\n    }\n\n    return { removeLayer, addLayer, toggleLayer }\n}\n\nexport default useMapLayers\n","import React from 'react'\nimport highlightWords from 'highlight-words'\nimport { makeStyles } from '@material-ui/core/styles'\n\ninterface TreeNodeLabelProps {\n    text: string\n    query?: string\n}\n\nconst useStyles = makeStyles(() => ({\n    normal: {\n        fontStyle: 'italic',\n        opacity: 0.8\n    },\n    highlighted: {\n        fontWeight: 'bold'\n    }\n}))\n\nexport const TreeNodeLabel: React.FC<TreeNodeLabelProps> = ({ text, query }: TreeNodeLabelProps) => {\n    const classes = useStyles()\n    if (!query || query.length === 0) return <span>{text}</span>\n    const sanitized = query\n        .split(' ')\n        .map((t) => t.trim())\n        .filter((t) => t && t.length > 0)\n        .join(' ')\n    const chunks = highlightWords({ text, query: sanitized })\n\n    return (\n        <span>\n            {chunks.map((c, idx) => (\n                <span key={`textMatch-${idx}`} className={c.match ? classes.highlighted : classes.normal}>\n                    {c.text}\n                </span>\n            ))}\n        </span>\n    )\n}\n\nexport default TreeNodeLabel\n","import React from 'react'\nimport { ProjectTreeLayerTileTypes, TilingStatus, ProjectTreeLayerTypes } from '@riverscapes/common'\n// import log from 'loglevel'\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TreeNodeLabel from './TreeNodeLabel'\n\nimport { LayerIcon } from '@riverscapes/react-icons'\nimport clsx from 'clsx'\n// import log from 'loglevel'\n\nexport interface TreeLeafProps {\n    id: number\n    layerType: ProjectTreeLayerTypes\n    label: string\n    tilesState: TilingStatus\n    active?: boolean\n    hidden?: boolean\n    searchText?: string\n    handleContext: (lid: number, mousex: number, mousey: number) => void\n    handleClick: (lid: number) => void\n    handleDoubleClick: (lid: number) => void\n}\n// const FADE_TIME = 500\n\nconst useLeafStyles = makeStyles((theme) => ({\n    leaf: {\n        cursor: 'context-menu',\n        marginLeft: theme.spacing(2)\n    },\n    active: {\n        fontWeight: 'bold'\n    },\n    treeLeafLabel: {\n        display: 'flex'\n    },\n    innerLabel: {\n        flexGrow: 0\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    metaIcon: {\n        margin: theme.spacing(0.25),\n        opacity: 0.2,\n        fontSize: theme.spacing(2),\n        lineHeight: '1rem'\n    },\n    loadingSpinner: {\n        color: theme.palette.text.secondary\n    },\n    tileStatus: {\n        flexGrow: 0,\n        fontStyle: 'italic'\n    },\n    leafQUEUED: {\n        color: '#999999',\n        fontStyle: 'italic'\n    },\n    leafCREATING: {\n        color: 'orange'\n    },\n    leafTILING_ERROR: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafFETCH_ERROR: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafNOT_FOUND: {\n        color: 'red',\n        fontStyle: 'italic'\n    },\n    leafUNKNOWN: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic'\n    },\n    leafFETCHING: {\n        color: theme.palette.text.secondary,\n        fontStyle: 'italic'\n    },\n    leafSUCCESS: {}\n}))\n\nexport const TreeLeaf: React.FC<TreeLeafProps> = ({\n    id,\n    layerType,\n    label,\n    active,\n    hidden,\n    searchText,\n    tilesState,\n    handleContext,\n    handleClick,\n    handleDoubleClick\n}: TreeLeafProps) => {\n    const classes = useLeafStyles()\n\n    const onCtxMenu = (event) => {\n        event.preventDefault()\n        handleContext(id, event.clientX - 2, event.clientY - 4)\n    }\n    const mapAddable = Boolean(ProjectTreeLayerTileTypes.indexOf(layerType) > -1)\n    let tileStatusStr: React.ReactElement | string | null = null\n    switch (tilesState) {\n        case TilingStatus.SUCCESS:\n            // tileStatusStr = 'Available'\n            break\n        case TilingStatus.QUEUED:\n            tileStatusStr = 'Queued'\n            break\n        case TilingStatus.CREATING:\n            tileStatusStr = 'Building Tiles'\n            break\n        case TilingStatus.TILING_ERROR:\n            tileStatusStr = 'ERROR building tiles'\n            break\n        case TilingStatus.FETCH_ERROR:\n            tileStatusStr = 'ERROR fetching tile information'\n            break\n        case TilingStatus.UNKNOWN:\n            tileStatusStr = (\n                <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n            )\n            break\n        case TilingStatus.FETCHING:\n            tileStatusStr = (\n                <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n            )\n            break\n        default:\n            break\n    }\n\n    return (\n        <TreeItem\n            // this is IMPORTANT! 'l-##' denotes a branch\n            nodeId={`l-${id}`}\n            className={clsx(classes.leaf, mapAddable && tilesState && classes[`leaf${tilesState}`])}\n            // TODO: Temproarily hide layers\n            hidden={\n                hidden ||\n                tilesState === TilingStatus.NOT_FOUND ||\n                layerType === ProjectTreeLayerTypes.FILE ||\n                layerType === ProjectTreeLayerTypes.REPORT\n            }\n            onClick={() => handleClick(id)}\n            onDoubleClick={() => handleDoubleClick(id)}\n            label={\n                <div className={classes.treeLeafLabel}>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"inherit\"\n                        className={clsx(classes.innerLabel, active && classes.active)}\n                    >\n                        <TreeNodeLabel text={label} query={searchText} />\n                    </Typography>\n                    <div className={classes.spacer} />\n                    {tileStatusStr}\n                </div>\n            }\n            onContextMenu={onCtxMenu}\n            icon={<LayerIcon layerType={layerType} />}\n        />\n    )\n}\n\nexport default TreeLeaf\n","import React from 'react'\n\nimport TreeItem from '@material-ui/lab/TreeItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TreeNodeLabel from './TreeNodeLabel'\nimport clsx from 'clsx'\n\nexport interface TreeBranchProps {\n    id: number\n    label: string\n    hidden?: boolean\n    searchText?: string\n    children?: React.ReactChild[]\n}\n\nconst useBranchStyles = makeStyles((theme) => ({\n    branch: {\n        marginTop: theme.spacing(0.5)\n    },\n    iconContainer: {\n        width: theme.spacing(4)\n    },\n    label: {\n        // paddingLeft: theme.spacing(1.5)\n    }\n}))\n\nexport const TreeBranch: React.FC<TreeBranchProps> = ({ id, hidden, label, searchText, children }: TreeBranchProps) => {\n    const classes = useBranchStyles()\n    return (\n        <TreeItem\n            // this is IMPORTANT! 'b-##' denotes a branch\n            nodeId={`b-${id}`}\n            className={clsx(classes.branch)}\n            classes={{\n                label: classes.label,\n                iconContainer: classes.iconContainer\n            }}\n            onDoubleClick={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n            }}\n            onContextMenu={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n            }}\n            hidden={hidden}\n            label={\n                <Typography variant=\"body1\">\n                    <TreeNodeLabel text={label} query={searchText} />\n                </Typography>\n            }\n        >\n            {children}\n        </TreeItem>\n    )\n}\n\nexport default TreeBranch\n","import React from 'react'\n\nimport TreeView from '@material-ui/lab/TreeView'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport AppSplitter from '../AppSplitter'\nimport { debounce } from 'lodash'\n// import log from 'loglevel'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    folderIcon: {\n        color: theme.palette.secondary.main\n    },\n    tree: {\n        flexGrow: 1,\n        overflow: 'scroll',\n        paddingBottom: theme.spacing(5)\n    },\n    searchBox: {\n        flexGrow: 0,\n        padding: theme.spacing(0.5)\n    },\n    searchBoxInput: {\n        padding: theme.spacing(0.75, 0.5)\n    }\n}))\n\ninterface TreeControlProps {\n    lyrInfoOpen: boolean\n    setSearchText: (text: string) => void\n    expanded: string[]\n    ctxMenu: React.ReactElement | null\n    lyrInfo: React.ReactElement | null\n    selected: string[]\n    setExpanded: (ids: string[]) => void\n    setSelected: (id: string[]) => void\n    children: React.ReactChild | React.ReactChild[]\n}\n\nconst TreeControl: React.FC<TreeControlProps> = ({\n    lyrInfoOpen,\n    setSearchText,\n    expanded,\n    ctxMenu,\n    lyrInfo,\n    selected,\n    setExpanded,\n    setSelected,\n    children\n}: TreeControlProps) => {\n    const classes = useStyles()\n\n    const onNodeToggle = (event: React.ChangeEvent<Record<string, unknown>>, nodeIds: string[]) => {\n        setExpanded(nodeIds)\n    }\n\n    const onNodeSelect = (event: React.ChangeEvent<Record<string, unknown>>, nodeIds: string | string[]) => {\n        setSelected(Array.isArray(nodeIds) ? nodeIds : [nodeIds])\n    }\n    const setSearchDebounced = debounce((stext: string) => setSearchText(stext), 100)\n\n    return (\n        <AppSplitter\n            open={lyrInfoOpen}\n            split=\"horizontal\"\n            primary=\"first\"\n            defaultSize=\"60%\"\n            maxSize=\"80%\"\n            minSize=\"30%\"\n            child1={\n                <div className={classes.container}>\n                    <TextField\n                        fullWidth\n                        className={classes.searchBox}\n                        placeholder=\"Filter Project Layers...\"\n                        variant=\"outlined\"\n                        onChange={(event) => {\n                            setSearchDebounced((event.target.value as string).toLowerCase().trim())\n                        }}\n                        InputProps={{\n                            classes: { input: classes.searchBoxInput },\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n                    <TreeView\n                        className={classes.tree}\n                        defaultCollapseIcon={\n                            <>\n                                <ExpandMoreIcon />\n                                <FolderOpenIcon className={classes.folderIcon} />\n                            </>\n                        }\n                        defaultExpandIcon={\n                            <>\n                                <ChevronRightIcon />\n                                <FolderIcon className={classes.folderIcon} />\n                            </>\n                        }\n                        onNodeToggle={onNodeToggle}\n                        onNodeSelect={onNodeSelect}\n                        selected={selected}\n                        expanded={expanded}\n                    >\n                        {children}\n                    </TreeView>\n                    {ctxMenu}\n                </div>\n            }\n            child2={lyrInfo || <div />}\n        />\n    )\n}\n\nexport default TreeControl\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    item: {},\n    error: {\n        color: theme.palette.error.main\n    }\n}))\n\nexport type CtxMenuItemType = {\n    label: string\n    error?: boolean\n    handleClick?: () => void\n    disabled?: boolean\n}[]\n\nexport interface TreeControlProps {\n    position?: { top: number; left: number }\n    open: boolean\n    onClose: () => void\n    menuItems: CtxMenuItemType\n}\n\nconst TreeContextMenu: React.FC<TreeControlProps> = ({ open, position, onClose, menuItems }: TreeControlProps) => {\n    const classes = useStyles()\n    return (\n        <Menu\n            keepMounted\n            open={open}\n            onClose={onClose}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={position}\n            className={classes.root}\n        >\n            {menuItems.map(({ label, handleClick, disabled, error }, idx) => (\n                <MenuItem\n                    key={`ctxMenuIt-${idx}`}\n                    onClick={handleClick}\n                    disabled={disabled}\n                    className={clsx(classes.item, error && classes.error)}\n                >\n                    {label}\n                </MenuItem>\n            ))}\n        </Menu>\n    )\n}\n\nexport default TreeContextMenu\n","import React from 'react'\nimport TreeContextMenu, { CtxMenuItemType } from '../components/tree/TreeContextMenu'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport { layerStateSelectorFamily, TreeCtxState, treeInfoPaneIdAtom, treeInfoPaneOpenAtom } from '../recoil'\nimport { SymbologyStatus, TilingStatus } from '@riverscapes/common'\nimport useMapLayers from '../hooks/useMapLayers'\n\ninterface Props {\n    ctxState: TreeCtxState\n    onClose: () => void\n}\n\nconst TreeContextMenuConnect: React.FC<Props> = ({ ctxState, onClose }: Props) => {\n    const layer = useRecoilValue(layerStateSelectorFamily(ctxState.leafId))\n    const setTreeInfoPaneId = useSetRecoilState(treeInfoPaneIdAtom)\n    const setTreeeInfoPaneOpen = useSetRecoilState(treeInfoPaneOpenAtom)\n    const { addLayer, removeLayer } = useMapLayers()\n    const menuItems: CtxMenuItemType = []\n    if (layer.tileStatus === TilingStatus.FETCHING || layer.symbologyStatus === SymbologyStatus.FETCHING) {\n        menuItems.push({\n            label: 'Loading tile data...',\n            disabled: true\n        })\n    } else {\n        // Now we add some layers\n        if (layer.legendActive) {\n            menuItems.push({\n                label: 'Remove from map',\n                handleClick: (): void => {\n                    removeLayer(layer.leaf.id)\n                    onClose()\n                }\n            })\n        } else if (!layer.legendActive && layer.renderable) {\n            menuItems.push({\n                label: 'Add to map',\n                handleClick: (): void => {\n                    addLayer(layer.leaf.id)\n                    onClose()\n                }\n            })\n        } else if (layer.tileStatus === TilingStatus.QUEUED) {\n            menuItems.push({\n                label: 'Queued for tiling...',\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.CREATING) {\n            menuItems.push({\n                label: 'Currently building tiles...',\n                disabled: true\n            })\n        } else if (layer.tileStatus === TilingStatus.TILING_ERROR) {\n            menuItems.push({\n                label: 'Tiles did not build',\n                disabled: true,\n                error: true\n            })\n        } else if (layer.tileStatus === TilingStatus.FETCH_ERROR) {\n            menuItems.push({\n                label: 'Error fetching tile info',\n                disabled: true,\n                error: true\n            })\n        }\n        menuItems.push({\n            label: 'Layer Information',\n            handleClick: (): void => {\n                setTreeInfoPaneId(ctxState.leafId)\n                setTreeeInfoPaneOpen(true)\n                onClose()\n            }\n        })\n    }\n\n    return (\n        <TreeContextMenu\n            open={Boolean(ctxState)}\n            position={ctxState.position}\n            onClose={onClose}\n            menuItems={menuItems}\n        />\n    )\n}\n\nexport default TreeContextMenuConnect\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { dates } from '@northarrowresearch/common'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    table: {},\n    section: {\n        marginBottom: theme.spacing(3)\n    },\n    sectionHeader: {\n        borderBottom: '1px solid'\n    },\n    metaKey: { fontWeight: 'bold' },\n    metaValue: {\n        color: theme.palette.text.secondary\n    }\n}))\n\ninterface MetaDataProps {\n    title: string\n    meta: Record<string, string>\n}\n\nconst SPECIAL_FORMATS: Record<string, (val: string) => string> = {\n    datecreated: (val) => {\n        const valDate = dates.HTML5InputToTimestamp(val)\n        return valDate > 0 ? `${dates.formatDate(valDate, 'lll')} (${dates.formatDateAgo(valDate)})` : 'unknown'\n    }\n}\nconst formatString = (key: string, val: string): string => {\n    const lwrKey = key.toLowerCase()\n    if (Object.keys(SPECIAL_FORMATS).indexOf(lwrKey) > -1) {\n        return SPECIAL_FORMATS[lwrKey](val)\n    } else return val\n}\n\nconst MetaData: React.FC<MetaDataProps> = ({ title, meta }: MetaDataProps) => {\n    const classes = useStyles()\n    if (Object.keys(meta).length === 0) return null\n    return (\n        <div className={classes.section}>\n            <Typography variant=\"subtitle1\" className={classes.sectionHeader}>\n                {title}\n            </Typography>\n            <TableContainer>\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                    <TableBody>\n                        {Object.keys(meta).map((rowKey) => (\n                            <TableRow key={rowKey}>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.metaKey}>\n                                    {rowKey}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.metaValue}>\n                                    {formatString(rowKey, meta[rowKey])}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\nexport default MetaData\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nimport MetaData from './MetaData'\n\n// TODO: Maybe this isn't the best but I don't want to pass it through the whole system\n// Maybe a connector for WarehouseButton????\nimport { warehouseUrl } from '../../config'\n\nconst DONTSHOW = ['_rs_lyr_origin_url']\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    minimal: {\n        // background:\n    },\n    whNote: {\n        padding: theme.spacing(2, 1)\n    }\n}))\n\ninterface LayerMetaProps {\n    meta: Record<string, string>\n    minimal?: boolean\n}\n\nfunction makeSections(meta: Record<string, string>): Record<string, Record<string, string>> {\n    const keys = Object.keys(meta).filter((k) => DONTSHOW.indexOf(k) < 0)\n\n    const distill = (key) =>\n        keys.filter((k) => k.indexOf(key) === 0).reduce((acc, rk) => ({ ...acc, [rk.replace(key, '')]: meta[rk] }), {})\n\n    return {\n        upstreamWarehouse: distill('_rs_wh_'),\n        upstreamProject: distill('_rs_prj_'),\n        upstreamLayer: distill('_rs_lyr_'),\n        Layer: keys.filter((k) => k.indexOf('_rs') !== 0).reduce((acc, rk) => ({ ...acc, [rk]: meta[rk] }), {})\n    }\n}\n\nconst LayerMeta: React.FC<LayerMetaProps> = ({ meta, minimal }: LayerMetaProps) => {\n    const classes = useStyles()\n    const sections = makeSections(meta)\n    return (\n        <Paper className={minimal ? classes.minimal : classes.root}>\n            {Object.keys(sections.Layer).length > 0 && <MetaData title=\"Layer Metadata\" meta={sections.Layer} />}\n            {!minimal && Object.keys(sections.upstreamWarehouse).length > 0 && (\n                <div className={classes.whNote}>\n                    <Typography variant=\"caption\" component=\"div\">\n                        This layer was imported from a {meta._rs_prj_projType} project in the Riverscapes warehouse. You\n                        can visit the original project using the button below.\n                    </Typography>\n                    <WarehouseButton\n                        title={`Original ${meta._rs_prj_projType} Project`}\n                        href={`${warehouseUrl}#/${meta['_rs_wh_program']}/${meta['_rs_wh_id']}`}\n                    />\n                </div>\n            )}\n            {Object.keys(sections.upstreamProject).length > 0 && (\n                <MetaData title=\"Original Project Metadata\" meta={sections.upstreamProject} />\n            )}\n            {Object.keys(sections.upstreamLayer).length > 0 && (\n                <MetaData title=\"Original Layer Metadata\" meta={sections.upstreamLayer} />\n            )}\n        </Paper>\n    )\n}\n\nexport default LayerMeta\n","import React from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { dates } from '@northarrowresearch/common'\nimport { TileService } from '@riverscapes/common'\n\nimport numeral from 'numeral'\nimport MetaData from './MetaData'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1)\n    },\n    sectionHeader: {\n        borderBottom: '1px solid'\n    },\n    table: {},\n    metaKey: { fontWeight: 'bold' },\n    metaValue: {\n        color: theme.palette.text.secondary\n    }\n}))\n\ninterface LayerTileInfoProps {\n    tiles: TileService\n}\n\nconst LayerTileInfo: React.FC<LayerTileInfoProps> = ({ tiles }: LayerTileInfoProps) => {\n    const classes = useStyles()\n    const meta: Record<string, string> = {\n        Status: tiles.status as string,\n        Error: tiles.error as string,\n        Started: tiles\n            ? `${dates.formatDate(tiles.started, 'lll')} (${dates.formatDateAgo(tiles.started)})`\n            : 'unknown',\n        'Last status': tiles\n            ? `${dates.formatDate(tiles.lastStatus, 'lll')} (${dates.formatDateAgo(tiles.lastStatus)})`\n            : 'unknown',\n        'Creation time': tiles ? `${((tiles.duration || 0) / 60).toFixed(0)} minutes` : 'unknown',\n        'Original Size': tiles && tiles.originFile ? numeral(tiles.originFile.size).format('0.0 b') : 'unknown',\n        'Relative path': tiles.rsLayer?.path || 'unknown',\n        'Physical path': tiles ? (tiles.originFile?.key as string) : 'unknown',\n        'Modified (origin)': tiles\n            ? `${dates.formatDate(tiles.originFile?.lastModified, 'lll')} (${dates.formatDateAgo(\n                  tiles.originFile?.lastModified\n              )})`\n            : 'unknown'\n    }\n    return (\n        <Paper className={classes.root}>\n            <MetaData title=\"Webtile information\" meta={meta} />\n        </Paper>\n    )\n}\n\nexport default LayerTileInfo\n","import React from 'react'\n\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { ProjectTreeLeaf, TileService } from '@riverscapes/common'\nimport { LayerIcon } from '@riverscapes/react-icons'\n\nimport LayerMeta from './LayerMeta'\nimport LayerTileInfo from './LayerTileInfo'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100%',\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    toolbar: {\n        flex: '0 0 ',\n        padding: theme.spacing(0, 1),\n        minHeight: theme.spacing(6),\n        background: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    spacer: { flexGrow: 1 },\n    layerTitle: {},\n    layerIcon: {},\n    layerMeta: {\n        flexGrow: 1,\n        overflowY: 'scroll',\n        userSelect: 'text',\n        '& *': {\n            userSelect: 'text'\n        }\n    },\n    typeContainer: {\n        // borderRadius: theme.spacing(1),\n        // background: '#FFFFFF22',\n        // margin: theme.spacing(1),\n        // padding: theme.spacing(0, 1),\n        // border: '1px solid #FFFFFF22'\n    },\n    closeButton: {\n        // marginLeft: theme.spacing(2)\n    }\n}))\n\ninterface LayerInfoProps {\n    leaf: ProjectTreeLeaf\n    tiles?: TileService\n    handleClose: () => void\n}\n\nconst LayerInfo: React.FC<LayerInfoProps> = ({ leaf, tiles, handleClose }: LayerInfoProps) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.root}>\n            <Toolbar className={classes.toolbar}>\n                <Tooltip title={`This is a ${leaf.layerType} layer`}>\n                    <IconButton edge=\"start\" className={classes.layerIcon} color=\"inherit\" aria-label=\"menu\">\n                        <LayerIcon layerType={leaf.layerType} />\n                    </IconButton>\n                </Tooltip>\n                <Typography variant=\"body2\" className={classes.layerTitle}>\n                    {leaf.label}\n                </Typography>\n                <div className={classes.spacer} />\n                {/* <div className={classes.typeContainer}>\n                    </div> */}\n                <IconButton\n                    edge=\"start\"\n                    className={classes.closeButton}\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={handleClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            </Toolbar>\n            <div className={classes.layerMeta}>\n                {leaf.meta && <LayerMeta meta={leaf.meta || {}} />}\n                {tiles && <LayerTileInfo tiles={tiles} />}\n            </div>\n        </div>\n    )\n}\n\nexport default LayerInfo\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { layerStateSelectorFamily } from '../recoil'\nimport LayerInfo from '../components/meta/LayerInfo'\n\ninterface Props {\n    leafID: number\n    handleClose: () => void\n}\n\nconst TreeLayerInfo: React.FC<Props> = ({ leafID, handleClose }: Props) => {\n    const layer = useRecoilValue(layerStateSelectorFamily(leafID))\n    return <LayerInfo leaf={layer.leaf} tiles={layer.tiles} handleClose={handleClose} />\n}\n\nexport default TreeLayerInfo\n","import React from 'react'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n    projectHiddenNodesSelector,\n    treeAllIdsSelector,\n    treeContextMenuAtom,\n    treeSelectedIdsAtom,\n    treeExpandedIdsAtom,\n    treeFilterTextAtom,\n    treeBranchStateSelectorFamily,\n    treeLeafStateSelector,\n    treeInfoPaneIdAtom,\n    treeInfoPaneOpenAtom,\n    treeRootBranchId\n} from '../recoil'\nimport useMapLayers from '../hooks/useMapLayers'\nimport TreeLeaf from '../components/tree/TreeLeaf'\nimport TreeBranch from '../components/tree/TreeBranch'\nimport TreeControl from '../components/tree/TreeControl'\nimport { isEqual } from 'lodash'\n\nimport TreeContextMenuConnect from './TreeContextMenu.connect'\nimport TreeLayerInfoConnect from './TreeLayerInfo.connect'\nimport log from 'loglevel'\ninterface TreeBranchProps {\n    branchId: number\n    depth: number\n}\n\nconst TreeBranchConnector: React.FC<TreeBranchProps> = ({ branchId, depth }: TreeBranchProps) => {\n    const branchState = useRecoilValue(treeBranchStateSelectorFamily(branchId))\n    const filterText = useRecoilValue(treeFilterTextAtom)\n    if (!branchState || !branchState.branch) return null\n\n    const branches = branchState?.branch.children.branches\n        .map((bid, idx) => (\n            <TreeBranchConnector\n                key={`${branchState?.branch.branch.label}-${bid}-${idx}`}\n                branchId={bid}\n                depth={depth + 1}\n            />\n        ))\n        .filter((d) => d)\n\n    const leaves = branchState?.branch.children.leaves\n        .map((lid, idx) => (\n            <TreeLeafConnector\n                key={`${branchState?.branch.branch.label}-${lid}-${idx}`}\n                leafId={lid}\n                depth={depth + 1}\n            />\n        ))\n        .filter((d) => d)\n\n    // Clean up any dead ends with no leaves\n    if (leaves.length === 0 && branches.length === 0) return null\n\n    return (\n        <TreeBranch\n            id={branchId}\n            label={branchState?.branch.branch.label}\n            hidden={branchState?.hidden}\n            searchText={filterText}\n        >\n            {[...branches, ...leaves]}\n        </TreeBranch>\n    )\n}\n\ninterface TreeLeafProps {\n    leafId: number\n    depth: number\n}\n\nconst TreeLeafConnector: React.FC<TreeLeafProps> = ({ leafId }: TreeLeafProps) => {\n    const treeLeafState = useRecoilValue(treeLeafStateSelector(leafId))\n    const filterText = useRecoilValue(treeFilterTextAtom)\n    const setCtxState = useSetRecoilState(treeContextMenuAtom)\n    const setInfoPaneId = useSetRecoilState(treeInfoPaneIdAtom)\n    const { toggleLayer } = useMapLayers()\n\n    const handleContext = (leafId: number, left: number, top: number) =>\n        setCtxState({ leafId, position: { left, top } })\n\n    if (!treeLeafState || !treeLeafState.leaf || !treeLeafState.leaf.nodeExists) return null\n    const { id, layerType, label } = treeLeafState.leaf\n    return (\n        <TreeLeaf\n            id={id}\n            layerType={layerType}\n            label={label}\n            active={treeLeafState.active}\n            hidden={treeLeafState.hidden}\n            tilesState={treeLeafState.tilesState}\n            searchText={filterText}\n            handleClick={setInfoPaneId}\n            handleDoubleClick={\n                treeLeafState.renderable\n                    ? toggleLayer\n                    : () => {\n                          return\n                      }\n            }\n            handleContext={handleContext}\n        />\n    )\n}\n\nconst TreeControlConnect: React.FC = () => {\n    const setFilterText = useSetRecoilState(treeFilterTextAtom)\n    const rootBranchId = useRecoilValue(treeRootBranchId)\n    const [expandedIds, setExpandedIds] = useRecoilState(treeExpandedIdsAtom)\n    const [selectedIds, setSelectedIds] = useRecoilState(treeSelectedIdsAtom)\n    const [ctxState, setCtxState] = useRecoilState(treeContextMenuAtom)\n    const infoPaneId = useRecoilValue(treeInfoPaneIdAtom)\n    const allIds = useRecoilValue(treeAllIdsSelector)\n\n    const hiddenNodes = useRecoilValue(projectHiddenNodesSelector)\n    const [infoPaneOpen, setInfoPaneOpen] = useRecoilState(treeInfoPaneOpenAtom)\n\n    const setSelected = (ids) => {\n        if (!isEqual(ids, selectedIds)) setSelectedIds(ids)\n    }\n\n    // If there's a search query on then everything is expanded\n    const realExpanded = hiddenNodes.branches.length > 0 ? allIds : expandedIds\n    const realSetExpanded =\n        hiddenNodes.branches.length > 0\n            ? () => {\n                  log.debug('collapsing turned off')\n              }\n            : setExpandedIds\n\n    const lyrInfo =\n        infoPaneOpen && infoPaneId !== null ? (\n            <TreeLayerInfoConnect leafID={infoPaneId} handleClose={() => setInfoPaneOpen(false)} />\n        ) : null\n\n    const treeContrextMenu = ctxState && (\n        <TreeContextMenuConnect ctxState={ctxState} onClose={() => setCtxState(null)} />\n    )\n    const rootBranch = rootBranchId !== null ? <TreeBranchConnector branchId={rootBranchId} depth={0} /> : <div />\n\n    return (\n        <TreeControl\n            lyrInfoOpen={infoPaneOpen}\n            setSearchText={setFilterText}\n            expanded={realExpanded}\n            ctxMenu={treeContrextMenu}\n            lyrInfo={lyrInfo}\n            selected={selectedIds}\n            setExpanded={realSetExpanded}\n            setSelected={setSelected}\n        >\n            {rootBranch}\n        </TreeControl>\n    )\n}\n\nexport default TreeControlConnect\n","import React, { useEffect } from 'react'\nimport { useRecoilCallback, useRecoilValueLoadable } from 'recoil'\nimport {\n    tilesRequestIdAtomFamily,\n    tilesRetriesAtomFamily,\n    boundsAtom,\n    zoomBoundsAtom,\n    tilesSelectorFamily\n} from '../recoil'\nimport { appDefaults } from '../config'\nimport { newBounds, newZoomBounds } from '../lib/util'\nimport { TileService, TilingStatus } from '@riverscapes/common'\n\ninterface MPDProps {\n    layerPath: string\n}\n\nconst MapTilesConnect: React.FC<MPDProps> = ({ layerPath }: MPDProps) => {\n    const tLoad = useRecoilValueLoadable(tilesSelectorFamily(layerPath))\n\n    const updateBoundsState = useRecoilCallback(({ snapshot, set }) => async () => {\n        const tLoad = snapshot.getLoadable(tilesSelectorFamily(layerPath))\n        if (tLoad.state !== 'hasValue') return\n        const tiles = tLoad.contents as TileService\n        // Now we have to carefully decide whether to queue up another fetch or give up\n        const reqId = await snapshot.getPromise(tilesRequestIdAtomFamily(layerPath))\n        const retryId = await snapshot.getPromise(tilesRetriesAtomFamily(layerPath))\n        const bounds = await snapshot.getPromise(boundsAtom)\n        const zoomBounds = await snapshot.getPromise(zoomBoundsAtom)\n        set(boundsAtom, newBounds(bounds, tiles.bounds))\n        set(zoomBoundsAtom, newZoomBounds(zoomBounds, [tiles.minZoom, tiles.maxZoom]))\n        // If we succeeded then there's nothing left to do\n        if (tiles.status === TilingStatus.SUCCESS) {\n            return\n        }\n        // If we failed to fetch then retry the network call\n        else if (tiles.status === TilingStatus.FETCH_ERROR) {\n            if (retryId < 5)\n                setTimeout(() => set(tilesRetriesAtomFamily(layerPath), retryId + 1), appDefaults.retryDelayS * 1000)\n        }\n        // If the tile status is on a transitory state (QUEUED, UNKNOWN, CREATING) then try again in (n) seconds\n        else if (\n            tiles.status === TilingStatus.QUEUED ||\n            tiles.status === TilingStatus.UNKNOWN ||\n            tiles.status === TilingStatus.CREATING\n        ) {\n            setTimeout(() => set(tilesRequestIdAtomFamily(layerPath), reqId + 1), appDefaults.refreshDelayS * 1000)\n        }\n    })\n    useEffect(() => {\n        updateBoundsState()\n    }, [tLoad])\n\n    return null\n}\n\nexport default MapTilesConnect\n","import React, { useMemo } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { ProjectTreeView } from '@riverscapes/common'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1, 0)\n    }\n}))\nconst EMPTY_VID = 'custom'\nexport interface ViewListProps {\n    activeView: string | null\n    defaultView?: string\n    projectViews: ProjectTreeView[]\n    handleChange: (viewId: string) => void\n}\nconst ViewList: React.FC<ViewListProps> = ({ activeView, defaultView, projectViews, handleChange }: ViewListProps) => {\n    const classes = useStyles()\n    const realView = activeView === null ? EMPTY_VID : activeView\n    const viewOptions = useMemo(() => {\n        if (!projectViews || projectViews.length === 0)\n            return [\n                <MenuItem key={EMPTY_VID} value=\"custom\" disabled>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        <em>No custom views</em>\n                    </Typography>\n                </MenuItem>\n            ]\n        const viewOpts =\n            projectViews.map((v, idx) => {\n                const isDefault = v.id === defaultView\n                const defaultString = isDefault ? '(default)' : ''\n                return (\n                    <MenuItem key={`view-${idx}`} value={v.id}>\n                        {v.name} {defaultString}\n                    </MenuItem>\n                )\n            }) || []\n        return [\n            ...viewOpts,\n            activeView === null && (\n                <MenuItem key={EMPTY_VID} value=\"custom\">\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        <em>Custom View</em>\n                    </Typography>\n                </MenuItem>\n            )\n        ]\n    }, [projectViews, activeView])\n\n    return (\n        <FormControl className={classes.root} fullWidth>\n            <InputLabel htmlFor=\"grouped-native-select\">Curated Views</InputLabel>\n            <Select\n                id=\"view\"\n                value={realView}\n                disabled={!projectViews || projectViews.length === 0}\n                variant=\"filled\"\n                onChange={(event) => event.target.value !== EMPTY_VID && handleChange(event.target.value as string)}\n            >\n                {viewOptions}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default ViewList\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { BaseLayer } from '../../types'\n\ninterface BaseLayerPickerProps {\n    baseLayer: BaseLayer\n    baseLayers: BaseLayer[]\n    setBaseLayer: (baseLyr: BaseLayer) => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    menuIcon: {\n        marginRight: theme.spacing(1)\n    },\n    menuItem: {\n        display: 'flex'\n    }\n}))\n\nconst BaseLayerPicker: React.FC<BaseLayerPickerProps> = ({\n    baseLayer,\n    baseLayers,\n    setBaseLayer\n}: BaseLayerPickerProps) => {\n    const classes = useStyles()\n\n    const viewOptions = baseLayers.map((v, idx) => {\n        const Icon = v.Icon\n        return (\n            <MenuItem key={`view-${idx}`} value={v.id} className={classes.menuItem}>\n                <Icon className={classes.menuIcon} />\n                <Typography>{v.title}</Typography>\n            </MenuItem>\n        )\n    })\n\n    return (\n        <FormControl className={classes.root} fullWidth>\n            <InputLabel>Basemap</InputLabel>\n            <Select\n                id=\"baselayer\"\n                value={baseLayer.id}\n                variant=\"filled\"\n                classes={{\n                    selectMenu: classes.menuItem\n                }}\n                onChange={(event) => {\n                    const newBl = baseLayers.find((bl) => bl.id === event.target.value)\n                    if (newBl) setBaseLayer(newBl)\n                }}\n            >\n                {viewOptions}\n            </Select>\n        </FormControl>\n    )\n}\n\nexport default BaseLayerPicker\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\ninterface Props {\n    error?: string\n}\n\nconst LegendError: React.FC<Props> = ({ error }: Props) => {\n    return <Typography color=\"error\">{error || ' '}</Typography>\n}\n\nexport default LegendError\n","import React from 'react'\nimport { ProjectTreeView } from '@riverscapes/common'\nimport ViewList from './ViewList'\nimport BaseLayerPicker from './BaseLayerPicker'\nimport { List } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LegendError from './LegendError'\nimport { BaseLayer } from '../../types'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    legendBox: {\n        padding: theme.spacing(1),\n        border: '1px solid #999999',\n        borderRadius: 5,\n        position: 'absolute',\n        background: 'white',\n        width: 270,\n        boxShadow: '3px 3px 3px #00000066',\n        top: 15,\n        right: 15\n    },\n    subheaders: {\n        background: 'white'\n    },\n    container: {}\n}))\n\ninterface LegendProps {\n    defaultView: string\n    views: ProjectTreeView[]\n    error?: string\n    viewId: string | null\n    setViewId: (viewId: string) => void\n    baseLayer: BaseLayer\n    baseLayers: BaseLayer[]\n    setBaseLayer: (baselayer: BaseLayer) => void\n    children: React.ReactElement[]\n}\n\nconst Legend: React.FC<LegendProps> = ({\n    views,\n    defaultView,\n    children,\n    baseLayer,\n    baseLayers,\n    setBaseLayer,\n    error,\n    viewId,\n    setViewId\n}: LegendProps) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.legendBox}>\n            <div className={classes.root}>\n                <BaseLayerPicker baseLayer={baseLayer} baseLayers={baseLayers} setBaseLayer={setBaseLayer} />\n                <ViewList activeView={viewId} defaultView={defaultView} handleChange={setViewId} projectViews={views} />\n                <div className={classes.container}>\n                    <List dense>{children}</List>\n                </div>\n                <LegendError error={error} />\n            </div>\n        </div>\n    )\n}\n\nexport default Legend\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { LayerIcon } from '@riverscapes/react-icons'\nimport { ProjectTreeLayerTypes } from '@riverscapes/common'\n\n// import { legendColorFinder } from '../../lib/util'\n\nimport { makeStyles } from '@material-ui/core/styles'\n// import { makeStyles, useTheme } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {},\n    root: {\n        marginTop: theme.spacing(2)\n    },\n    heading: {\n        marginTop: theme.spacing(1)\n    },\n    loadingSpinner: {\n        color: theme.palette.text.secondary\n    },\n    layerItem: {\n        display: 'flex'\n    },\n    legendName: {\n        flexGrow: 1\n    },\n    deleteButtonHover: {},\n    legendColor: {\n        border: '1px solid black',\n        width: '20px',\n        display: 'inline-block',\n        height: '14px',\n        marginRight: '5px'\n    },\n    deleteButton: {\n        flexGrow: 0,\n        color: '#AAAAAA'\n    }\n}))\n\nexport interface LegendLayerItemProps {\n    label: string\n    leafId: number\n    loading?: boolean\n    // TODO: This is largely innadequate long term and doesn't handle rasters or color ramps\n    fgColor?: string\n    bgColor?: string\n    layerType: ProjectTreeLayerTypes\n    removeLayer: (lid: number) => void\n}\n\nconst LegendLayerItem: React.FC<LegendLayerItemProps> = ({\n    label,\n    leafId,\n    loading,\n    fgColor,\n    bgColor,\n    layerType,\n    removeLayer\n}: LegendLayerItemProps) => {\n    const classes = useStyles()\n    const bgColFinal = layerType === ProjectTreeLayerTypes.RASTER ? '#FFFFFF' : bgColor || '#66666666'\n    const fgColFinal = layerType === ProjectTreeLayerTypes.RASTER ? '#000000' : fgColor || '#000000'\n    return (\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar style={{ background: bgColFinal }}>\n                    <LayerIcon\n                        layerType={layerType}\n                        iconProps={{\n                            style: { color: fgColFinal }\n                        }}\n                    />\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={label} />\n            <ListItemSecondaryAction>\n                {loading && (\n                    <CircularProgress className={classes.loadingSpinner} color=\"inherit\" thickness={3} size={15} />\n                )}\n                {!loading && (\n                    <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        onClick={(event) => {\n                            event.stopPropagation()\n                            removeLayer(leafId)\n                        }}\n                    >\n                        <CancelIcon />\n                    </IconButton>\n                )}\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nexport default LegendLayerItem\n","import React from 'react'\nimport Legend from '../components/legend/Legend'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport useMapLayers from '../hooks/useMapLayers'\nimport {\n    baseLayerAtom,\n    activeViewAtom,\n    projectAtom,\n    layerStateSelectorFamily,\n    activeLeavesSortedSelector,\n    leafRandomColAtomFamily,\n    treeLeafSelectorFamily,\n    mapErrorAtom\n} from '../recoil'\nimport { legendColors } from '../config'\nimport baseLayers from '../mapStyles'\nimport { legendColorFinder } from '../lib/util'\nimport { ProjectTreeView, SymbologyStatus, TilingStatus } from '@riverscapes/common'\nimport LegendLayerItem from '../components/legend/LegendLayerItem'\nimport useViews from '../hooks/useViews'\n// import log from 'loglevel'\n\nconst LegendConnect: React.FC = () => {\n    const proj = useRecoilValue(projectAtom)\n    const mapError = useRecoilValue(mapErrorAtom)\n    const activeLeaves = useRecoilValue(activeLeavesSortedSelector)\n    const [baseLayer, setBaseLayer] = useRecoilState(baseLayerAtom)\n    const currentView = useRecoilValue(activeViewAtom)\n    const { setView } = useViews()\n\n    if (!proj) return null\n\n    const views: ProjectTreeView[] = proj.tree.views ? proj.tree.views : []\n    const defaultView = views.length > 0 && proj.tree.defaultView ? proj.tree.defaultView : ''\n    return (\n        <Legend\n            views={views}\n            defaultView={defaultView}\n            baseLayer={baseLayer}\n            baseLayers={baseLayers}\n            error={mapError}\n            setBaseLayer={setBaseLayer}\n            viewId={currentView}\n            setViewId={setView}\n        >\n            {activeLeaves.map(({ id }, idx) => (\n                <LegendItemConnect key={`lgdLyr-${idx}`} lid={id} />\n            ))}\n        </Legend>\n    )\n}\n\nexport default LegendConnect\n\ninterface ItemProps {\n    lid: number\n}\n\nconst LegendItemConnect: React.FC<ItemProps> = ({ lid }: ItemProps) => {\n    const leaf = useRecoilValue(treeLeafSelectorFamily(lid))\n    const layer = useRecoilValue(layerStateSelectorFamily(lid))\n    const rndColIdx = useRecoilValue(leafRandomColAtomFamily(lid))\n    const { removeLayer } = useMapLayers()\n\n    const cols = legendColorFinder(\n        layer.symbology?.symbologyJSON,\n        rndColIdx !== null ? legendColors[rndColIdx] : undefined\n    )\n\n    const { id, layerType, label } = leaf\n    return (\n        <LegendLayerItem\n            leafId={id}\n            fgColor={cols.fg}\n            bgColor={cols.bg}\n            layerType={layerType}\n            label={label}\n            loading={layer.tileStatus === TilingStatus.FETCHING || layer.symbologyStatus === SymbologyStatus.FETCHING}\n            removeLayer={removeLayer}\n        />\n    )\n}\n","import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport { Loading } from '@northarrowresearch/react-common'\n\nconst MapLoading: React.FC = () => {\n    return (\n        <Loading\n            logoSVG={<CircularProgress size=\"3rem\" thickness={4} />}\n            status={\n                <Typography variant=\"h5\" component=\"div\">\n                    Loading Map...\n                </Typography>\n            }\n            containerProps={{\n                maxWidth: 'xl',\n                style: {\n                    position: 'absolute',\n                    zIndex: 1000,\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: '#FFFFFF33'\n                }\n            }}\n        />\n    )\n}\n\nexport default MapLoading\n","import React, { useState, useRef, useEffect } from 'react'\nimport { config } from '@riverscapes/react-common'\nimport MapGL, { ViewportProps } from 'react-map-gl'\nimport { makeStyles } from '@material-ui/core/styles'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport MapLoading from './MapLoading'\nimport mapStyles from '../../mapStyles'\nimport { BaseLayer } from '../../types'\nimport { CircularProgress } from '@material-ui/core'\nimport _ from 'lodash'\n// import log from 'loglevel'\n\ninterface MapProps {\n    baseLayer: BaseLayer\n    styleLoading?: boolean\n    bounds?: [minx: number, miny: number, maxx: number, maxy: number]\n    zoomBounds: [minZoom: number, maxZoom: number]\n    children?: React.ReactChild | React.ReactChildren | React.ReactElement[]\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginLeft: theme.spacing(1)\n    },\n    container: {\n        display: 'flex',\n        height: '100%'\n    },\n    mapContainer: {\n        position: 'relative',\n        background: '#CCCCCC',\n        height: '100%',\n        width: '100%',\n        '&>h1': {\n            color: '#9999FF',\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    },\n    drawerContents: {\n        // border: '1px solid green',\n        height: '100%',\n        display: 'flex'\n    },\n    drawerSpacer: {\n        flex: '0 0 0%'\n    },\n    drawerSpacerOpen: {\n        // flex: `0 0 ${DRAWER_WIDTH}`\n    },\n    dialogContainer: {\n        alignItems: 'left',\n        justifyContent: 'left'\n    },\n    loaderSpinner: {\n        position: 'absolute',\n        bottom: 10,\n        right: 10,\n        color: theme.palette.secondary.main\n    },\n    dialog: {\n        position: 'absolute',\n        margin: 0,\n        left: '20px',\n        top: '20px'\n    },\n    subheaders: {\n        background: 'white'\n    },\n    dummyText: {}\n}))\n\nconst defaultViewport: ViewportProps = {\n    // longitude: -115.8,\n    // latitude: 46.1,\n    zoom: 8\n    // bearing: 0,\n    // pitch: 0\n}\n\nconst debounceConsoleLog = _.debounce((...vals) => console.log(...vals), 1500)\n\nconst Map: React.FC<MapProps> = ({ children, baseLayer, styleLoading, bounds, zoomBounds }: MapProps) => {\n    const classes = useStyles()\n    const [viewport, _setViewport] = useState<ViewportProps>(defaultViewport)\n    const viewportRef = useRef<ViewportProps>()\n    viewportRef.current = viewport\n\n    // Constrain the Bounds and zoom\n    const setViewport = (inV: ViewportProps) => {\n        const outV = { ...viewportRef.current, ...inV, pitch: 0, bearing: 0 }\n        // Constrict bounds\n        if (zoomBounds && outV.zoom) {\n            if (outV.zoom > zoomBounds[1]) outV.zoom = zoomBounds[1]\n            else if (outV.zoom < zoomBounds[0]) outV.zoom = zoomBounds[0]\n        }\n        if (bounds && outV.longitude && outV.latitude) {\n            if (outV.longitude < bounds[0]) outV.longitude = bounds[0]\n            else if (outV.longitude > bounds[2]) outV.longitude = bounds[2]\n            if (outV.latitude < bounds[1]) outV.latitude = bounds[1]\n            else if (outV.latitude > bounds[3]) outV.latitude = bounds[3]\n        }\n\n        debounceConsoleLog('setViewport DEBOUNCED', { inV, outV, bounds })\n        _setViewport(outV)\n    }\n\n    const baseStyle = mapStyles.find((bs) => bs.id === baseLayer.id) as BaseLayer\n\n    // When loading we may get an initial zoom and/or bounds value\n    useEffect(() => {\n        const newViewport = { ...viewportRef.current }\n        // First set\n        if (!newViewport.latitude && bounds) {\n            setViewport({\n                ...newViewport,\n                longitude: (bounds[0] + bounds[2]) / 2,\n                latitude: (bounds[1] + bounds[3]) / 2\n            })\n        }\n    }, [bounds, zoomBounds])\n\n    const mapLoader = styleLoading && <CircularProgress size=\"2rem\" thickness={6} className={classes.loaderSpinner} />\n\n    // NO HOOKS BELOW HERE\n    if (!baseStyle || !bounds) return <MapLoading />\n    return (\n        <div className={classes.mapContainer}>\n            <MapGL\n                {...viewport}\n                width=\"100%\"\n                height=\"100%\"\n                minZoom={zoomBounds[0] || 4}\n                maxZoom={zoomBounds[1] || 20}\n                mapStyle={baseStyle.style}\n                clickRadius={2}\n                onViewportChange={setViewport}\n                mapboxApiAccessToken={config.mapConfig.mapBoxToken}\n            >\n                {mapLoader}\n                {children}\n            </MapGL>\n        </div>\n    )\n}\n\nexport default Map\n","import React from 'react'\nimport { Fab } from '@material-ui/core'\nimport LayersClearIcon from '@material-ui/icons/LayersClear'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LayersIcon from '@material-ui/icons/Layers'\n\ninterface Props {\n    drawerOpen?: boolean\n    toggleDrawer: () => void\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(1)\n    }\n}))\n\nconst ProjectLoading: React.FC<Props> = ({ drawerOpen, toggleDrawer }: Props) => {\n    const classes = useStyles()\n    return (\n        <Fab color=\"primary\" aria-label=\"add\" onClick={toggleDrawer} size=\"small\" className={classes.root}>\n            {drawerOpen ? <LayersClearIcon /> : <LayersIcon />}\n        </Fab>\n    )\n}\n\nexport default ProjectLoading\n","import { TileService, GISTileLayer, ProjectTreeLeaf } from '@riverscapes/common'\nimport { Color } from '@material-ui/core'\n\nfunction calculateOpacity(transparency = 0): number {\n    const sanitized = Math.max(0, Math.min(100, transparency))\n    return 1 - sanitized / 100\n}\n\nfunction commonFeatures(layerId?: string, tiles?: TileService): Record<string, unknown> {\n    const lyrProps = {\n        minzoom: tiles?.minZoom || 0,\n        maxzoom: 24,\n        layout: {}\n    }\n    if (tiles?.rsLayer?.subLayers) {\n        const sublyr = tiles.rsLayer.subLayers.find((sl) => sl.id === layerId) as GISTileLayer\n        lyrProps['source-layer'] = sublyr.path\n    } else {\n        lyrProps['source-layer'] = tiles?.rsLayer?.id\n    }\n    return lyrProps\n}\n\nfunction getPolygonOutlineLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Record<string, unknown> {\n    const lyrProps = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'line',\n        paint: {\n            'line-color': rndColor[500],\n            'line-opacity': calculateOpacity(leaf.transparency)\n        }\n    }\n\n    return lyrProps\n}\n\nfunction getPolygonLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Record<string, unknown> {\n    const lyrProps = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'fill',\n        paint: {\n            'fill-opacity': calculateOpacity(leaf.transparency),\n            'fill-color': rndColor[700]\n        }\n    }\n    return lyrProps\n}\n\nfunction getPointLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Record<string, unknown> {\n    const lyrProps = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'circle',\n        paint: {\n            'circle-stroke-opacity': 1,\n            'circle-stroke-width': 2,\n            'circle-stroke-color': calculateOpacity(leaf.transparency),\n            'circle-opacity': 0.5,\n            'circle-radius': 4,\n            'circle-color': rndColor[700]\n        }\n    }\n    return lyrProps\n}\n\nfunction getLineLayer(leaf: ProjectTreeLeaf, rndColor: Color, tiles?: TileService): Record<string, unknown> {\n    const lyrProps = {\n        ...commonFeatures(leaf.layerId, tiles),\n        type: 'line',\n        paint: {\n            'line-color': rndColor[500],\n            'line-opacity': calculateOpacity(leaf.transparency)\n        }\n    }\n    return lyrProps\n}\n\nexport default {\n    line: getLineLayer,\n    point: getPointLayer,\n    polygon: getPolygonLayer,\n    outline: getPolygonOutlineLayer\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { MapContext, SourceProps, LayerProps } from 'react-map-gl'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport {\n    baseLayerAtom,\n    MapLayerState,\n    mapLoadingAtom,\n    RenderableMapLayer,\n    renderableMapLayersSelector\n} from '../recoil'\nimport { legendColors } from '../config'\nimport defaultSymbology from '../components/map/defaultSymbology'\nimport log from 'loglevel'\nimport { ProjectTreeLayerTypes, TileService } from '@riverscapes/common'\n\nfunction getLayerKey(lid: number): string {\n    return `webRAVE_${lid || 'UNKNOWN'}`\n}\n\nfunction getSourceKey(layerPath: string): string {\n    return `webRAVE_${layerPath}`\n}\n\nconst MapLayers: React.FC = () => {\n    const [retry, setRetry] = useState<number>(0)\n    const { map } = React.useContext(MapContext)\n    const baseLayer = useRecoilValue(baseLayerAtom)\n    const [mapLoading, setMapLoading] = useRecoilState(mapLoadingAtom)\n    const renderableMapLayers = useRecoilValue(renderableMapLayersSelector)\n\n    const recalcMapLayers = useCallback(() => {\n        if (!map || !map.isStyleLoaded()) {\n            setMapLoading(true)\n            throw new Error('Map is still loading')\n        }\n        setMapLoading(false)\n\n        const getMapStyle = (): { layers: string[]; sources: string[] } => {\n            const defaultVal = { layers: [], sources: [] }\n            try {\n                const mapStyles = map.getStyle()\n                const mapLayers = mapStyles.layers\n                const mapSources = mapStyles.sources\n                // Get all currently loaded layers and sources from the mapStyle object\n                const currLayerIds = mapLayers.map(({ id }) => id).filter((id) => id.indexOf('webRAVE') === 0)\n                const currSourceIds = Object.keys(mapSources).filter((id) => id.indexOf('webRAVE') === 0)\n                return { layers: currLayerIds, sources: currSourceIds }\n            } catch (e) {\n                // log.error('MapLayers Error retrieving styles', e)\n                return defaultVal\n            }\n        }\n\n        // Make a quick lookup [layerMapboxId] => {layer, sourceMapboxId}\n        const renderablelayersDict = renderableMapLayers.reduce<\n            Record<string, { layer: RenderableMapLayer; sourceId: string }>\n        >(\n            (acc, lyr) => ({\n                ...acc,\n                [getLayerKey(lyr.leaf.id)]: { layer: lyr, sourceId: getSourceKey(lyr.leaf.layerPath || 'UNKNOWN') }\n            }),\n            {}\n        )\n\n        let lastId\n        // Add any new layers. We reverse them because we want the beforeId property to be correct\n        Object.keys(renderablelayersDict).forEach((newKey) => {\n            const { layer, sourceId } = renderablelayersDict[newKey]\n            // Keep track of the layers we're adding here for each tree leaf\n            const addedLayers: string[] = []\n            const mapStyle = getMapStyle()\n            // Layer has already been added. We can set the layer order but otherwise do nothing\n            if (mapStyle.layers.indexOf(newKey) < 0) {\n                // Add the source (if necessary)\n                if (mapStyle.sources.indexOf(sourceId) < 0) {\n                    if (layer.leaf.layerType === ProjectTreeLayerTypes.RASTER) {\n                        map.addSource(sourceId, getRasterSource(layer.tiles as TileService))\n                    } else {\n                        map.addSource(sourceId, getVectorSource(layer.tiles as TileService))\n                    }\n                }\n                // Add the layer (every time)\n                if (layer.leaf.layerType === ProjectTreeLayerTypes.RASTER) {\n                    map.addLayer(getRasterLayerProps(layer, newKey, sourceId))\n                    addedLayers.push(newKey)\n                } else {\n                    let symbJSON = (layer.symbology?.symbologyJSON || []) as Record<string, unknown>[]\n                    // If we need a default fallback symbology then go create one\n                    if (symbJSON && layer.randomColor !== null) {\n                        const rndCol = legendColors[layer.randomColor]\n                        switch (layer.leaf.layerType) {\n                            case ProjectTreeLayerTypes.LINE:\n                                symbJSON = [defaultSymbology.line(layer.leaf, rndCol, layer.tiles)]\n                                break\n                            case ProjectTreeLayerTypes.POLYGON:\n                                symbJSON = [\n                                    defaultSymbology.polygon(layer.leaf, rndCol, layer?.tiles),\n                                    defaultSymbology.outline(layer.leaf, rndCol, layer?.tiles)\n                                ]\n                                break\n                            case ProjectTreeLayerTypes.POINT:\n                                symbJSON = [defaultSymbology.line(layer.leaf, rndCol, layer.tiles)]\n                                break\n                            default:\n                                break\n                        }\n                    }\n                    symbJSON.forEach((symb, idx) => {\n                        const idStrIdx = idx === 0 ? newKey : `${newKey}-${idx}`\n                        const lyrProps = getVectorLayerProps(layer, symb, idStrIdx, sourceId)\n                        map.addLayer(lyrProps)\n                        addedLayers.push(idStrIdx)\n                    })\n                }\n                log.debug('MapLayers::AddLayer', { layer, sourceId, newKey, lastId })\n            } else {\n                // If this layer is already loaded then we probably just have to consider\n                // What order it's in\n                const applicableLayers = getMapStyle().layers.filter((lid) => lid.indexOf(newKey) > -1)\n                applicableLayers.forEach((lKey) => addedLayers.push(lKey))\n            }\n            // Regardless of the layer being found we might need to reorder it\n            addedLayers.forEach((addKey) => {\n                if (lastId) {\n                    // const currLayers = getMapStyle().layers\n                    log.debug(`MapLayers:: Moving ${addKey} before ${lastId}`)\n                    // const currIndex = currLayers.indexOf(addKey)\n                    // const lastIndex = currLayers.indexOf(lastId)\n                    // Moving layers is expensive so don't do it unless you have to\n                    // if (currIndex > -1 && lastIndex > -1 && currIndex !== lastIndex + 1) {\n                    map.moveLayer(addKey, lastId)\n                    // }\n                }\n                lastId = addKey\n            })\n        })\n\n        // Remove any unused Layers\n        // TODO: Right now we don't clean up sources. Just layers\n        getMapStyle().layers.forEach((currId) => {\n            // Remember a webRave layer can represent more than one mapbox layer\n            if (!Object.keys(renderablelayersDict).find((newKey) => currId.indexOf(newKey) == 0)) {\n                map.removeLayer(currId)\n            }\n        })\n        // Reset any retries we might be looking into\n        setRetry(0)\n    }, [map, mapLoading, renderableMapLayers, baseLayer])\n\n    // When baselayer changes we reset the map\n    useEffect(() => {\n        try {\n            log.info('recalcMapLayers:Regular')\n            recalcMapLayers()\n        } catch (e) {\n            if (retry < 20) setTimeout(() => setRetry(retry + 1), 2000)\n        }\n    }, [map, mapLoading, renderableMapLayers, baseLayer])\n\n    useEffect(() => {\n        try {\n            log.info('recalcMapLayers:Regular')\n            if (retry > 0) recalcMapLayers()\n        } catch (e) {\n            if (retry < 20) setTimeout(() => setRetry(retry + 1), 2000)\n        }\n    }, [retry])\n\n    // This is kind of a bogus react component\n    return null\n}\n\nexport default MapLayers\n\nfunction getVectorSource(tiles: TileService): SourceProps {\n    return {\n        type: 'vector',\n        maxzoom: tiles.maxZoom || 20,\n        minzoom: tiles.minZoom || 4,\n        tiles: [`${tiles.url}{z}/{x}/{y}.${tiles.format || 'pbf'}`]\n    }\n}\nfunction getRasterSource(tiles: TileService): SourceProps {\n    return {\n        type: 'raster',\n        scheme: 'tms',\n        maxzoom: tiles.maxZoom || 20,\n        minzoom: tiles.minZoom || 4,\n        tiles: [`${tiles.url}{z}/{x}/{y}.${tiles.format || 'png'}`]\n    }\n}\n\nfunction getRasterLayerProps(layer: MapLayerState, id: string, sourceId: string): LayerProps {\n    const lyrProps: LayerProps = {\n        type: 'raster',\n        id,\n        source: sourceId,\n        minzoom: layer.tiles?.minZoom || 0,\n        maxzoom: 24,\n        layout: {},\n        paint: {}\n    }\n    return lyrProps\n}\n\nfunction getVectorLayerProps(layer: MapLayerState, symb: Record<string, unknown>, id: string, sourceId: string) {\n    const lyrProps = {\n        // this will get overridden by\n        type: 'fill',\n        minzoom: layer.tiles?.minZoom || 0,\n        maxzoom: 24, // hardcoded to the max value possible\n        layout: {},\n        paint: {},\n        ...symb,\n        id,\n        source: sourceId\n    }\n    return lyrProps\n}\n","import React from 'react'\nimport LegendConnect from './Legend.connect'\n// import MapLayerConnect from './MapLayer.connect'\nimport { useRecoilValue, useRecoilState } from 'recoil'\nimport { baseLayerAtom, boundsSelector, drawerOpenAtom, mapLoadingAtom } from '../recoil'\nimport Map from '../components/map/Map'\nimport TreeToggleBtn from '../components/TreeToggleBtn'\nimport MapLayerConnect from './MapLayer.connect'\n\nconst MapConnect: React.FC = () => {\n    const bounds = useRecoilValue(boundsSelector)\n    const mapLoading = useRecoilValue(mapLoadingAtom)\n\n    const baseLayer = useRecoilValue(baseLayerAtom)\n    const [drawerOpen, toggleDrawer] = useRecoilState(drawerOpenAtom)\n\n    return (\n        <React.Fragment>\n            <Map baseLayer={baseLayer} zoomBounds={bounds.zoom} bounds={bounds.bounds} styleLoading={mapLoading}>\n                {[\n                    <TreeToggleBtn\n                        key=\"treeToggleBtn\"\n                        drawerOpen={drawerOpen}\n                        toggleDrawer={() => toggleDrawer(!drawerOpen)}\n                    />,\n                    <LegendConnect key=\"legend\" />,\n                    <MapLayerConnect key=\"mapLayers\" />\n                ]}\n            </Map>\n        </React.Fragment>\n    )\n}\n\nexport default MapConnect\n","import React from 'react'\nimport { dates } from '@northarrowresearch/common'\nimport { DownloadZipBtn, PendingZips } from '@riverscapes/react-common'\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\nimport { warehouseUrl } from '../config'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport { Project } from '@riverscapes/common'\nimport MetaData from './meta/MetaData'\nimport { WarehouseButton } from '@riverscapes/react-common'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n        height: '100%',\n        overflowY: 'scroll',\n        userSelect: 'text',\n        '& *': {\n            userSelect: 'text'\n        }\n    },\n    btnGroup: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n        '&>*': {\n            flex: '0 0 calc(50% - 0.5em)'\n        },\n        margin: theme.spacing(1, 1, 3, 1)\n    },\n    divider: {\n        marginTop: theme.spacing(3)\n    },\n    footerLogo: {}\n}))\n\ninterface ProjectInfoTabProps {\n    project: Project\n    downloadZipFile: (project: Project) => Promise<void>\n    pendingZips: PendingZips\n}\n\nconst ProjectInfoTab: React.FC<ProjectInfoTabProps> = ({\n    project,\n    downloadZipFile,\n    pendingZips\n}: ProjectInfoTabProps) => {\n    const classes = useStyles()\n\n    const projectInfo = {\n        Title: project.name,\n        Type: project.projType,\n        'Warehouse ID': project.id,\n        'Warehouse Tags': Array.isArray(project.tags) ? project.tags.join(', ') : '<None>',\n        'Project Created': `${dates.formatDate(project.createdOn, 'lll')} (${dates.formatDateAgo(project.createdOn)})`,\n        'Project Updated': `${dates.formatDate(project.updatedOn, 'lll')} (${dates.formatDateAgo(project.updatedOn)})`\n    }\n    const pendingSince = project && pendingZips[project.id]\n    return (\n        <Paper className={classes.root}>\n            <Typography variant=\"h4\" paragraph color=\"textPrimary\">\n                {project.projType} Project\n            </Typography>\n            <Divider />\n            <Typography component=\"div\" paragraph>\n                This project exists within the Riverscapes Data Warehouse. You can download this project and view it\n                using the free{' '}\n                <a href=\"https://rave.riverscapes.xyz\" target=\"_blank\" rel=\"noreferrer\">\n                    RAVE\n                </a>{' '}\n                {/* plugin for either QGIS or ArcGIS. */}\n                plugin for ArcGIS.\n            </Typography>\n            <div className={classes.btnGroup}>\n                <WarehouseButton title={`Warehouse`} href={`${warehouseUrl}/#/${project.program}/${project.id}`} />\n                <DownloadZipBtn\n                    downloadZipFile={downloadZipFile}\n                    pendingSince={pendingSince}\n                    project={project}\n                    // btnProps={{}}\n                    title=\"Download\"\n                />\n            </div>\n            <MetaData title=\"Project Information\" meta={projectInfo} />\n            <MetaData title=\"Project Metadata\" meta={project.meta} />\n\n            <Divider className={classes.divider} />\n            <a href=\"http://riverscapes.xyz\" target=\"_blank\" rel=\"noreferrer\">\n                <img\n                    className={classes.footerLogo}\n                    alt=\"footer\"\n                    src={`${process.env.PUBLIC_URL}/cc-watermarks-riverscapes_orig.png`}\n                />\n            </a>\n        </Paper>\n    )\n}\n\nexport default ProjectInfoTab\n","import { ProjectTreeLayerTypes, SymbologyStatus } from '@riverscapes/common'\nimport { useEffect } from 'react'\nimport { useRecoilValue, useRecoilCallback } from 'recoil'\nimport {\n    assignedRandomColorsAtom,\n    selectNextColor,\n    layerStateSelectorFamily,\n    leafRandomColAtomFamily,\n    activeTreeLeavesSelector\n} from '../recoil'\n// import log from 'loglevel'\n\nconst useColourFallback = (): void => {\n    const activeTreeLeaves = useRecoilValue(activeTreeLeavesSelector)\n    /**\n     * We can use a Recoil Callback here to make sure we don't overfetch any state while we're assigning a color\n     */\n    const assignRndCol = useRecoilCallback(({ snapshot, set }) => async (lid: number) => {\n        const colIds = await snapshot.getPromise(assignedRandomColorsAtom) // pre-fetch user info\n        const currRndCol = await snapshot.getPromise(leafRandomColAtomFamily(lid)) // pre-fetch user info\n        const layer = await snapshot.getPromise(layerStateSelectorFamily(lid))\n        const nextCol = await snapshot.getPromise(selectNextColor) // pre-fetch user info\n\n        let needRndCol = false\n        // Symbology and tiles are loaded asynchronously so we might need a loading state here\n        if (!layer.symbology || layer.symbology.status !== SymbologyStatus.FOUND) {\n            needRndCol = true\n        }\n\n        // Only do this if we haven't already assigned a color. Should save on churn\n        if (needRndCol && currRndCol === null) {\n            set(assignedRandomColorsAtom, [...colIds, nextCol])\n            set(leafRandomColAtomFamily(lid), nextCol)\n        }\n        // Unsetting isn't exactly just an Else case\n        else if (!needRndCol && currRndCol !== null) {\n            set(\n                assignedRandomColorsAtom,\n                colIds.filter((cid) => cid === currRndCol)\n            )\n            set(leafRandomColAtomFamily(lid), null)\n        }\n    })\n\n    useEffect(() => {\n        const exFunc = async () => {\n            for (let idx = 0; idx < activeTreeLeaves.length; idx++) {\n                if (activeTreeLeaves[idx].layerType !== ProjectTreeLayerTypes.RASTER)\n                    await assignRndCol(activeTreeLeaves[idx].id)\n            }\n        }\n        exFunc()\n    }, [activeTreeLeaves])\n}\n\nexport default useColourFallback\n","import React from 'react'\nimport { History } from 'react-router-dom'\nimport AppWrapper from '../components/AppWrapper'\n// import log from 'loglevel'\n// import { useHosted } from '@northarrowresearch/react-auth'\nimport { UseHostedReturn } from '@northarrowresearch/react-auth'\nimport ProjectLoading from '../components/ProjectLoading'\nimport { useDownloads, NotAllowedModal, useProgram, useProject } from '@riverscapes/react-common'\nimport { Program, WarehouseRoleEnum } from '@riverscapes/common'\n\nimport useAppStateInit from '../hooks/useAppStateInit'\nimport { drawerOpenAtom, projectLayerPathsSelector } from '../recoil'\nimport { useRecoilValue } from 'recoil'\nimport ProjectNotFound from '../components/ProjectNotFound'\nimport AppSplitter from '../components/AppSplitter'\nimport TreeDrawer from '../components/TreeDrawer'\nimport TreeControlConnect from './Treecontrol.connect'\nimport MapTilesConnect from './MapTiles.connect'\nimport MapConnect from './Map.connect'\nimport ProjectInfoTab from '../components/ProjectInfoTab'\nimport useColourFallback from '../hooks/useColourFallback'\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * same place. Time will tell if that's a good strategy.\n * This is also where we carry the bulk of the state and the hooks for the app\n */\ninterface Props {\n    auth: UseHostedReturn\n    history: History\n    programs: Program[]\n}\n\nconst AppConnect: React.FC<Props> = ({ history, auth, programs }: Props) => {\n    // Here we make the graphql call to retrieve the project and program from the API\n    const program = useProgram(programs)\n    const drawerOpen = useRecoilValue(drawerOpenAtom)\n    const projectLayerPaths = useRecoilValue(projectLayerPathsSelector)\n\n    // Init state won't change unless I reload this component\n    const hasViewAccess = program && Object.values(WarehouseRoleEnum).indexOf(program.role) > -1\n    const { project, loading: isProjLoading, initialized } = useProject(auth, program, false, true)\n    const { downloadZipFile, pendingZips } = useDownloads(auth, program as Program)\n\n    // This is where we initialize all the recoil pre-fetch stuff\n    useAppStateInit(auth, project)\n    useColourFallback()\n\n    // 1. If we don's have access then tell the user that\n    if (!hasViewAccess)\n        return (\n            <AppWrapper title={'Access Denied'} history={history} signOut={auth.signOut}>\n                <NotAllowedModal program={program as Program} onClose={(): void => history.push('/')} />\n            </AppWrapper>\n        )\n    // 2. If we haven't made the query yet then this is in LOADING state\n    else if (!initialized || isProjLoading)\n        return (\n            <AppWrapper title={'Loading'} history={history} signOut={auth.signOut}>\n                <ProjectLoading title={isProjLoading ? 'Loading Project...' : 'Initializing...'} />\n            </AppWrapper>\n        )\n    // 4. Default to project not found otherwise\n    else if (!project)\n        return (\n            <AppWrapper title={'Project not found'} history={history} signOut={auth.signOut}>\n                <ProjectNotFound />\n            </AppWrapper>\n        )\n\n    return (\n        <>\n            {projectLayerPaths.map((plp) => (\n                // This is maybe a little bit of a hack and a small concession. Usually I don't like dummy\n                // React components that return nothing but in this case I can't figure out a way to do this nicely\n                <MapTilesConnect key={plp} layerPath={plp} />\n            ))}\n            <AppWrapper title={project.name} history={history} signOut={auth.signOut}>\n                <AppSplitter\n                    open={drawerOpen}\n                    split=\"vertical\"\n                    primary=\"second\"\n                    minSize={500}\n                    maxSize=\"85%\"\n                    defaultSize=\"75%\"\n                    child1={\n                        <TreeDrawer\n                            tabs={[\n                                {\n                                    label: 'Project Tree',\n                                    value: <TreeControlConnect />\n                                },\n                                {\n                                    label: 'Project Info',\n                                    value: (\n                                        <ProjectInfoTab\n                                            project={project}\n                                            downloadZipFile={downloadZipFile}\n                                            pendingZips={pendingZips}\n                                        />\n                                    )\n                                }\n                            ]}\n                        />\n                    }\n                    child2={<MapConnect />}\n                />\n            </AppWrapper>\n        </>\n    )\n}\nexport default AppConnect\n","import React, { useState, useEffect, useCallback } from 'react'\nimport AppConnect from './App.connect'\nimport { LoginScreen, config } from '@riverscapes/react-common'\nimport { Route, Switch, History, useHistory } from 'react-router-dom'\nimport { Loading } from '@northarrowresearch/react-common'\nimport { useHosted, UseHostedReturn } from '@northarrowresearch/react-auth'\nimport { warehouseIconUrl, appDefaults, appRouterPath } from '../config'\nimport { authCheck } from '@riverscapes/common'\nimport AppWrapper from '../components/AppWrapper'\nimport ProjectNotFound from '../components/ProjectNotFound'\nimport { Program, Project, getPrograms } from '@riverscapes/common'\nimport log from 'loglevel'\n\nconst AppAuthConnect: React.FC = () => {\n    const [authInfo, setAuthInfo] = useState<Record<string, unknown>>()\n    const [programsState, setProgramsState] = useState<{ programs: Program[]; loading: boolean }>()\n    const [isAppPreLoading, setIsAppPreLoading] = useState(true)\n    const auth: UseHostedReturn = useHosted(authInfo as Record<string, unknown>, false, false) //config.isDev\n    const history = useHistory()\n\n    // Go get all the startup info we need to start logging in\n    // Initial fetch gets us all the program objects\n    useEffect(() => {\n        authCheck(config.endpoints.graphql, '')\n            .then((authResp) => {\n                log.debug('authResp', authResp)\n                const authVals = authResp.data?.auth\n                if (authVals && authVals.region) {\n                    setAuthInfo({\n                        region: authVals.region,\n                        userPoolId: authVals.userPool,\n                        userPoolWebClientId: authVals.clientId,\n                        mandatorySignIn: true,\n                        oauth: {\n                            domain: authVals.domain,\n                            scope: ['email', 'profile', 'openid'],\n                            redirectSignIn: config.redirectUrl.toString(),\n                            redirectSignOut: config.redirectUrl.toString(),\n                            responseType: 'code'\n                        }\n                    })\n                    setIsAppPreLoading(false)\n                }\n            })\n            .catch((err) => {\n                log.error('api.getPrograms error', err)\n            })\n    }, [])\n\n    // This lets us do a redirect after login using localstorage\n    useEffect(() => {\n        if (!history) return\n        const storageUrl = localStorage.getItem('RSUrl')\n        const localUrl = history.location.pathname\n        log.debug('LOCALSTORAGE:::REDIRECT checking', storageUrl, localUrl, auth)\n\n        if (!auth.isAuthenticated && !auth.error && auth.isAuthComplete) {\n            log.debug('LOCALSTORAGE:::SET', localUrl)\n            localStorage.setItem('RSUrl', localUrl)\n        }\n        if (storageUrl && auth.isAuthenticated && auth.isAuthComplete && !auth.error) {\n            if (localUrl !== storageUrl) {\n                log.debug('LOCALSTORAGE:::REDIRECT', localUrl, storageUrl)\n                history.push(storageUrl)\n            }\n            localStorage.removeItem('RSUrl')\n        }\n    }, [history, auth])\n\n    const navigate = useCallback((history: History, program: Program, project?: Project): void => {\n        if (project) history.push('/' + program.machineName + '/' + project.id)\n        else history.push('/' + program.machineName)\n    }, [])\n\n    // Initial fetch gets us all the program objects\n    useEffect(() => {\n        if (!auth.isAuthenticated || programsState?.programs) return\n        setProgramsState({ programs: [], loading: true })\n        auth.getCurrentToken()\n            .then((jwt) => getPrograms(config.endpoints.graphql, jwt))\n            .then((allPrograms) => {\n                log.debug('API GetPrograms', allPrograms)\n                if (allPrograms.data && allPrograms.data.programs) {\n                    setProgramsState({ programs: allPrograms.data.programs, loading: false })\n                }\n            })\n            .catch((err) => {\n                log.error('api.getPrograms error', err)\n                // setIsAppPreLoading(false)\n            })\n    }, [auth, programsState])\n\n    const logoSVG = <img src={warehouseIconUrl} alt=\"logo\" />\n\n    // render the login helper screen if that's called for\n    if (isAppPreLoading) {\n        return (\n            <AppWrapper title=\"Loading authentication info\">\n                <Loading\n                    logoSVG={logoSVG}\n                    title={appDefaults.appName}\n                    message={'Loading authentication info'}\n                    version={config.version}\n                />\n            </AppWrapper>\n        )\n    } else {\n        if (!auth.isAuthenticated) {\n            if (!auth.isAuthComplete) {\n                return (\n                    <AppWrapper title=\"webRAVE\">\n                        <Loading\n                            logoSVG={logoSVG}\n                            title=\"Authenticating\"\n                            message={'Authenticating'}\n                            version={config.version}\n                        />\n                    </AppWrapper>\n                )\n            }\n            return (\n                <AppWrapper title=\"Sign in\">\n                    <LoginScreen signIn={auth.signIn} title={'Riverscapes Map Viewer'} />\n                </AppWrapper>\n            )\n        } else if (!programsState || programsState?.loading) {\n            return (\n                <AppWrapper title=\"webRAVE\">\n                    <Loading\n                        logoSVG={logoSVG}\n                        title={'Riverscapes Warehouse'}\n                        message={'Loading Programs'}\n                        version={config.version}\n                    />\n                </AppWrapper>\n            )\n        } else {\n            const appWrapProps = { navigate, signOut: auth.signOut }\n            return (\n                <Switch>\n                    <Route\n                        path={appRouterPath}\n                        render={(props): React.ReactElement => (\n                            <AppConnect {...props} auth={auth} programs={programsState?.programs} />\n                        )}\n                    />\n                    <Route\n                        path=\"*\"\n                        render={(props): React.ReactElement => (\n                            <AppWrapper {...props} {...appWrapProps}>\n                                <ProjectNotFound />\n                            </AppWrapper>\n                        )}\n                    />\n                </Switch>\n            )\n        }\n    }\n}\nexport default AppAuthConnect\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppAuthConnect from './connectors/AppAuth.connect'\nimport { Router } from 'react-router-dom'\nimport { hashHistory } from '@riverscapes/react-common'\nimport log from 'loglevel'\n// import { devSetup } from '@northarrowresearch/react-common'\n// Here's our global overrides css\nimport './base.css'\nimport { RecoilRoot } from 'recoil'\n\n// THIS FIX IS NECESSARY FOR PRODUCTION AND WEBPACK!!!!\n// https://docs.mapbox.com/mapbox-gl-js/api/#transpiling-v2\n// https://github.com/mapbox/mapbox-gl-js/issues/10173\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default\n\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\n// devSetup()\nlog.setDefaultLevel(log.levels.DEBUG)\n\n// This is the font we need\nrequire('typeface-roboto')\n\nReactDOM.render(\n    <RecoilRoot>\n        <Router basename=\"/\" history={hashHistory}>\n            <AppAuthConnect />\n        </Router>\n    </RecoilRoot>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register()\n\n// On android this will trick the back button into not closing the app\nwindow.addEventListener('load', () => {\n    window.history.pushState({}, '')\n})\n\n// In Chrome > 52 we need to explicitly request persistent storage to make sure our\n// stuff isn't cleaned up automatically.\nif (navigator.storage && navigator.storage.persist) {\n    navigator.storage.persist().then((granted) => {\n        if (granted) {\n            log.debug('Storage will not be cleared except by explicit user action')\n        } else {\n            log.warn('Storage may be cleared by the UA under storage pressure.')\n        }\n    })\n} else {\n    log.warn('navigator.storage API not implemented.')\n}\n"],"sourceRoot":""}