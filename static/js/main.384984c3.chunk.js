(this["webpackJsonp@riverscapes/app-webrave"]=this["webpackJsonp@riverscapes/app-webrave"]||[]).push([[0],{126:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(704);Object.defineProperty(t,"Multidot",{enumerable:!0,get:function(){return r.default}});var n=a(705);Object.defineProperty(t,"Polygon",{enumerable:!0,get:function(){return n.default}});var o=a(706);Object.defineProperty(t,"Polyline",{enumerable:!0,get:function(){return o.default}});var l=a(707);Object.defineProperty(t,"QRCode",{enumerable:!0,get:function(){return l.default}});var i=a(708);Object.defineProperty(t,"Raster",{enumerable:!0,get:function(){return i.default}});var s=a(709);Object.defineProperty(t,"LayerIcon",{enumerable:!0,get:function(){return s.default}})},13:function(e,t,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),n=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||t.hasOwnProperty(a)||r(t,e,a)};Object.defineProperty(t,"__esModule",{value:!0}),n(a(603),t),n(a(649),t),n(a(438),t);var o=a(650);Object.defineProperty(t,"typeDefs",{enumerable:!0,get:function(){return o.default}}),n(a(651),t),n(a(652),t),n(a(654),t),n(a(655),t)},180:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.awsAuth=t.redirectUrl=t.mandatoryMetaColors=t.endpoints=t.version=t.mapConfig=t.isDev=t.tagColors=void 0;var n=a(124),o=r(a(18));t.tagColors={tagColors:["#418CF0","#FCB441","#E0400A","#056492","#BFBFBF","#1A3B69","#FFE382","#129CDD","#CA6B4B","#005CDB","#F3D288","#506381","#F1B9A8","#E0830A","#7893BE"]};var l=Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_DOMAIN;o.default.debug("config: ",{domain:l}),t.isDev=!1,t.mapConfig={mapBoxToken:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg"},t.version="0.1.14",t.endpoints={graphql:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",cdn:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_CDN},t.mandatoryMetaColors=[n.red,n.green,n.blue,n.orange,n.purple,n.cyan,n.lime,n.brown],t.redirectUrl=new URL("/webrave-staging".endsWith("/")?"/webrave-staging":"/webrave-staging/",window.location.origin),console.log("RedirectUrl",{redirectUrl:t.redirectUrl,publicUrl:"/webrave-staging"}),t.awsAuth={Auth:{region:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_AWS_REGION_DEPLOY,userPoolId:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_AWS_USERPOOLID,userPoolWebClientId:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_AWS_USERPOOLWEBCLIENTID,mandatorySignIn:!0,oauth:{domain:Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_HOSTED_DOMAIN,scope:["email","profile","openid"],redirectSignIn:t.redirectUrl,redirectSignOut:t.redirectUrl,responseType:"code"}}}},314:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(179)),l=r(a(138)),i=r(a(32)),s=r(a(57)),c=r(a(292)),u=r(a(230)),d=r(a(139)),p=r(a(215)),m=r(a(140)),g=a(23),f=a(868),y=g.makeStyles((function(e){return{root:{},shareIconTitle:{},shareButtons:{margin:e.spacing(1,0),"&>*":{marginRight:e.spacing(1)}},flexGrow:{flexGrow:1},dlgTitle:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,display:"flex"},closeButton:{flex:"0 0"}}}));t.default=function(e){var t=e.open,a=e.shareUrl,r=e.handleClose,g=y();return n.default.createElement(l.default,{open:t,onClose:r,"aria-labelledby":"form-dialog-title"},n.default.createElement(m.default,{className:g.dlgTitle,disableTypography:!0},n.default.createElement(s.default,{color:"inherit"},n.default.createElement(c.default,{className:g.shareIconTitle})),n.default.createElement(i.default,{variant:"h4",className:g.flexGrow},"Share"),n.default.createElement("div",{className:g.closeButton},n.default.createElement(s.default,{onClick:r,color:"inherit"},n.default.createElement(u.default,null)))),n.default.createElement(d.default,null,n.default.createElement(p.default,null,"Copy this link and share it using your preferred method."),n.default.createElement(o.default,{value:a,margin:"dense",id:"name",variant:"outlined",fullWidth:!0,inputProps:{onClick:function(e){e.preventDefault(),e.target.select()}}}),n.default.createElement("div",{className:g.shareButtons},n.default.createElement(f.EmailShareButton,{url:a},n.default.createElement(f.EmailIcon,{size:32,round:!0})),n.default.createElement(f.TwitterShareButton,{url:a},n.default.createElement(f.TwitterIcon,{size:32,round:!0})),n.default.createElement(f.LinkedinShareButton,{url:a},n.default.createElement(f.LinkedinIcon,{size:32,round:!0})),n.default.createElement(f.FacebookShareButton,{url:a,quote:"title"},n.default.createElement(f.FacebookIcon,{size:32,round:!0})))))}},34:function(e,t,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.hasOwnProperty.call(e,a)&&r(t,e,a);return n(t,e),t},l=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||t.hasOwnProperty(a)||r(t,e,a)};Object.defineProperty(t,"__esModule",{value:!0});var i=a(597);Object.defineProperty(t,"Footer",{enumerable:!0,get:function(){return i.default}});var s=a(598);Object.defineProperty(t,"Topbar",{enumerable:!0,get:function(){return s.default}});var c=a(455);Object.defineProperty(t,"WarehouseTags",{enumerable:!0,get:function(){return c.default}});var u=a(456);Object.defineProperty(t,"DownloadZipBtn",{enumerable:!0,get:function(){return u.default}});var d=a(660);Object.defineProperty(t,"WarehouseButton",{enumerable:!0,get:function(){return d.default}});var p=a(458);Object.defineProperty(t,"WebRaveBtn",{enumerable:!0,get:function(){return p.default}});var m=a(662);Object.defineProperty(t,"ProgramChooser",{enumerable:!0,get:function(){return m.default}});var g=a(664);Object.defineProperty(t,"ProjectModal",{enumerable:!0,get:function(){return g.default}});var f=a(314);Object.defineProperty(t,"ShareDialog",{enumerable:!0,get:function(){return f.default}});var y=a(671);Object.defineProperty(t,"LoginScreen",{enumerable:!0,get:function(){return y.default}});var h=a(673);Object.defineProperty(t,"NotAllowedModal",{enumerable:!0,get:function(){return h.default}});var b=a(675);Object.defineProperty(t,"useDownloads",{enumerable:!0,get:function(){return b.default}});var x=a(676);Object.defineProperty(t,"useProgram",{enumerable:!0,get:function(){return x.default}});var w=a(680);Object.defineProperty(t,"useProject",{enumerable:!0,get:function(){return w.default}});var j=a(681);Object.defineProperty(t,"useQueryParams",{enumerable:!0,get:function(){return j.default}}),Object.defineProperty(t,"hashHistory",{enumerable:!0,get:function(){return j.hashHistory}});var v=a(685);Object.defineProperty(t,"themes",{enumerable:!0,get:function(){return v.default}}),t.config=o(a(180)),l(a(686),t),l(a(459),t)},438:function(e,t,a){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectTreeLayerTileTypes=t.ProjectTreeLayerTypes=t.TileTypes=t.SymbologyStatus=t.TilingStatus=t.AccessEnum=t.WarehouseRoleEnum=t.FieldTypeEnum=void 0,function(e){e.string="S",e.number="N",e.boolean="BOOL",e.stringArr="SARR",e.numberArr="NARR"}(t.FieldTypeEnum||(t.FieldTypeEnum={})),function(e){e.SuperUser="SUPER",e.Admin="ADMIN",e.Observer="OBSERVER",e.Participant="PARTICIPANT"}(t.WarehouseRoleEnum||(t.WarehouseRoleEnum={})),function(e){e.Public="PUBLIC",e.Private="PRIVATE",e.Secret="SECRET"}(t.AccessEnum||(t.AccessEnum={})),function(e){e.QUEUED="QUEUED",e.UNKNOWN="UNKNOWN",e.FETCHING="FETCHING",e.CREATING="CREATING",e.TILING_ERROR="TILING_ERROR",e.INDEX_NOT_FOUND="INDEX_NOT_FOUND",e.LAYER_NOT_FOUND="LAYER_NOT_FOUND",e.FETCH_ERROR="FETCH_ERROR",e.SUCCESS="SUCCESS"}(t.TilingStatus||(t.TilingStatus={})),function(e){e.UNKNOWN="UNKNOWN",e.FETCHING="FETCHING",e.MISSING="MISSING",e.NOT_APPLICABLE="NOT_APPLICABLE",e.FOUND="FOUND",e.ERROR="ERROR"}(t.SymbologyStatus||(t.SymbologyStatus={})),function(e){e.RASTER="RASTER",e.HTML="HTML",e.VECTOR_SHP="VECTOR_SHP",e.VECTOR_GPKG="VECTOR_GPKG"}(t.TileTypes||(t.TileTypes={})),function(e){e.REPORT="report",e.RASTER="raster",e.LINE="line",e.POLYGON="polygon",e.POINT="point",e.FILE="file",e.TIN="tin"}(r=t.ProjectTreeLayerTypes||(t.ProjectTreeLayerTypes={})),t.ProjectTreeLayerTileTypes=[r.RASTER,r.POLYGON,r.LINE,r.POINT]},455:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__spreadArrays||function(){for(var e=0,t=0,a=arguments.length;t<a;t++)e+=arguments[t].length;var r=Array(e),n=0;for(t=0;t<a;t++)for(var o=arguments[t],l=0,i=o.length;l<i;l++,n++)r[n]=o[l];return r},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=o(a(0)),i=o(a(32)),s=o(a(101));a(23).makeStyles((function(e){return{root:{marginLeft:e.spacing(1)/2},tooltip:{maxWidth:220}}}));t.default=function(e){var t=e.tags,a=e.typographyProps;return t?l.default.createElement(l.default.Fragment,null,t.reduce((function(e,t,o){return n(e,[l.default.createElement(i.default,r({variant:"caption"},a,{key:"sep-"+o}),o>0&&", "),l.default.createElement(s.default,{key:"whTag-"+o,title:l.default.createElement(l.default.Fragment,null,l.default.createElement(i.default,{variant:"body1"},"Warehouse Tag: ",t),l.default.createElement(i.default,{variant:"caption"},"Warehouse tags can be added to delineate two identical projects in the warehouse"))},l.default.createElement(i.default,r({variant:"caption",color:"secondary"},a),t))])}),[])):null}},456:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(a(0)),l=n(a(32)),i=n(a(87)),s=n(a(57)),c=n(a(101)),u=n(a(141)),d=n(a(457)),p=n(a(315)),m=a(23).makeStyles((function(){return{root:{"& *":{cursor:"pointer"}},disabledButton:{opacity:.5}}}));t.default=function(e){var t=e.title,a=e.project,n=e.pendingSince,g=e.btnProps,f=e.downloadZipFile,y=m(),h=o.default.createElement(c.default,{title:o.default.createElement(o.default.Fragment,null,o.default.createElement(l.default,{variant:"body1"},"Download Project Zip"),o.default.createElement(l.default,{variant:"caption",paragraph:!0},"Click to download this project as a single zip file"),o.default.createElement(l.default,{variant:"caption",paragraph:!0},"There may be a delay if the zip file needs to be built."))},t?o.default.createElement(i.default,r({variant:"contained",color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),f(a)},startIcon:o.default.createElement(d.default,null)},g),t||"ZIP"):o.default.createElement(s.default,r({color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),f(a)}},g),o.default.createElement(d.default,null)));return n&&(h=o.default.createElement(c.default,{title:o.default.createElement(o.default.Fragment,null,o.default.createElement(l.default,{variant:"body1"},"Preparing Zip"),o.default.createElement(l.default,{variant:"caption",paragraph:!0},"The warehouse is building your zip file for you."),o.default.createElement(l.default,{variant:"caption",paragraph:!0},"started ",p.default(n,"x").fromNow()))},o.default.createElement(i.default,r({variant:"outlined",disableFocusRipple:!0,disableRipple:!0,disableTouchRipple:!0,color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation()},className:y.disabledButton,startIcon:o.default.createElement(u.default,{color:g&&g.color&&"secondary"===g.color?"primary":"secondary",size:24,thickness:6})},g),t||"ZIP"))),o.default.createElement("div",{className:y.root},h)}},458:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(a(0)),l=n(a(32)),i=n(a(87)),s=n(a(57)),c=n(a(101)),u=n(a(661)),d=a(23).makeStyles((function(){return{root:{"& *":{cursor:"pointer"}},disabledButton:{opacity:.5}}}));t.default=function(e){var t=e.title,a=e.project,n=e.url,p=e.btnProps,m=d();if(!n||0===n.length)return null;var g=n+"#/"+a.program+"/"+a.id,f=o.default.createElement(c.default,{title:o.default.createElement(o.default.Fragment,null,o.default.createElement(l.default,{variant:"body1"},"Explore using map"),o.default.createElement(l.default,{variant:"caption",paragraph:!0},"Explore this data set using an online map"))},t?o.default.createElement(i.default,r({variant:"contained",onClick:function(e){e.preventDefault(),e.stopPropagation(),window.open(g)},color:"primary",startIcon:o.default.createElement(u.default,null)},p),t||"MAP"):o.default.createElement(s.default,r({color:"primary",onClick:function(e){e.preventDefault(),e.stopPropagation(),window.open(g)}},p),o.default.createElement(u.default,null)));return o.default.createElement("div",{className:m.root},f)}},459:function(e,t,a){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.accessColors=void 0;var n=a(13),o=a(124);t.accessColors=((r={})[n.WarehouseRoleEnum.SuperUser]=o.pink,r[n.WarehouseRoleEnum.Admin]=o.red,r[n.WarehouseRoleEnum.Participant]=o.lime,r[n.WarehouseRoleEnum.Observer]=o.blue,r)},548:function(e){e.exports=JSON.parse('{"version":8,"name":"Satellite Streets","metadata":{"mapbox:type":"default","mapbox:origin":"satellite-streets-v11","mapbox:sdk-support":{"android":"9.3.0","ios":"5.10.0","js":"2.0.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Satellite imagery, land":{"name":"Satellite imagery, land","collapsed":false},"Road network, tunnels-case":{"name":"Road network, tunnels-case","collapsed":false},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":false},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":false},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":false},"Road network, surface":{"name":"Road network, surface","collapsed":false},"Road network, surface-icons":{"name":"Road network, surface-icons","collapsed":false},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":false},"Road network, bridges":{"name":"Road network, bridges","collapsed":false},"Transit, elevated":{"name":"Transit, elevated","collapsed":false},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":false},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":false},"Transit, ferry-aerialway-labels":{"name":"Transit, ferry-aerialway-labels","collapsed":false},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":false},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":false},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":false},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":false}},"mapbox:decompiler":{"id":"satellite-streets-v11","componentVersion":"9.0.0","strata":[{"id":"satellite-streets-v11","order":[["transit","built"],["satellite","land"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["transit","elevated"],["admin-boundaries","admin"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"]]}],"components":{"satellite":"9.0.0","road-network":"9.0.0","walking-cycling":"9.0.0","admin-boundaries":"9.0.0","natural-features":"9.0.0","point-of-interest-labels":"9.0.0","transit":"9.0.0","place-labels":"9.0.0"},"propConfig":{"satellite":{},"road-network":{"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"color-road":"hsla(0, 0%, 90%, 0.5)","color-motorway-trunk":"hsla(36, 87%, 68%, 0.7)","construction":false,"color-road-label":"hsl(0, 0%, 100%)","fadeOutRoadsOnZoom":true,"railwayCrossings":false,"polygonFeatures":false,"color-base":"hsl(0, 0%, 0%)","minorRoads":false,"turningCircles":false,"color-road-outline":"hsla(0, 1%, 10%, 0.5)"},"walking-cycling":{"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"golfHoleLabelLine":false,"color-road":"hsla(0, 0%, 90%, 0.5)","color-greenspace":"hsl(94, 100%, 14%)","walkingCyclingPisteBackground":false,"color-road-label":"hsl(0, 0%, 100%)","color-greenspace-label":"hsl(94, 100%, 74%)","poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","pedestrianPolygonFeatures":false,"color-road-outline":"hsla(0, 1%, 10%, 0.5)","labels":false},"admin-boundaries":{"admin0Width":1.5,"color-base":"hsl(0, 0%, 0%)","color-place-label":"hsl(0, 0%, 100%)","color-admin-boundary":"hsl(0, 0%, 0%)"},"natural-features":{"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-water":"hsl(196, 50%, 50%)","color-poi":"hsl(0, 0%, 100%)"},"point-of-interest-labels":{"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-poi":"hsl(0, 0%, 100%)","color-greenspace":"hsl(94, 100%, 14%)","color-greenspace-label":"hsl(94, 100%, 74%)","color-hospital":"hsl(0, 0%, 100%)","color-school":"hsl(0, 0%, 100%)"},"transit":{"color-airport":"hsl(0, 0%, 100%)","matchLabelAndIcon":false,"roadsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"aeroways":false,"color-transit":"hsl(0, 0%, 100%)","color-road":"hsla(0, 0%, 90%, 0.5)","color-water":"hsl(196, 50%, 50%)","color-road-label":"hsl(0, 0%, 100%)","railways":false,"ferries":false,"poiEtcFont":["DIN Pro Bold","Arial Unicode MS Bold"],"color-base":"hsl(0, 0%, 0%)","color-road-outline":"hsla(0, 1%, 10%, 0.5)"},"place-labels":{"settlementsMinorFont":["DIN Pro Medium","Arial Unicode MS Regular"],"settlementSubdivisionsFont":["DIN Pro Medium","Arial Unicode MS Regular"],"color-base":"hsl(0, 0%, 0%)","color-place-label":"hsl(0, 0%, 100%)"}}}},"center":[-118.4106,33.750013],"zoom":13,"sources":{"mapbox://mapbox.satellite":{"url":"mapbox://mapbox.satellite","type":"raster","tileSize":256},"mapbox://mapbox.mapbox-traffic-v1":{"url":"mapbox://mapbox.mapbox-traffic-v1","type":"vector"},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"background","type":"background","metadata":{"mapbox:featureComponent":"satellite","mapbox:group":"Satellite imagery, land"},"layout":{},"paint":{"background-color":"hsl(222, 56%, 4%)"}},{"id":"satellite","type":"raster","metadata":{"mapbox:featureComponent":"satellite","mapbox:group":"Satellite imagery, land"},"source":"mapbox://mapbox.satellite","layout":{},"paint":{}},{"id":"tunnel-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 0%, 0%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0],"line-dasharray":[3,3]}},{"id":"tunnel-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsla(0, 0%, 0%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"tunnel-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 0%, 90%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels-case"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-dasharray":[3,3],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[1,0.5]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 10%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 78%, 0.7)","hsla(46, 77%, 78%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"tunnel-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","street","street_limited","tertiary"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"tunnel-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 78%, 0.7)","hsla(46, 77%, 78%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"tunnel-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"tunnel"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-street-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-street-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,0.75,18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-primary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":7,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":10,"filter":["all",["match",["get","class"],["motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["step",["zoom"],false,14,["match",["get","class"],["secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,["match",["get","class"],"track",1,0.5],18,12],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-street","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":11,"filter":["all",["match",["get","class"],["street","street_limited","primary_link"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":8,"filter":["all",["match",["get","class"],["secondary","tertiary"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.1,18,26],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"road-primary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["==",["get","class"],"primary"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"road-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","filter":["all",["match",["get","class"],["motorway","trunk"],true,false],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",13,"round"],"line-join":["step",["zoom"],"miter",13,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["step",["zoom"],["match",["get","class"],"motorway","hsla(26, 87%, 62%, 0.7)","hsla(0, 0%, 90%, 0.5)"],6,["match",["get","class"],"motorway","hsla(26, 87%, 62%, 0.7)","hsla(46, 80%, 60%, 0.7)"],9,["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"road-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface-icons"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","oneway"],"true"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["match",["get","structure"],["none","ford"],true,false]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(0, 0%, 22%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-street-minor-low","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-street-minor-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-primary-secondary-tertiary-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,["match",["get","class"],"primary",1,0.75],18,2],"line-color":"hsla(0, 1%, 10%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"bridge-major-link-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway_link","trunk_link"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-street-minor","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["street","street_limited","primary_link"],true,false],14,["match",["get","class"],["street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,["match",["get","class"],["street","street_limited","primary_link"],2,"track",1,0.5],18,["match",["get","class"],["street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],"street_limited","hsl(0, 2%, 22%)","hsla(0, 0%, 90%, 0.5)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-primary-secondary-tertiary","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["primary","secondary","tertiary"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],"primary",0.75,0.1],18,["match",["get","class"],"primary",32,26]],"line-color":"hsla(0, 0%, 90%, 0.5)","line-opacity":["interpolate",["linear"],["zoom"],13,0.3,15,0]}},{"id":"bridge-oneway-arrow-blue","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","oneway"],"true"],["step",["zoom"],["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],true,false],16,["match",["get","class"],["primary","secondary","tertiary","street","street_limited","primary_link","secondary_link","tertiary_link"],true,false]]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-small",17,["match",["get","class"],["primary","secondary","tertiary","street","street_limited"],"oneway-large","oneway-small"],18,"oneway-large"],"symbol-spacing":200,"icon-rotation-alignment":"map"},"paint":{}},{"id":"bridge-motorway-trunk","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk"],true,false],["<=",["get","layer"],1],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.75,20,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-2-case","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],10,1,18,2],"line-color":"hsla(0, 1%, 22%, 0.5)","line-gap-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-major-link-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway_link","trunk_link"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":"round","line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],12,0.5,14,2,18,18],"line-color":["match",["get","class"],"motorway_link","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-motorway-trunk-2","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],[">=",["get","layer"],2],["match",["get","class"],["motorway","trunk"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,0.75,18,32],"line-color":["match",["get","class"],"motorway","hsla(26, 100%, 68%, 0.7)","hsla(46, 87%, 68%, 0.7)"],"line-opacity":["interpolate",["linear"],["zoom"],13,1,15,0]}},{"id":"bridge-oneway-arrow-white","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":16,"filter":["all",["==",["get","structure"],"bridge"],["match",["get","class"],["motorway","trunk","motorway_link","trunk_link"],true,false],["==",["get","oneway"],"true"]],"layout":{"symbol-placement":"line","icon-image":["step",["zoom"],"oneway-white-small",17,"oneway-white-large"],"symbol-spacing":200},"paint":{}},{"id":"aerialway","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, elevated"},"source":"composite","source-layer":"road","minzoom":12,"filter":["==",["get","class"],"aerialway"],"layout":{"line-join":"round"},"paint":{"line-color":"hsla(0, 0%, 25%, 0.5)","line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,20,1]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(0, 0%, 14%)",16,"hsl(0, 0%, 30%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,5.25,10,12],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(0, 0%, 14%)",8,"hsl(0, 0%, 30%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,3]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(0, 0%, 0%)",7,"hsl(0, 0%, 5%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(0, 0%, 0%)","line-width":["interpolate",["linear"],["zoom"],3,0.75,10,3],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 0%)","line-width":["interpolate",["linear"],["zoom"],3,0.75,10,3],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"road-label","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":10,"filter":["step",["zoom"],["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],true,false],12,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited"],true,false],15,["match",["get","class"],["path","pedestrian","golf","ferry","aerialway","track","service"],false,true]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],9,6.5],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,["motorway_link","trunk_link","primary_link","secondary_link","tertiary_link","street","street_limited"],14,13]],"text-max-angle":30,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-color":["match",["get","class"],["motorway","trunk"],"hsla(0, 5%, 0%, 0.75)","hsl(0, 5%, 0%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"road-intersection","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["all",["==",["get","class"],"intersection"],["has","name"]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"icon-image":"intersection","icon-text-fit":"both","icon-text-fit-padding":[1,2,1,2],"text-size":["interpolate",["exponential",1.2],["zoom"],15,9,18,12],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(230, 57%, 64%)"}},{"id":"road-number-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":6,"filter":["all",["has","reflen"],["<=",["get","reflen"],6],["step",["zoom"],["==",["geometry-type"],"Point"],11,[">",["get","len"],5000],12,[">",["get","len"],2500],13,[">",["get","len"],1000],14,true]],"layout":{"text-size":9,"icon-image":["concat",["get","shield"],"-",["to-string",["get","reflen"]]],"icon-rotation-alignment":"viewport","text-max-angle":38,"symbol-spacing":["interpolate",["linear"],["zoom"],11,150,14,200],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":["step",["zoom"],"point",11,"line"],"text-rotation-alignment":"viewport","text-field":["get","ref"],"text-letter-spacing":0.05},"paint":{"text-color":["match",["get","shield_text_color"],"white","hsl(0, 0%, 100%)","yellow","hsl(50, 100%, 70%)","orange","hsl(25, 100%, 75%)","blue","hsl(230, 57%, 44%)","hsl(230, 18%, 13%)"]}},{"id":"road-exit-shield","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"motorway_junction","minzoom":14,"filter":["all",["has","reflen"],["<=",["get","reflen"],9]],"layout":{"text-field":["get","ref"],"text-size":9,"icon-image":["concat","motorway-exit-",["to-string",["get","reflen"]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"]},"paint":{"text-color":"hsl(0, 0%, 100%)","text-translate":[0,0]}},{"id":"ferry-aerialway-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, ferry-aerialway-labels"},"source":"composite","source-layer":"road","minzoom":15,"filter":["match",["get","class"],"aerialway",true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,6.5,18,13],"text-max-angle":30,"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":["match",["get","class"],"ferry","hsl(196, 18%, 86%)","hsl(0, 0%, 100%)"],"text-halo-color":["match",["get","class"],"ferry","hsl(196, 50%, 50%)","hsl(0, 5%, 0%)"],"text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(196, 18%, 90%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(0, 5%, 0%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(0, 0%, 100%)",5,"hsl(0, 0%, 100%)"],17,["step",["get","sizerank"],"hsl(0, 0%, 100%)",13,"hsl(0, 0%, 100%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["concat",["get","maki"],"-11"],15,["concat",["get","maki"],"-15"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(0, 0%, 100%)",5,"hsl(0, 0%, 100%)"],17,["step",["get","sizerank"],"hsl(0, 0%, 100%)",13,"hsl(0, 0%, 100%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 46%, 70%)","hsl(196, 18%, 90%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(196, 46%, 70%)","hsl(196, 18%, 90%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],3]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-11"]],["image",["concat",["get","maki"],"-11"]]],15,["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-15"]],["image",["concat",["get","maki"],"-15"]]]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(94, 100%, 0%)","medical","hsl(0, 5%, 3%)","hsl(0, 5%, 0%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 84%)","hsl(0, 0%, 100%)"],5,["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 73%)","hsl(0, 0%, 100%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 84%)","hsl(0, 0%, 100%)"],13,["match",["get","class"],"food_and_drink","hsl(356, 0%, 100%)","park_like","hsl(94, 100%, 73%)","hsl(0, 0%, 100%)"]]]}},{"id":"transit-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"transit_stop_label","minzoom":12,"filter":["step",["zoom"],["all",["match",["get","mode"],"rail",true,"metro_rail",true,false],["!=",["get","stop_type"],"entrance"]],15,["all",["match",["get","mode"],"rail",true,"metro_rail",true,"light_rail",true,false],["!=",["get","stop_type"],"entrance"]],16,["all",["match",["get","mode"],"ferry",false,"bus",false,true],["!=",["get","stop_type"],"entrance"]],17,["all",["match",["get","mode"],"ferry",false,true],["!=",["get","stop_type"],"entrance"]],19,["match",["get","mode"],"ferry",false,true]],"layout":{"text-size":12,"icon-image":["get","network"],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-justify":["match",["get","stop_type"],"entrance","left","center"],"text-offset":["match",["get","stop_type"],"entrance",["literal",[1,0]],["literal",[0,0.8]]],"text-anchor":["match",["get","stop_type"],"entrance","left","top"],"text-field":["step",["zoom"],"",14,["match",["get","mode"],["rail","metro_rail"],["coalesce",["get","name_en"],["get","name"]],""],16,["match",["get","mode"],["bus","bicycle"],"",["coalesce",["get","name_en"],["get","name"]]],18,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.01,"text-max-width":["match",["get","stop_type"],"entrance",15,9]},"paint":{"text-halo-color":"hsl(0, 5%, 0%)","text-color":"hsl(0, 0%, 100%)","text-halo-blur":0.5,"text-halo-width":0.5}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["step",["get","sizerank"],["concat",["get","maki"],"-15"],9,["concat",["get","maki"],"-11"]],"text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(0, 0%, 100%)","text-halo-color":"hsl(0, 20%, 3%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],4]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(0, 5%, 0%, 0.75)","text-halo-width":1,"text-color":"hsl(0, 0%, 100%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],true,8,[">=",["get","symbolrank"],11],10,[">=",["get","symbolrank"],12],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-offset":["step",["zoom"],["match",["get","capital"],2,["match",["get","text_anchor"],"bottom",["literal",[0,-0.3]],"bottom-left",["literal",[0.3,-0.1]],"left",["literal",[0.45,0.1]],"top-left",["literal",[0.3,0.1]],"top",["literal",[0,0.3]],"top-right",["literal",[-0.3,0.1]],"right",["literal",[-0.45,0]],"bottom-right",["literal",[-0.3,-0.1]],["literal",[0,-0.3]]],["match",["get","text_anchor"],"bottom",["literal",[0,-0.25]],"bottom-left",["literal",[0.2,-0.05]],"left",["literal",[0.4,0.05]],"top-left",["literal",[0.2,0.05]],"top",["literal",[0,0.25]],"top-right",["literal",[-0.2,0.05]],"right",["literal",[-0.4,0.05]],"bottom-right",["literal",[-0.2,-0.05]],["literal",[0,-0.25]]]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1,"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,8,["<",["get","symbolrank"],11],10,["<",["get","symbolrank"],12],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"icon-image":["step",["zoom"],["case",["==",["get","capital"],2],"border-dot-13",["step",["get","symbolrank"],"dot-11",9,"dot-10",11,"dot-9"]],8,""],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],8,"center"],"text-offset":["step",["zoom"],["match",["get","capital"],2,["match",["get","text_anchor"],"bottom",["literal",[0,-0.3]],"bottom-left",["literal",[0.3,-0.1]],"left",["literal",[0.45,0.1]],"top-left",["literal",[0.3,0.1]],"top",["literal",[0,0.3]],"top-right",["literal",[-0.3,0.1]],"right",["literal",[-0.45,0]],"bottom-right",["literal",[-0.3,-0.1]],["literal",[0,-0.3]]],["match",["get","text_anchor"],"bottom",["literal",[0,-0.25]],"bottom-left",["literal",[0.2,-0.05]],"left",["literal",[0.4,0.05]],"top-left",["literal",[0.2,0.05]],"top",["literal",[0,0.25]],"top-right",["literal",[-0.2,0.05]],"right",["literal",[-0.4,0.05]],"bottom-right",["literal",[-0.2,-0.05]],["literal",[0,-0.25]]]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],["get","text_anchor"],8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1,"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(0, 0%, 95%)","text-halo-color":"hsl(0, 5%, 0%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-justify":["step",["zoom"],["match",["get","text_anchor"],["left","bottom-left","top-left"],"left",["right","bottom-right","top-right"],"right","center"],7,"center"],"text-offset":["literal",[0,0]],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":6},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(0, 0%, 95%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(0, 5%, 0%, 0.75)",3,"hsl(0, 5%, 0%)"],"text-halo-width":1.25}}],"created":"2021-03-29T17:58:09.569Z","modified":"2021-03-29T17:58:21.965Z","id":"ckmuw9x2e5f0417pe3vy7y0cz","owner":"northarrowresearch","visibility":"private","draft":false}')},549:function(e){e.exports=JSON.parse('{"version":8,"name":"Basic","metadata":{"mapbox:type":"default","mapbox:origin":"basic-v1","mapbox:sdk-support":{"android":"9.3.0","ios":"5.10.0","js":"2.0.0"},"mapbox:autocomposite":true,"mapbox:groups":{"Land, water, & sky, land":{"name":"Land, water, & sky, land","collapsed":false},"Land, water, & sky, water":{"name":"Land, water, & sky, water","collapsed":false},"Land, water, & sky, built":{"name":"Land, water, & sky, built","collapsed":false},"Transit, built":{"name":"Transit, built","collapsed":false},"Buildings, built":{"name":"Buildings, built","collapsed":false},"Walking, cycling, etc., tunnels":{"name":"Walking, cycling, etc., tunnels","collapsed":false},"Road network, tunnels":{"name":"Road network, tunnels","collapsed":false},"Walking, cycling, etc., surface":{"name":"Walking, cycling, etc., surface","collapsed":false},"Road network, surface":{"name":"Road network, surface","collapsed":false},"Walking, cycling, etc., barriers-bridges":{"name":"Walking, cycling, etc., barriers-bridges","collapsed":false},"Road network, bridges":{"name":"Road network, bridges","collapsed":false},"Administrative boundaries, admin":{"name":"Administrative boundaries, admin","collapsed":false},"Road network, road-labels":{"name":"Road network, road-labels","collapsed":false},"Walking, cycling, etc., walking-cycling-labels":{"name":"Walking, cycling, etc., walking-cycling-labels","collapsed":false},"Natural features, natural-labels":{"name":"Natural features, natural-labels","collapsed":false},"Point of interest labels, poi-labels":{"name":"Point of interest labels, poi-labels","collapsed":false},"Transit, transit-labels":{"name":"Transit, transit-labels","collapsed":false},"Place labels, place-labels":{"name":"Place labels, place-labels","collapsed":false}},"mapbox:decompiler":{"id":"basic-v1","componentVersion":"9.0.0","strata":[{"id":"basic-v1","order":[["land-and-water","land"],["land-and-water","water"],["land-and-water","built"],["transit","built"],["buildings","built"],["road-network","tunnels-case"],["walking-cycling","tunnels"],["road-network","tunnels"],["transit","ferries"],["walking-cycling","surface"],["road-network","surface"],["transit","surface"],["road-network","surface-icons"],["walking-cycling","barriers-bridges"],["road-network","bridges"],["transit","bridges"],["road-network","traffic-and-closures"],["buildings","extruded"],["transit","elevated"],["admin-boundaries","admin"],["buildings","building-labels"],["road-network","road-labels"],["walking-cycling","walking-cycling-labels"],["transit","ferry-aerialway-labels"],["natural-features","natural-labels"],["point-of-interest-labels","poi-labels"],["transit","transit-labels"],["place-labels","place-labels"],["land-and-water","sky"]]}],"components":{"road-network":"9.0.0","natural-features":"9.0.0","place-labels":"9.0.0","admin-boundaries":"9.0.0","point-of-interest-labels":"9.0.0","walking-cycling":"9.0.0","transit":"9.0.0","land-and-water":"9.0.0","buildings":"9.0.0"},"propConfig":{"road-network":{"color-base":"hsl(40, 48%, 92%)","color-road":"hsl(38, 55%, 100%)","roadNetwork":"Simple"},"natural-features":{"color-base":"hsl(40, 48%, 92%)","color-water":"hsl(205, 76%, 70%)","color-poi":"hsl(26, 20%, 38%)"},"place-labels":{"color-base":"hsl(40, 48%, 92%)","color-place-label":"hsl(0, 0%, 15%)","settlementSubdivisionsDensity":3,"settlementLabelStyle":"Text only"},"admin-boundaries":{"color-base":"hsl(40, 48%, 92%)","color-place-label":"hsl(0, 0%, 15%)"},"point-of-interest-labels":{"color-base":"hsl(40, 48%, 92%)","color-greenspace":"hsl(78, 50%, 73%)","color-greenspace-label":"hsl(76, 50%, 16%)","color-hospital":"hsl(3, 45%, 55%)","color-school":"hsl(40, 45%, 45%)","color-poi":"hsl(26, 20%, 38%)","density":2},"walking-cycling":{"color-base":"hsl(40, 48%, 92%)","color-road":"hsl(38, 55%, 100%)","color-greenspace":"hsl(78, 50%, 73%)","color-greenspace-label":"hsl(76, 50%, 16%)","walkingCyclingPisteBackground":false,"golfHoleLabelLine":false,"pedestrianPolygonFeatures":false},"transit":{"color-airport":"hsl(225, 4%, 40%)","color-transit":"hsl(345, 6%, 40%)","aerialways":false,"color-road":"hsl(38, 55%, 100%)","color-water":"hsl(205, 76%, 70%)","transitLabels":false,"railways":false,"ferries":false,"color-base":"hsl(40, 48%, 92%)"},"land-and-water":{"color-airport":"hsl(225, 4%, 40%)","color-hospital":"hsl(3, 45%, 55%)","landType":"Landuse only","color-greenspace":"hsl(78, 50%, 73%)","color-water":"hsl(205, 76%, 70%)","transitionLandOnZoom":false,"waterStyle":"Simple","color-base":"hsl(40, 48%, 92%)","color-school":"hsl(40, 45%, 45%)"},"buildings":{"color-base":"hsl(40, 48%, 92%)","houseNumbers":false}}}},"center":[2.3176,48.8665],"zoom":12,"sources":{"mapbox://mapbox.mapbox-traffic-v1":{"url":"mapbox://mapbox.mapbox-traffic-v1","type":"vector"},"composite":{"url":"mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuv21s85dd317s3sii3rhg7/5aimie0s459ihq4jyhsfvi0wl","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"land","type":"background","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"layout":{},"paint":{"background-color":"hsl(40, 46%, 86%)"}},{"id":"national-park","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["==",["get","class"],"national_park"],"layout":{},"paint":{"fill-color":"hsl(78, 50%, 73%)","fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,0.5,10,0.5]}},{"id":"landuse","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":5,"filter":["match",["get","class"],["park","airport","glacier","pitch","sand","facility"],true,"cemetery",true,"school",true,"hospital",true,false],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,["match",["get","class"],"park","hsl(78, 50%, 73%)","airport","hsl(225, 49%, 88%)","cemetery","hsl(60, 49%, 79%)","glacier","hsl(205, 66%, 90%)","hospital","hsl(3, 47%, 84%)","pitch","hsl(78, 51%, 68%)","sand","hsl(43, 50%, 83%)","school","hsl(40, 47%, 78%)","hsl(40, 49%, 82%)"],16,["match",["get","class"],"park","hsl(78, 50%, 73%)","airport","hsl(225, 63%, 86%)","cemetery","hsl(60, 49%, 79%)","glacier","hsl(205, 66%, 90%)","hospital","hsl(3, 46%, 86%)","pitch","hsl(78, 51%, 68%)","sand","hsl(43, 50%, 83%)","school","hsl(40, 47%, 78%)","hsl(40, 49%, 82%)"]],"fill-opacity":["interpolate",["linear"],["zoom"],5,0,6,["match",["get","class"],"glacier",0.5,1]]}},{"id":"pitch-outline","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, land"},"source":"composite","source-layer":"landuse","minzoom":15,"filter":["==",["get","class"],"pitch"],"layout":{},"paint":{"line-color":"hsl(60, 29%, 81%)"}},{"id":"waterway","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(205, 76%, 70%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, water"},"source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(205, 76%, 70%)"}},{"id":"land-structure-polygon","type":"fill","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"Polygon"],["==",["get","class"],"land"]],"layout":{},"paint":{"fill-color":"hsl(40, 46%, 86%)"}},{"id":"land-structure-line","type":"line","metadata":{"mapbox:featureComponent":"land-and-water","mapbox:group":"Land, water, & sky, built"},"source":"composite","source-layer":"structure","minzoom":13,"filter":["all",["==",["geometry-type"],"LineString"],["==",["get","class"],"land"]],"layout":{"line-cap":"round"},"paint":{"line-width":["interpolate",["exponential",1.99],["zoom"],14,0.75,20,40],"line-color":"hsl(40, 46%, 86%)"}},{"id":"aeroway-polygon","type":"fill","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":11,"filter":["all",["==",["geometry-type"],"Polygon"],["match",["get","type"],["runway","taxiway","helipad"],true,false]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(225, 37%, 79%)",16,"hsl(225, 19%, 81%)"],"fill-opacity":["interpolate",["linear"],["zoom"],11,0,11.5,1]}},{"id":"aeroway-line","type":"line","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, built"},"source":"composite","source-layer":"aeroway","minzoom":9,"filter":["==",["geometry-type"],"LineString"],"layout":{},"paint":{"line-color":["interpolate",["linear"],["zoom"],15,"hsl(225, 37%, 79%)",16,"hsl(225, 19%, 81%)"],"line-width":["interpolate",["exponential",1.5],["zoom"],9,["match",["get","type"],"runway",1,0.5],18,["match",["get","type"],"runway",80,20]]}},{"id":"building-outline","type":"line","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"line-color":"hsl(40, 42%, 77%)","line-width":["interpolate",["exponential",1.5],["zoom"],15,0.75,20,3],"line-opacity":["interpolate",["linear"],["zoom"],15,0,16,1]}},{"id":"building","type":"fill","metadata":{"mapbox:featureComponent":"buildings","mapbox:group":"Buildings, built"},"source":"composite","source-layer":"building","minzoom":15,"filter":["all",["!=",["get","type"],"building:part"],["==",["get","underground"],"false"]],"layout":{},"paint":{"fill-color":["interpolate",["linear"],["zoom"],15,"hsl(40, 45%, 83%)",16,"hsl(40, 41%, 82%)"],"fill-opacity":["interpolate",["linear"],["zoom"],15,0,16,1],"fill-outline-color":"hsl(40, 42%, 77%)"}},{"id":"tunnel-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"path"],["!=",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[1,0.5]]]}},{"id":"tunnel-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","type"],"steps"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"tunnel-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 42%, 77%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"tunnel-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, tunnels"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"tunnel"],["step",["zoom"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","street","street_limited","primary_link"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","street","street_limited","primary_link"],18,12]],"line-color":"hsl(38, 55%, 93%)"}},{"id":"road-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"path"],["step",["zoom"],["!",["match",["get","type"],["steps","sidewalk","crossing"],true,false]],16,["!=",["get","type"],"steps"]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,0.5,14,1,15,1,18,4],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"road-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"road-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., surface"},"source":"composite","source-layer":"road","minzoom":12,"filter":["all",["==",["get","class"],"pedestrian"],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"road-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, surface"},"source":"composite","source-layer":"road","minzoom":5,"filter":["all",["step",["zoom"],["match",["get","class"],["motorway","trunk"],true,false],6,["match",["get","class"],["motorway","trunk","primary"],true,false],8,["match",["get","class"],["motorway","trunk","primary","secondary"],true,false],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","motorway_link","trunk_link"],true,false],11,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street"],true,false],12,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link"],true,false],13,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["match",["get","structure"],["none","ford"],true,false],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],5,["match",["get","class"],["motorway","trunk","primary"],0.75,["secondary","tertiary"],0.1,0],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","primary_link","street","street_limited"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","primary_link","street","street_limited"],18,10]],"line-color":["match",["get","class"],["primary_link","secondary_link","tertiary_link","street","street_limited","service","track"],"hsl(38, 55%, 95%)","hsl(38, 55%, 100%)"]}},{"id":"bridge-path","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"path"],["==",["geometry-type"],"LineString"],["!=",["get","type"],"steps"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,18,4],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[4,0.3]],15,["literal",[1.75,0.3]],16,["literal",[1,0.3]],17,["literal",[1,0.25]]]}},{"id":"bridge-steps","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":14,"filter":["all",["==",["get","type"],"steps"],["==",["get","structure"],"bridge"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],15,1,16,1.6,18,6],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.75,1]],16,["literal",[1,0.75]],17,["literal",[0.3,0.3]]]}},{"id":"bridge-pedestrian","type":"line","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., barriers-bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["==",["get","class"],"pedestrian"],["==",["geometry-type"],"LineString"]],"layout":{"line-join":"round"},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],14,0.5,18,12],"line-color":"hsl(40, 47%, 96%)","line-dasharray":["step",["zoom"],["literal",[1,0]],15,["literal",[1.5,0.4]],16,["literal",[1,0.2]]]}},{"id":"bridge-case-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],6,["secondary","tertiary"],4,["motorway_link","trunk_link","street","street_limited","primary_link"],2.5,1.25],18,["match",["get","class"],["motorway","trunk","primary"],36,["secondary","tertiary"],30,["motorway_link","trunk_link","street","street_limited","primary_link"],22,16]],"line-color":"hsl(40, 46%, 86%)"}},{"id":"bridge-simple","type":"line","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, bridges"},"source":"composite","source-layer":"road","minzoom":13,"filter":["all",["==",["get","structure"],"bridge"],["step",["zoom"],["match",["get","class"],["motorway","trunk"],true,false],13,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","secondary","tertiary","street","street_limited","primary_link","track"],true,false],14,["match",["get","class"],["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","street","street_limited","service","track"],true,false]],["==",["geometry-type"],"LineString"]],"layout":{"line-cap":["step",["zoom"],"butt",14,"round"],"line-join":["step",["zoom"],"miter",14,"round"]},"paint":{"line-width":["interpolate",["exponential",1.5],["zoom"],13,["match",["get","class"],["motorway","trunk","primary"],4,["secondary","tertiary"],2.5,["motorway_link","trunk_link","street","street_limited","primary_link"],1,0.5],18,["match",["get","class"],["motorway","trunk","primary"],32,["secondary","tertiary"],26,["motorway_link","trunk_link","street","street_limited","primary_link"],18,12]],"line-color":["match",["get","class"],["primary_link","secondary_link","tertiary_link","street","street_limited","service","track"],"hsl(38, 55%, 95%)","hsl(38, 55%, 100%)"]}},{"id":"admin-1-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":7,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"bevel"},"paint":{"line-color":["interpolate",["linear"],["zoom"],8,"hsl(40, 46%, 86%)",16,"hsl(0, 0%, 87%)"],"line-width":["interpolate",["linear"],["zoom"],7,3.75,12,5.5],"line-opacity":["interpolate",["linear"],["zoom"],7,0,8,0.75],"line-dasharray":[1,0],"line-blur":["interpolate",["linear"],["zoom"],3,0,8,3]}},{"id":"admin-0-boundary-bg","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{},"paint":{"line-width":["interpolate",["linear"],["zoom"],3,3.5,10,8],"line-color":["interpolate",["linear"],["zoom"],6,"hsl(40, 46%, 86%)",8,"hsl(0, 0%, 87%)"],"line-opacity":["interpolate",["linear"],["zoom"],3,0,4,0.5],"line-blur":["interpolate",["linear"],["zoom"],3,0,10,2]}},{"id":"admin-1-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":2,"filter":["all",["==",["get","admin_level"],1],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-dasharray":["step",["zoom"],["literal",[2,0]],7,["literal",[2,2,6,2]]],"line-width":["interpolate",["linear"],["zoom"],7,0.75,12,1.5],"line-opacity":["interpolate",["linear"],["zoom"],2,0,3,1],"line-color":["interpolate",["linear"],["zoom"],3,"hsl(0, 0%, 77%)",7,"hsl(0, 0%, 62%)"]}},{"id":"admin-0-boundary","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","admin_level"],0],["==",["get","disputed"],"false"],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round","line-cap":"round"},"paint":{"line-color":"hsl(0, 0%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":[10,0]}},{"id":"admin-0-boundary-disputed","type":"line","metadata":{"mapbox:featureComponent":"admin-boundaries","mapbox:group":"Administrative boundaries, admin"},"source":"composite","source-layer":"admin","minzoom":1,"filter":["all",["==",["get","disputed"],"true"],["==",["get","admin_level"],0],["==",["get","maritime"],"false"],["match",["get","worldview"],["all","US"],true,false]],"layout":{"line-join":"round"},"paint":{"line-color":"hsl(0, 0%, 51%)","line-width":["interpolate",["linear"],["zoom"],3,0.5,10,2],"line-dasharray":["step",["zoom"],["literal",[3.25,3.25]],6,["literal",[2.5,2.5]],7,["literal",[2,2.25]],8,["literal",[1.75,2]]]}},{"id":"road-label-simple","type":"symbol","metadata":{"mapbox:featureComponent":"road-network","mapbox:group":"Road network, road-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["match",["get","class"],["motorway","trunk","primary","secondary","tertiary","street","street_limited"],true,false],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],10,9],18,["match",["get","class"],["motorway","trunk","primary","secondary","tertiary"],16,14]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(40, 47%, 41%)","text-halo-color":"hsl(38, 55%, 100%)","text-halo-width":1}},{"id":"path-pedestrian-label","type":"symbol","metadata":{"mapbox:featureComponent":"walking-cycling","mapbox:group":"Walking, cycling, etc., walking-cycling-labels"},"source":"composite","source-layer":"road","minzoom":12,"filter":["step",["zoom"],["match",["get","class"],["pedestrian"],true,false],15,["match",["get","class"],["path","pedestrian"],true,false]],"layout":{"text-size":["interpolate",["linear"],["zoom"],10,["match",["get","class"],"pedestrian",9,6.5],18,["match",["get","class"],"pedestrian",14,13]],"text-max-angle":30,"text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"symbol-placement":"line","text-padding":1,"text-rotation-alignment":"map","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":0.01},"paint":{"text-color":"hsl(40, 47%, 41%)","text-halo-color":"hsl(40, 46%, 95%)","text-halo-width":1,"text-halo-blur":1}},{"id":"waterway-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":13,"filter":["all",["match",["get","class"],["canal","river","stream"],["match",["get","worldview"],["all","US"],true,false],["disputed_canal","disputed_river","disputed_stream"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-max-angle":30,"symbol-spacing":["interpolate",["linear",1],["zoom"],15,250,17,400],"text-size":["interpolate",["linear"],["zoom"],13,12,18,16],"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":"hsl(205, 44%, 90%)"}},{"id":"natural-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["glacier","landform"],["match",["get","worldview"],["all","US"],true,false],["disputed_glacier","disputed_landform"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"text-max-angle":30,"text-field":["coalesce",["get","name_en"],["get","name"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport"},"paint":{"text-halo-width":0.5,"text-halo-color":"hsl(40, 53%, 100%)","text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 15%, 48%)",5,"hsl(26, 20%, 38%)"],17,["step",["get","sizerank"],"hsl(26, 15%, 48%)",13,"hsl(26, 20%, 38%)"]]}},{"id":"natural-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","minzoom":4,"filter":["all",["match",["get","class"],["dock","glacier","landform","water_feature","wetland"],["match",["get","worldview"],["all","US"],true,false],["disputed_dock","disputed_glacier","disputed_landform","disputed_water_feature","disputed_wetland"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"],["<=",["get","filterrank"],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["concat",["get","maki"],"-11"],15,["concat",["get","maki"],"-15"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],"hsl(26, 15%, 48%)",5,"hsl(26, 20%, 38%)"],17,["step",["get","sizerank"],"hsl(26, 15%, 48%)",13,"hsl(26, 20%, 38%)"]]}},{"id":"water-line-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"LineString"]],"layout":{"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,18,12,12],10,["step",["get","sizerank"],15,9,12],18,["step",["get","sizerank"],15,9,14]],"text-max-angle":30,"text-letter-spacing":["match",["get","class"],"ocean",0.25,["sea","bay"],0.15,0],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"symbol-placement":"line-center","text-pitch-alignment":"viewport","text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(205, 72%, 90%)","hsl(205, 44%, 90%)"]}},{"id":"water-point-label","type":"symbol","metadata":{"mapbox:featureComponent":"natural-features","mapbox:group":"Natural features, natural-labels"},"source":"composite","source-layer":"natural_label","filter":["all",["match",["get","class"],["bay","ocean","reservoir","sea","water"],["match",["get","worldview"],["all","US"],true,false],["disputed_bay","disputed_ocean","disputed_reservoir","disputed_sea","disputed_water"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["==",["geometry-type"],"Point"]],"layout":{"text-line-height":1.3,"text-size":["interpolate",["linear"],["zoom"],7,["step",["get","sizerank"],20,6,15,12,12],10,["step",["get","sizerank"],15,9,12]],"text-font":["DIN Pro Italic","Arial Unicode MS Regular"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-letter-spacing":["match",["get","class"],"ocean",0.25,["bay","sea"],0.15,0.01],"text-max-width":["match",["get","class"],"ocean",4,"sea",5,["bay","water"],7,10]},"paint":{"text-color":["match",["get","class"],["bay","ocean","sea"],"hsl(205, 72%, 90%)","hsl(205, 44%, 90%)"]}},{"id":"poi-label","type":"symbol","metadata":{"mapbox:featureComponent":"point-of-interest-labels","mapbox:group":"Point of interest labels, poi-labels"},"source":"composite","source-layer":"poi_label","minzoom":6,"filter":["<=",["get","filterrank"],["+",["step",["zoom"],0,16,1,17,2],2]],"layout":{"text-size":["step",["zoom"],["step",["get","sizerank"],18,5,12],17,["step",["get","sizerank"],18,13,12]],"icon-image":["step",["zoom"],["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-11"]],["image",["concat",["get","maki"],"-11"]]],15,["case",["has","maki_beta"],["image",["concat",["get","maki_beta"],"-15"]],["image",["concat",["get","maki"],"-15"]]]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["step",["get","sizerank"],["literal",[0,0]],5,["literal",[0,0.75]]],17,["step",["get","sizerank"],["literal",[0,0]],13,["literal",[0,0.75]]]],"text-anchor":["step",["zoom"],["step",["get","sizerank"],"center",5,"top"],17,["step",["get","sizerank"],"center",13,"top"]],"text-field":["coalesce",["get","name_en"],["get","name"]]},"paint":{"icon-opacity":["step",["zoom"],["step",["get","sizerank"],0,5,1],17,["step",["get","sizerank"],0,13,1]],"text-halo-color":["match",["get","class"],"park_like","hsl(78, 55%, 100%)","education","hsl(40, 52%, 100%)","medical","hsl(3, 51%, 100%)","hsl(40, 53%, 100%)"],"text-halo-width":0.5,"text-halo-blur":0.5,"text-color":["step",["zoom"],["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(22, 44%, 61%)","park_like","hsl(76, 51%, 26%)","education","hsl(40, 18%, 45%)","medical","hsl(3, 18%, 55%)","hsl(26, 15%, 48%)"],5,["match",["get","class"],"food_and_drink","hsl(22, 68%, 44%)","park_like","hsl(76, 50%, 15%)","education","hsl(40, 45%, 25%)","medical","hsl(3, 24%, 45%)","hsl(26, 20%, 38%)"]],17,["step",["get","sizerank"],["match",["get","class"],"food_and_drink","hsl(22, 44%, 61%)","park_like","hsl(76, 51%, 26%)","education","hsl(40, 18%, 45%)","medical","hsl(3, 18%, 55%)","hsl(26, 15%, 48%)"],13,["match",["get","class"],"food_and_drink","hsl(22, 68%, 44%)","park_like","hsl(76, 50%, 15%)","education","hsl(40, 45%, 25%)","medical","hsl(3, 24%, 45%)","hsl(26, 20%, 38%)"]]]}},{"id":"airport-label","type":"symbol","metadata":{"mapbox:featureComponent":"transit","mapbox:group":"Transit, transit-labels"},"source":"composite","source-layer":"airport_label","minzoom":8,"filter":["match",["get","class"],["military","civil"],["match",["get","worldview"],["all","US"],true,false],["disputed_military","disputed_civil"],["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["step",["get","sizerank"],18,9,12],"icon-image":["step",["get","sizerank"],["concat",["get","maki"],"-15"],9,["concat",["get","maki"],"-11"]],"text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":[0,0.75],"text-rotation-alignment":"viewport","text-anchor":"top","text-field":["step",["get","sizerank"],["coalesce",["get","name_en"],["get","name"]],15,["get","ref"]],"text-letter-spacing":0.01,"text-max-width":9},"paint":{"text-color":"hsl(225, 4%, 40%)","text-halo-color":"hsl(225, 68%, 100%)","text-halo-width":1}},{"id":"settlement-subdivision-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":10,"maxzoom":15,"filter":["all",["match",["get","class"],"settlement_subdivision",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement_subdivision",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["<=",["get","filterrank"],3]],"layout":{"text-field":["coalesce",["get","name_en"],["get","name"]],"text-transform":"uppercase","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-letter-spacing":["match",["get","type"],"suburb",0.15,0.1],"text-max-width":7,"text-padding":3,"text-size":["interpolate",["cubic-bezier",0.5,0,1,1],["zoom"],11,["match",["get","type"],"suburb",11,10.5],15,["match",["get","type"],"suburb",15,14]]},"paint":{"text-halo-color":"hsla(40, 53%, 100%, 0.75)","text-halo-width":1,"text-color":"hsl(0, 0%, 27%)","text-halo-blur":0.5}},{"id":"settlement-minor-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],true,8,[">=",["get","symbolrank"],11],10,[">=",["get","symbolrank"],12],11,[">=",["get","symbolrank"],13],12,[">=",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],3,["step",["get","symbolrank"],12,9,11,10,10.5,12,9.5,14,8.5,16,6.5,17,4],13,["step",["get","symbolrank"],23,9,21,10,19,11,17,12,16,13,15,15,13]],"icon-image":"","text-font":["DIN Pro Regular","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["literal",[0,0]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],"center",8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1,"icon-opacity":["step",["zoom"],1,8,0],"text-halo-blur":1}},{"id":"settlement-major-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","maxzoom":15,"filter":["all",["<=",["get","filterrank"],3],["match",["get","class"],"settlement",["match",["get","worldview"],["all","US"],true,false],"disputed_settlement",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],["step",["zoom"],false,8,["<",["get","symbolrank"],11],10,["<",["get","symbolrank"],12],11,["<",["get","symbolrank"],13],12,["<",["get","symbolrank"],15],13,[">=",["get","symbolrank"],11],14,[">=",["get","symbolrank"],13]]],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.9,1],["zoom"],8,["step",["get","symbolrank"],18,9,17,10,15],15,["step",["get","symbolrank"],23,9,22,10,20,11,18,12,16,13,15,15,13]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["step",["zoom"],["literal",[0,0]],8,["literal",[0,0]]],"text-anchor":["step",["zoom"],"center",8,"center"],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":7},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1,"icon-opacity":["step",["zoom"],1,8,0],"text-halo-blur":1}},{"id":"state-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":3,"maxzoom":9,"filter":["match",["get","class"],"state",["match",["get","worldview"],["all","US"],true,false],"disputed_state",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-size":["interpolate",["cubic-bezier",0.85,0.7,0.65,1],["zoom"],4,["step",["get","symbolrank"],10,6,9.5,7,9],9,["step",["get","symbolrank"],21,6,16,7,13]],"text-transform":"uppercase","text-font":["DIN Pro Bold","Arial Unicode MS Bold"],"text-field":["step",["zoom"],["step",["get","symbolrank"],["coalesce",["get","name_en"],["get","name"]],5,["coalesce",["get","abbr"],["get","name_en"],["get","name"]]],5,["coalesce",["get","name_en"],["get","name"]]],"text-letter-spacing":0.15,"text-max-width":6},"paint":{"text-color":"hsl(0, 0%, 0%)","text-halo-color":"hsl(40, 53%, 100%)","text-halo-width":1}},{"id":"country-label","type":"symbol","metadata":{"mapbox:featureComponent":"place-labels","mapbox:group":"Place labels, place-labels"},"source":"composite","source-layer":"place_label","minzoom":1,"maxzoom":10,"filter":["match",["get","class"],"country",["match",["get","worldview"],["all","US"],true,false],"disputed_country",["all",["==",["get","disputed"],"true"],["match",["get","worldview"],["all","US"],true,false]],false],"layout":{"text-line-height":1.1,"text-size":["interpolate",["cubic-bezier",0.2,0,0.7,1],["zoom"],1,["step",["get","symbolrank"],11,4,9,5,8],9,["step",["get","symbolrank"],22,4,19,5,17]],"icon-image":"","text-font":["DIN Pro Medium","Arial Unicode MS Regular"],"text-offset":["literal",[0,0]],"text-field":["coalesce",["get","name_en"],["get","name"]],"text-max-width":6},"paint":{"icon-opacity":["step",["zoom"],["case",["has","text_anchor"],1,0],7,0],"text-color":"hsl(0, 0%, 0%)","text-halo-color":["interpolate",["linear"],["zoom"],2,"hsla(40, 53%, 100%, 0.75)",3,"hsl(40, 53%, 100%)"],"text-halo-width":1.25}}],"created":"2021-03-29T17:24:02.794Z","modified":"2021-03-29T17:24:12.872Z","id":"ckmuv21s85dd317s3sii3rhg7","owner":"northarrowresearch","visibility":"private","draft":false}')},550:function(e){e.exports=JSON.parse('{"version":8,"name":"Grayscale Hillshade","metadata":{"mapbox:type":"default","mapbox:origin":"outdoors-v11","mapbox:autocomposite":true,"mapbox:groups":{"1444855786460.0557":{"name":"Roads","collapsed":true},"1444934295202.7542":{"name":"Admin boundaries","collapsed":false},"1444855799204.86":{"name":"Bridges","collapsed":true},"1444855769305.6016":{"name":"Tunnels","collapsed":true}},"mapbox:sdk-support":{"js":"0.54.0","android":"6.7.0","ios":"4.7.0"},"mapbox:uiParadigm":"layers"},"center":[-112.12098454772115,36.094321418957094],"zoom":11.946429691380777,"bearing":0,"pitch":0,"sources":{"composite":{"url":"mapbox://mapbox.mapbox-streets-v8,mapbox.mapbox-terrain-v2","type":"vector"}},"sprite":"mapbox://sprites/northarrowresearch/ckmuw9x2e5f0417pe3vy7y0cz/55jsegcrpjhdm8ibxtin56tly","glyphs":"mapbox://fonts/northarrowresearch/{fontstack}/{range}.pbf","layers":[{"id":"land","type":"background","layout":{},"paint":{"background-color":["interpolate",["linear"],["zoom"],11,"hsl(35, 0%, 91%)",13,"hsl(35, 0%, 89%)"]}},{"id":"landcover","type":"fill","source":"composite","source-layer":"landcover","maxzoom":12,"layout":{},"paint":{"fill-color":["match",["get","class"],"snow","hsl(0, 0%, 100%)","hsl(75, 0%, 55%)"],"fill-opacity":["interpolate",["exponential",1.5],["zoom"],2,0.3,12,0],"fill-antialias":false}},{"id":"pitch-outline","type":"line","source":"composite","source-layer":"landuse","minzoom":15,"filter":["==",["get","class"],"pitch"],"layout":{},"paint":{"line-color":"hsl(75, 0%, 84%)"}},{"id":"waterway-shadow","type":"line","source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(215, 0%, 69%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-translate":["interpolate",["exponential",1.2],["zoom"],7,["literal",[0,0]],16,["literal",[-1,-1]]],"line-translate-anchor":"viewport","line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water-shadow","type":"fill","source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(215, 0%, 69%)","fill-translate":["interpolate",["exponential",1.2],["zoom"],7,["literal",[0,0]],16,["literal",[-1,-1]]],"fill-translate-anchor":"viewport"}},{"id":"waterway","type":"line","source":"composite","source-layer":"waterway","minzoom":8,"layout":{"line-cap":["step",["zoom"],"butt",11,"round"],"line-join":"round"},"paint":{"line-color":"hsl(205, 0%, 76%)","line-width":["interpolate",["exponential",1.3],["zoom"],9,["match",["get","class"],["canal","river"],0.1,0],20,["match",["get","class"],["canal","river"],8,3]],"line-opacity":["interpolate",["linear"],["zoom"],8,0,8.5,1]}},{"id":"water","type":"fill","source":"composite","source-layer":"water","layout":{},"paint":{"fill-color":"hsl(196, 0%, 58%)"}},{"id":"wetland","type":"fill","source":"composite","source-layer":"landuse_overlay","minzoom":5,"filter":["match",["get","class"],["wetland","wetland_noveg"],true,false],"paint":{"fill-color":"hsl(185, 0%, 74%)","fill-opacity":["interpolate",["linear"],["zoom"],10,0.25,10.5,0.15]}},{"id":"hillshade","type":"fill","source":"composite","source-layer":"hillshade","maxzoom":16,"layout":{},"paint":{"fill-color":["match",["get","class"],"shadow","hsl(0, 0%, 0%)","hsl(0, 0%, 100%)"],"fill-opacity":["interpolate",["linear"],["zoom"],14,["interpolate",["linear"],["get","level"],56,0.27,94,0.1],16,0],"fill-antialias":false}},{"id":"contour-line","type":"line","source":"composite","source-layer":"contour","minzoom":11,"filter":["!=",["get","index"],-1],"layout":{},"paint":{"line-opacity":["interpolate",["linear"],["zoom"],11,["match",["get","index"],[1,2],0.15,0.25],12,["match",["get","index"],[1,2],0.3,0.5]],"line-color":["case",["==",["get","ele"],0],"hsl(100, 0%, 20%)","hsl(100, 0%, 70%)"],"line-width":["interpolate",["linear"],["zoom"],13,["match",["get","index"],[1,2],0.5,0.6],16,["match",["get","index"],[1,2],0.8,1.2]],"line-offset":["interpolate",["linear"],["zoom"],13,["match",["get","index"],[1,2],1,0.6],16,["match",["get","index"],[1,2],1.6,1.2]]}}],"created":"2021-03-29T17:58:09.569Z","modified":"2021-03-29T17:58:21.965Z","id":"ckmuw9x2e5f0417pe3vy7y0cz","owner":"northarrowresearch","visibility":"private","draft":false}')},597:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(120)),l=r(a(32)),i=a(23).makeStyles((function(e){return{root:{display:"flex",zIndex:e.zIndex.drawer+1},text:{flexGrow:1},logo:{}}}));t.default=function(e){var t=e.version,a=i();return n.default.createElement(o.default,{className:a.root,maxWidth:"md"},t&&n.default.createElement(l.default,{component:"div",className:a.text,color:"textSecondary",variant:"overline"},"v.",t),n.default.createElement("img",{className:a.logo,alt:"footer",src:"/webrave-staging/cc-watermarks-riverscapes_orig.png"}))}},598:function(e,t,a){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.hasOwnProperty.call(e,a)&&r(t,e,a);return n(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.isDisabled=void 0;var i=o(a(0)),s=l(a(121)),c=l(a(175)),u=l(a(136)),d=l(a(106)),p=l(a(176)),m=l(a(292)),g=l(a(600)),f=l(a(601)),y=l(a(57)),h=l(a(602)),b=a(13),x=a(23),w=a(79),j=l(a(656)),v=l(a(314)),S=a(180),k=x.makeStyles(j.default);function O(e){return(!e.meta||!e.meta.access||"PUBLIC"!==e.meta.access)&&null===e.role}t.isDisabled=O;t.default=function(e){var t=e.title,a=e.program,r=e.programs,n=e.signOutHandler,o=e.toolbarItems,l=e.shareUrl,x=e.history,j=k(),_=i.useState(!1),z=_[0],T=_[1],E=i.useState(null),P=E[0],C=E[1],I=function(){return C(null)},N=x&&x.location.pathname.indexOf("/admin")>-1,L=(n||r)&&i.default.createElement(p.default,{anchorEl:P,anchorOrigin:{vertical:"top",horizontal:"right"},keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"right"},open:!!P,onClose:I},r&&i.default.createElement(d.default,null,i.default.createElement(w.Typography,{variant:"overline",onClick:function(){return x.push("/")}},"Programs")),r&&i.default.createElement(u.default,null),r&&r.length>0&&r.map((function(e,t){return i.default.createElement(d.default,{disabled:a&&a.machineName===e.machineName||O(e),key:"prog-"+t,onClick:function(){return t=e,I(),void(x&&x.push("/"+t.machineName));var t},value:e.machineName},e.name)})),n&&i.default.createElement(u.default,null),n&&i.default.createElement(d.default,{onClick:n},"Log Out")),R=a&&(a.role===b.WarehouseRoleEnum.Admin||a.role===b.WarehouseRoleEnum.SuperUser);return i.default.createElement(i.default.Fragment,null,i.default.createElement(c.default,{position:"static",className:j.appBar},i.default.createElement(s.default,{className:j.root,disableGutters:!0},i.default.createElement("a",{href:"http://riverscapes.xyz/"},i.default.createElement("img",{className:j.logo,src:"https://riverscapes.xyz/assets/images/RiverscapesLogo.png",alt:"logo"})),a?i.default.createElement("div",null,i.default.createElement(w.Typography,{variant:"subtitle1"},a.name),i.default.createElement(w.Typography,{variant:"caption"},t)):i.default.createElement(w.Typography,{variant:"subtitle1"},t),i.default.createElement("div",{className:j.spacer}),S.version&&i.default.createElement(w.Typography,{component:"div",className:j.text,color:"inherit",variant:"overline"},"v.",S.version),R&&i.default.createElement(y.default,{"aria-haspopup":"true",onClick:function(){x&&(N?x.push("/"+a.machineName):x.push("/"+a.machineName+"/admin"))},color:"inherit"},N?i.default.createElement(f.default,null):i.default.createElement(g.default,null)),o,l&&i.default.createElement(y.default,{"aria-haspopup":"true",onClick:function(){return T(!0)},color:"inherit"},i.default.createElement(m.default,null)),(n||r)&&i.default.createElement(y.default,{"aria-haspopup":"true",onClick:function(e){return C(e.currentTarget)},color:"inherit"},i.default.createElement(h.default,null)))),L,i.default.createElement(v.default,{open:z,shareUrl:l,handleClose:function(){return T(!1)}}))}},603:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function l(e){try{s(r.next(e))}catch(t){o(t)}}function i(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,i)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,r,n,o,l={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;l;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,r=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(n=(n=l.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){l=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){l.label=o[1];break}if(6===o[0]&&l.label<n[1]){l.label=n[1],n=o;break}if(n&&l.label<n[2]){l.label=n[2],l.ops.push(o);break}n[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(i){o=[6,i],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}},l=this&&this.__rest||function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(e);n<r.length;n++)t.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(e,r[n])&&(a[r[n]]=e[r[n]])}return a},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.verifyMeta=t.augmentXML=t.parseProjectXML=t.parseProgramXML=t.parseXMLMeta=t.getXML=void 0;var s=a(604),c=i(a(125)),u=a(13),d=i(a(647));function p(e){try{return e.reduce((function(e,t){var a,n=t.$,o=t._;return r(r({},e),((a={})[n.name]=o&&o.trim(),a))}),{})}catch(t){return{}}}t.getXML=function(e){return n(this,void 0,void 0,(function(){var t;return o(this,(function(a){switch(a.label){case 0:return[4,c.default({url:e,method:"get"})];case 1:if(!(t=a.sent()).data)throw new Error("Error retrieving XML file");return[2,t.data]}}))}))},t.parseXMLMeta=p,t.parseProgramXML=function(e){return n(this,void 0,void 0,(function(){var t,a,n,i,c,m,g,f,y,h;return o(this,(function(o){switch(o.label){case 0:return[4,s.parseStringPromise(e).catch((function(e){throw new u.ValidationError("Error parsing XML file. This likely means a broken or unclosed tag.",[e.message])}))];case 1:return t=o.sent(),a=p(t.Program.MetaData[0].Meta),n=a.projectFile,i=a.projectXSDs,c=l(a,["projectFile","projectXSDs"]),m=t.Program.Definitions[0].Collections[0].Collection.map((function(e){var t=e.$,a=e.Allow,n=e.AllowRegex;return r(r({},t),{Allow:a?Array.isArray(a)?a.map((function(e){return e.$})):[a]:void 0,AllowRegex:n?Array.isArray(n)?n.map((function(e){return e.$.pattern})):[n.pattern]:void 0})})),g=[],t.Program.Definitions[0].Groups[0].Group&&(g=Array.isArray(t.Program.Definitions[0].Groups[0].Group)?t.Program.Definitions[0].Groups[0].Group.map((function(e){return e.$})):[t.Program.Definitions[0].Groups[0].Group]),f=[],t.Program.Definitions[0].Products[0].Product&&(f=Array.isArray(t.Program.Definitions[0].Products[0].Product)?t.Program.Definitions[0].Products[0].Product.map((function(e){return e.$})):[t.Program.Definitions[0].Products[0].Product]),y=(new d.default.DOMParser).parseFromString(e),h=function(e,t,a,n){var o=e.getElementsByTagName("Hierarchy")[0],l=Array.from(o.getElementsByTagName("Product")),i=[];return l.forEach((function(e){var o=[],l=e.getAttribute("ref"),s=t.find((function(e){return e.id===l}));if(!s)throw new Error("Product not found for ref='"+l+"'");for(var c=e.parentNode,u=function(){var e=c.getAttribute("ref"),t=c.tagName,r="Group"===t?a.find((function(t){return t.id===e})):n.find((function(t){return t.id===e})),l=r.folder,i=r.name;o.push({type:t,id:e,folder:l,name:i}),c=c.parentNode};c&&c.parentNode&&"Hierarchy"!==c.tagName;)u();i.push(r(r({},s),{pathArr:o.reverse()}))})),i}(y,f,g,m),[2,Promise.resolve(new u.Program({name:t.Program.Name[0],machineName:t.Program.MachineName[0],projectXSDs:i,projectFile:n,meta:c,products:h,collections:m,groups:g}))]}}))}))},t.parseProjectXML=function(e){return n(this,void 0,void 0,(function(){var t,a,r,n;return o(this,(function(o){switch(o.label){case 0:return[4,s.parseStringPromise(e).catch((function(e){throw new u.ValidationError("Error parsing XML file. This likely means a broken or unclosed tag.",[e.message])}))];case 1:return t=o.sent(),a=t.Project,r={},a.Warehouse&&(r=p(a.Warehouse[0].Meta)),n={},a.MetaData&&(n=p(a.MetaData[0].Meta)),[2,Promise.resolve({id:r.id,name:a.Name[0],projType:a.ProjectType[0],Warehouse:r,program:r.program,meta:n,tags:u.Project.parseTagString(r.tags),xml:e,parsedProjectJSON:t,rawXML:e})]}}))}))},t.augmentXML=function(e,t){var a=(new d.default.DOMParser).parseFromString(t),r=a.getElementsByTagName("MetaData")[0];a.getElementsByTagName("Warehouse").length>0&&a.removeChild(a.getElementsByTagName("Warehouse")[0]);var n=a.createElement("Warehouse");return Object.keys(e).forEach((function(t){var r=a.createElement("Meta");r.setAttribute("name",t),r.appendChild(a.createTextNode(e[t])),n.appendChild(r)})),a.insertBefore(n,r),(new d.default.XMLSerializer).serializeToString(a)},t.verifyMeta=function(e,t,a){var r=a.products.find((function(t){return t.id===e}));if(!r)throw new Error("No project type '"+e+"' found in program '"+a.name+"'");return r.pathArr.filter((function(e){return"Collection"===e.type})).map((function(e){return{name:e.name,value:t[e.name]}}))}},620:function(e,t){},622:function(e,t){},649:function(e,t,a){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},o=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function l(e){try{s(r.next(e))}catch(t){o(t)}}function i(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,i)}s((r=r.apply(e,t||[])).next())}))},l=this&&this.__generator||function(e,t){var a,r,n,o,l={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;l;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,r=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(n=(n=l.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){l=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){l.label=o[1];break}if(6===o[0]&&l.label<n[1]){l.label=n[1],n=o;break}if(n&&l.label<n[2]){l.label=n[2],l.ops.push(o);break}n[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(i){o=[6,i],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.adminGetUsers=t.adminUpdateUserPermissions=t.search=t.deleteProject=t.downloadZipFile=t.getWebVectorSymbology=t.getLayerTiles=t.downloadFile=t.getUploadUrls=t.getProject=t.getProgram=t.getPrograms=t.validateProjectXML=t.authCheck=t.apiCall=void 0;var s,c,u,d,p,m,g,f,y,h,b,x,w,j,v=i(a(125)),S=a(867),k=i(a(542)),O=i(a(18)),_=a(13);t.apiCall=function(e,t,a,r){return v.default({url:e,method:"post",headers:t?{Authorization:"Bearer "+t}:null,data:{query:S.print(a),variables:r}}).then((function(e){return e.data})).catch((function(n){throw n.response&&404===n.response.status?new Error("API Url not found: "+e):n.code&&"ECONNREFUSED"===n.code?new Error("Connection refused. Could not contact: '"+e+"'"):(O.default.error("apiCall Error",{url:e,jwt:t,query:S.print(a),variables:r,err:n}),n)}))},t.authCheck=function(e,a){return t.apiCall(e,a,k.default(s||(s=r(["\n            query AuthCall {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n            }\n        "],["\n            query AuthCall {\n                auth {\n                    loggedIn\n                    userPool\n                    clientId\n                    region\n                    domain\n                }\n            }\n        "]))),{})},t.validateProjectXML=function(e,a,n,o,l){return t.apiCall(e,a,k.default(c||(c=r(["\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\n                validate(xml: $xml, projType: $projType, program: $program) {\n                    result\n                    xmlErrors\n                }\n            }\n        "],["\n            query validateProject($xml: String!, $projType: String!, $program: String!) {\n                validate(xml: $xml, projType: $projType, program: $program) {\n                    result\n                    xmlErrors\n                }\n            }\n        "]))),{xml:n,program:l,projType:o})},t.getPrograms=function(e,a){return o(this,void 0,void 0,(function(){return l(this,(function(o){return[2,t.apiCall(e,a,k.default(u||(u=r(["\n            query programs {\n                programs {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query programs {\n                programs {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "])))).then((function(e){return n(n({},e),{data:{programs:e.data.programs.map(_.Program.fromGraphQL)}})}))]}))}))},t.getProgram=function(e,a,n){return o(this,void 0,void 0,(function(){var o,i,s;return l(this,(function(l){switch(l.label){case 0:return[4,t.apiCall(e,a,k.default(d||(d=r(["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "],["\n            query program($program: String!) {\n                program(program: $program) {\n                    name\n                    machineName\n                    projectXSDs\n                    projectFile\n                    role\n                    groups {\n                        id\n                        name\n                        folder\n                    }\n                    collections {\n                        id\n                        name\n                        AllowRegex\n                        Allow {\n                            id\n                            name\n                            aliases\n                            folder\n                        }\n                    }\n                    products {\n                        id\n                        name\n                        folder\n                        pathArr\n                    }\n                    hierarchy\n                    meta\n                }\n            }\n        "]))),{program:n})];case 1:return o=l.sent(),i=o.data.program,s=o.errors,[2,{data:{program:_.Program.fromGraphQL(i)},errors:s}]}}))}))},t.getProject=function(e,a,i,s,c,u){return void 0===c&&(c=!1),void 0===u&&(u=!1),o(this,void 0,void 0,(function(){return l(this,(function(o){return[2,t.apiCall(e,a,k.default(p||(p=r(["\n            query getProject($id: ID!, $program: String!) {\n                project(id: $id, program: $program) {\n                    id\n                    name\n                    projType\n                    totalSize\n                    program\n                    tags\n                    createdBy\n                    updatedBy\n                    createdOn\n                    updatedOn\n                    meta\n                    ","\n                    ","\n                }\n            }\n        "],["\n            query getProject($id: ID!, $program: String!) {\n                project(id: $id, program: $program) {\n                    id\n                    name\n                    projType\n                    totalSize\n                    program\n                    tags\n                    createdBy\n                    updatedBy\n                    createdOn\n                    updatedOn\n                    meta\n                    ","\n                    ","\n                }\n            }\n        "])),c?"\n                    files {\n                        key\n                        md5\n                        size\n                        downloadUrl\n                    }":"",u?"\n                        tree {\n                            name\n                            description\n                            projectType\n                            metaStr\n                            leaves {\n                                id\n                                pid\n                                label\n                                layerId\n                                blLayerId\n                                layerType\n                                layerPath\n                                layerName\n                                nodeExists\n                                metaStr\n                                symbology\n                                transparency\n                            }\n                            branches {\n                                label\n                                collapsed\n                                bid\n                                pid\n                            }\n                            defaultView\n                            views  {\n                                id\n                                name\n                                description\n                                layers{\n                                id\n                                visible\n                                }\n                            }\n                        }\n                    ":""),{id:i,program:s}).then((function(e){return n(n({},e),{data:{project:_.Project.fromGraphQL(e.data.project)}})}))]}))}))},t.getUploadUrls=function(e,a,n,i,s,c){return o(this,void 0,void 0,(function(){return l(this,(function(o){switch(o.label){case 0:return[4,t.apiCall(e,a,k.default(m||(m=r(["\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\n                    id\n                    uploadUrls {\n                        url\n                        fields\n                        origPath\n                    }\n                }\n            }\n        "],["\n            query requestUploadProject($id: ID, $files: [String!], $program: String!, $projectType: String!) {\n                requestUpload(id: $id, files: $files, program: $program, projectType: $projectType) {\n                    id\n                    uploadUrls {\n                        url\n                        fields\n                        origPath\n                    }\n                }\n            }\n        "]))),{id:n,files:i,projectType:s,program:c})];case 1:return[2,o.sent()]}}))}))},t.downloadFile=function(e,a,n,i,s,c){return o(this,void 0,void 0,(function(){return l(this,(function(o){switch(o.label){case 0:return[4,t.apiCall(e,a,k.default(g||(g=r(["\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                }\n            }\n        "],["\n            query downloadFileQuery($program: String!, $id: ID!, $projType: String!, $filePath: String!) {\n                downloadFile(program: $program, id: $id, projType: $projType, filePath: $filePath) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                }\n            }\n        "]))),{projType:n,program:i,id:s,filePath:c})];case 1:return[2,o.sent()]}}))}))},t.getLayerTiles=function(e,a,i,s,c,u){return o(this,void 0,void 0,(function(){var o,d;return l(this,(function(l){switch(l.label){case 0:return[4,t.apiCall(e,a,k.default(f||(f=r(["\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\n                    url\n                    indexUrl\n                    status\n                    lastStatus\n                    error\n                    rsLayer\n                    rasterStats\n                    started\n                    duration\n                    format\n                    bounds\n                    maxZoom\n                    minZoom\n                    originFile {\n                        lastModified\n                        etag\n                        size\n                        key\n                    }\n                }\n            }\n        "],["\n            query getLayerTilesQuery($program: String!, $id: ID!, $projType: String!, $layerPath: String!) {\n                getLayerTiles(program: $program, id: $id, projType: $projType, layerPath: $layerPath) {\n                    url\n                    indexUrl\n                    status\n                    lastStatus\n                    error\n                    rsLayer\n                    rasterStats\n                    started\n                    duration\n                    format\n                    bounds\n                    maxZoom\n                    minZoom\n                    originFile {\n                        lastModified\n                        etag\n                        size\n                        key\n                    }\n                }\n            }\n        "]))),{projType:i,program:s,id:c,layerPath:u})];case 1:return(o=l.sent()).data?(d=o.data.getLayerTiles,[2,{errors:o.errors,data:{getLayerTiles:n(n({},d),{started:d&&d.started&&parseInt(d.started,10),lastStatus:d&&d.lastStatus&&parseInt(d.lastStatus,10),rasterStats:d&&d.rasterStats&&JSON.parse(d.rasterStats),rsLayer:d&&d.rsLayer&&JSON.parse(d.rsLayer),originFile:d&&d.originFile&&n(n({},d.originFile),{lastModified:parseInt(d.originFile.lastModified,10)})})}}]):[2,{errors:o.errors}]}}))}))},t.getWebVectorSymbology=function(e,a,i,s){return o(this,void 0,void 0,(function(){var o;return l(this,(function(l){switch(l.label){case 0:return[4,t.apiCall(e,a,k.default(y||(y=r(["\n            query getWebVectorSymbologyQuery($projType: String!, $name: String!) {\n                getWebVectorSymbology(projType: $projType, name: $name) {\n                    name\n                    symbologyJSON\n                    url\n                    error\n                }\n            }\n        "],["\n            query getWebVectorSymbologyQuery($projType: String!, $name: String!) {\n                getWebVectorSymbology(projType: $projType, name: $name) {\n                    name\n                    symbologyJSON\n                    url\n                    error\n                }\n            }\n        "]))),{projType:i,name:s})];case 1:return(o=l.sent()).data?[2,{errors:o.errors,data:{getWebVectorSymbology:o.data.getWebVectorSymbology&&n(n({},o.data.getWebVectorSymbology),{symbologyJSON:o.data.getWebVectorSymbology.symbologyJSON&&JSON.parse(o.data.getWebVectorSymbology.symbologyJSON)})}}]:[2,{errors:o.errors}]}}))}))},t.downloadZipFile=function(e,a,n,i,s){return o(this,void 0,void 0,(function(){return l(this,(function(o){switch(o.label){case 0:return[4,t.apiCall(e,a,k.default(h||(h=r(["\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\n                downloadZip(program: $program, id: $id, projType: $projType) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                    pendingSince\n                }\n            }\n        "],["\n            query downloadZipFileQuery($program: String!, $id: ID!, $projType: String!) {\n                downloadZip(program: $program, id: $id, projType: $projType) {\n                    key\n                    md5\n                    contentType\n                    size\n                    downloadUrl\n                    pendingSince\n                }\n            }\n        "]))),{projType:n,program:i,id:s})];case 1:return[2,o.sent()]}}))}))},t.deleteProject=function(e,a,n,i){return o(this,void 0,void 0,(function(){return l(this,(function(o){switch(o.label){case 0:return[4,t.apiCall(e,a,k.default(b||(b=r(["\n            mutation deleteProject($id: ID!, $program: String!) {\n                deleteProject(id: $id, program: $program)\n            }\n        "],["\n            mutation deleteProject($id: ID!, $program: String!) {\n                deleteProject(id: $id, program: $program)\n            }\n        "]))),{program:i,id:n})];case 1:return[2,o.sent()]}}))}))},t.search=function(e,a,i,s){return o(this,void 0,void 0,(function(){var o,c,u,d,p;return l(this,(function(l){switch(l.label){case 0:return[4,t.apiCall(e,a,k.default(x||(x=r(["\n            query searchQuery(\n                $program: String!\n                $projType: String\n                $nameStr: String\n                $metaStr: String\n                $metaArr: String\n                $tags: String\n                $noTags: Boolean\n                $limit: Int\n                $nextToken: Int\n            ) {\n                search(\n                    program: $program\n                    projType: $projType\n                    nameStr: $nameStr\n                    metaStr: $metaStr\n                    metaArr: $metaArr\n                    tags: $tags\n                    noTags: $noTags\n                    limit: $limit\n                    nextToken: $nextToken\n                ) {\n                    projects {\n                        id\n                        name\n                        projType\n                        program\n                        tags\n                        totalSize\n                        createdBy\n                        updatedBy\n                        createdOn\n                        updatedOn\n                        meta\n                        score\n                    }\n                    nextToken\n                    total\n                }\n            }\n        "],["\n            query searchQuery(\n                $program: String!\n                $projType: String\n                $nameStr: String\n                $metaStr: String\n                $metaArr: String\n                $tags: String\n                $noTags: Boolean\n                $limit: Int\n                $nextToken: Int\n            ) {\n                search(\n                    program: $program\n                    projType: $projType\n                    nameStr: $nameStr\n                    metaStr: $metaStr\n                    metaArr: $metaArr\n                    tags: $tags\n                    noTags: $noTags\n                    limit: $limit\n                    nextToken: $nextToken\n                ) {\n                    projects {\n                        id\n                        name\n                        projType\n                        program\n                        tags\n                        totalSize\n                        createdBy\n                        updatedBy\n                        createdOn\n                        updatedOn\n                        meta\n                        score\n                    }\n                    nextToken\n                    total\n                }\n            }\n        "]))),n(n({},s),{program:i}))];case 1:return(o=l.sent()).data?(c=o.data.search||{},u=c.nextToken,d=c.projects,p=c.total,[2,{errors:o.errors,data:{search:{projects:Array.isArray(d)?d.map(_.Project.fromGraphQL):d,nextToken:u,total:p}}}]):[2,{errors:o.errors}]}}))}))},t.adminUpdateUserPermissions=function(e,a,i,s,c){return o(this,void 0,void 0,(function(){var o;return l(this,(function(l){switch(l.label){case 0:return[4,t.apiCall(e,a,k.default(w||(w=r(["\n            mutation project($id: ID!, $program: String!, $permission: String) {\n                updateUser(id: $id, program: $program, permission: $permission) {\n                    email\n                    name\n                    picture\n                    username\n                    createdOn\n                    updatedOn\n                    role\n                }\n            }\n        "],["\n            mutation project($id: ID!, $program: String!, $permission: String) {\n                updateUser(id: $id, program: $program, permission: $permission) {\n                    email\n                    name\n                    picture\n                    username\n                    createdOn\n                    updatedOn\n                    role\n                }\n            }\n        "]))),{program:s,id:i,permission:c})];case 1:return(o=l.sent()).data?[2,{errors:o.errors,data:{updateUser:o.data.updateUser?n(n({},o.data.updateUser),{createdOn:parseInt(o.data.updateUser.createdOn,10),updatedOn:parseInt(o.data.updateUser.updatedOn,10)}):null}}]:[2,{errors:o.errors}]}}))}))},t.adminGetUsers=function(e,a,i,s,c){return o(this,void 0,void 0,(function(){var o,u,d,p;return l(this,(function(l){switch(l.label){case 0:return[4,t.apiCall(e,a,k.default(j||(j=r(["\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\n                    users {\n                        email\n                        name\n                        picture\n                        username\n                        createdOn\n                        updatedOn\n                        role\n                    }\n                    nextToken\n                }\n            }\n        "],["\n            query getUsers($program: String!, $limit: Int, $nextToken: String) {\n                getUsers(program: $program, limit: $limit, nextToken: $nextToken) {\n                    users {\n                        email\n                        name\n                        picture\n                        username\n                        createdOn\n                        updatedOn\n                        role\n                    }\n                    nextToken\n                }\n            }\n        "]))),{program:i,limit:s,nextToken:c})];case 1:return(o=l.sent()).data?(u=o.data.getUsers||{},d=u.nextToken,p=u.users,[2,{errors:o.errors,data:{getUsers:{users:Array.isArray(p)?p.map((function(e){return n(n({},e),{createdOn:parseInt(e.createdOn,10),updatedOn:parseInt(e.updatedOn,10)})})):p,nextToken:d}}}]):[2,{errors:o.errors}]}}))}))}},650:function(e,t,a){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o,l=n(a(542)),i=a(438),s=l.default(o||(o=r(['\n    # Check out the cheat sheet:\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\n\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n\n    type Query {\n        # Get a project and associated metadata\n        auth: AuthParams\n\n        project(id: ID!, program: String!): Project\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\n\n        program(program: String!): Program\n        programs: [Program]\n\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\n\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\n\n        getWebVectorSymbology(projType: String, name: String!): Symbology\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\n\n\n        # Request an upload start. Writes a manifest file on the upload bucket\n        # and creates upload urls for everything\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\n\n        search(\n            program: String!\n            projType: String\n            nameStr: String\n            metaStr: String\n            metaArr: String\n            tags: String\n            noTags: Boolean\n            limit: Int\n            nextToken: Int\n        ): PaginatedSearchResults\n\n        validate(xml: String!, projType: String!, program: String!): Validation\n\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\n\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\n    }\n\n    # this schema allows the following mutation:\n    type Mutation {\n        # signal a deletion of a project\n        deleteProject(id: ID!, program: String!): ID!\n        updateUser(id: ID!, program: String!, permission: String): User\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\n    }\n\n    type User {\n        email: String\n        name: String\n        picture: String\n        username: String!\n        createdOn: String\n        updatedOn: String\n        role: String\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        nextToken: String\n    }\n\n    type Validation {\n        result: Boolean\n        xmlErrors: [String]\n    }\n\n    type AuthParams {\n        loggedIn: Boolean\n        userPool: String\n        clientId: String\n        region: String\n        domain: String\n    }\n\n    interface ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n    }\n\n    type Project implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        files: [FileDownloadMeta]\n        tree: ProjectTree\n    }\n\n    type ProjectSearchResult implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        score: Float\n        files: [FileDownloadMeta]\n    }\n\n    # This is mostly just JSON that\'s stringified\n    type Product {\n        id: ID!\n        name: String!\n        folder: String\n        # Stringified JSON Array:\n        pathArr: String\n    }\n    type Group {\n        id: ID!\n        name: String!\n        folder: String\n    }\n    type NamedAllow {\n        id: ID!\n        name: String!\n        aliases: String\n        folder: String\n    }\n    type Collection {\n        id: ID!\n        name: String!\n        AllowRegex: [String]\n        Allow: [NamedAllow]\n    }\n    type Program {\n        name: String\n        machineName: String\n        projectXSDs: String\n        projectFile: String\n        meta: String\n        groups: [Group]\n        collections: [Collection]\n        products: [Product]\n        hierarchy: String\n        role: String\n    }\n\n    type FileDownloadMeta {\n        key: String!\n        md5: String!\n        size: String\n        contentType: String\n        downloadUrl: String!\n        pendingSince: String\n    }\n\n    type FileUpload {\n        id: ID!\n        uploadUrls: [UploadUrl]\n    }\n\n    type UploadUrl {\n        url: String\n        fields: String\n        origPath: String\n    }\n\n    type FileUploadMeta {\n        key: String!\n        downloadUrl: String!\n    }\n\n    # Series Connection allows us to implement pagination easily\n    type PaginatedProjects {\n        projects: [Project]\n        nextToken: String\n    }\n\n    type PaginatedSearchResults {\n        projects: [ProjectSearchResult]\n        nextToken: Int\n        total: Int\n    }\n\n    type NewProject {\n        id: ID!\n    }\n\n    """\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\n    correct icon and assign them to the right slot\n    """\n    enum ProjectTreeLayerTypes {\n        ',"\n    }\n    enum SymbologyStatus {\n        ","\n    }\n    enum TilingStatus {\n        ","\n    }\n\n    type ProjectTreeBranch {\n        label: String!\n        collapsed: Boolean\n        # Branch ID and parent ID\n        bid: Int\n        pid: Int\n    }\n    type ProjectTreeLeaf {\n        id: Int # This is a global ID not an id within a branch\n        pid: Int\n        label: String!\n        layerId: ID\n        blLayerId: ID\n        layerType: ProjectTreeLayerTypes!\n        layerPath: String\n        layerName: String\n        nodeExists: Boolean\n        # This is the path that helps u\n        metaStr: String\n        symbology: String\n        transparency: Int\n    }\n\n    # The project tree comes back as non-recursive list of layers.\n    # The ProjectTree class will need to parse this into a typescript \n    # Recursive type\n    type ProjectTreeViewLayer {\n        id: ID!\n        visible: Boolean\n    }\n\n    type ProjectTreeViews {\n        id: ID!\n        name: String!\n        description: String\n        layers: [ProjectTreeViewLayer]\n    }\n\n    type ProjectTree {\n        name: String\n        description: String\n        projectType: String\n        metaStr: String\n        leaves: [ProjectTreeLeaf]\n        branches: [ProjectTreeBranch]\n        defaultView: ID\n        views: [ProjectTreeViews]\n    }\n\n    type TileServiceOriginFile {\n        lastModified: String\n        etag: String\n        size: Int\n        key: String\n    }\n\n    type TileService {\n        url: String\n        indexUrl: String\n        status: TilingStatus!\n        lastStatus: String\n        error: String\n        rasterStats: String\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\n        started: String\n        duration: Float\n        format: String\n        bounds: [Float]\n        maxZoom: Int\n        minZoom: Int\n        originFile: TileServiceOriginFile\n    }\n    type Symbology {\n        name: String!\n        status: SymbologyStatus\n        symbologyJSON: String\n        url: String\n        error: String\n    }\n\n    # Just a nice convenience type for our lambda invoke methods\n    type WatcherOutput {\n        message: String\n        results: [String]\n        errors: [String]\n    }\n"],['\n    # Check out the cheat sheet:\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\n\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n\n    type Query {\n        # Get a project and associated metadata\n        auth: AuthParams\n\n        project(id: ID!, program: String!): Project\n        projects(program: String!, projType: String, limit: Int, nextToken: String): PaginatedProjects\n\n        program(program: String!): Program\n        programs: [Program]\n\n        downloadFile(program: String!, id: ID!, projType: String!, filePath: String!): FileDownloadMeta\n\n        downloadZip(program: String!, id: ID!, projType: String!): FileDownloadMeta\n\n        getWebVectorSymbology(projType: String, name: String!): Symbology\n        getLayerTiles(program: String!, id: ID!, projType: String!, layerPath: String!): TileService\n\n\n        # Request an upload start. Writes a manifest file on the upload bucket\n        # and creates upload urls for everything\n        requestUpload(id: ID, files: [String!], program: String!, projectType: String!): FileUpload\n\n        search(\n            program: String!\n            projType: String\n            nameStr: String\n            metaStr: String\n            metaArr: String\n            tags: String\n            noTags: Boolean\n            limit: Int\n            nextToken: Int\n        ): PaginatedSearchResults\n\n        validate(xml: String!, projType: String!, program: String!): Validation\n\n        getUsers(program: String!, limit: Int, nextToken: String): PaginatedUsers\n\n        projectTree(id: ID!, program: String!, projType: String!): ProjectTree\n    }\n\n    # this schema allows the following mutation:\n    type Mutation {\n        # signal a deletion of a project\n        deleteProject(id: ID!, program: String!): ID!\n        updateUser(id: ID!, program: String!, permission: String): User\n        reIndexProject(id: ID!, program: String!, projType: String!): WatcherOutput\n        queueTileRebuild(id: ID!, program: String!, projType: String!, filePath: String, symbologies: [String]): String\n    }\n\n    type User {\n        email: String\n        name: String\n        picture: String\n        username: String!\n        createdOn: String\n        updatedOn: String\n        role: String\n    }\n\n    type PaginatedUsers {\n        users: [User]\n        nextToken: String\n    }\n\n    type Validation {\n        result: Boolean\n        xmlErrors: [String]\n    }\n\n    type AuthParams {\n        loggedIn: Boolean\n        userPool: String\n        clientId: String\n        region: String\n        domain: String\n    }\n\n    interface ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n    }\n\n    type Project implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        files: [FileDownloadMeta]\n        tree: ProjectTree\n    }\n\n    type ProjectSearchResult implements ProjectBase {\n        id: ID!\n        name: String\n        meta: String\n        tags: String\n        projType: String\n        totalSize: String\n        program: String\n        createdBy: ID!\n        updatedBy: ID!\n        createdOn: String!\n        updatedOn: String!\n        score: Float\n        files: [FileDownloadMeta]\n    }\n\n    # This is mostly just JSON that\'s stringified\n    type Product {\n        id: ID!\n        name: String!\n        folder: String\n        # Stringified JSON Array:\n        pathArr: String\n    }\n    type Group {\n        id: ID!\n        name: String!\n        folder: String\n    }\n    type NamedAllow {\n        id: ID!\n        name: String!\n        aliases: String\n        folder: String\n    }\n    type Collection {\n        id: ID!\n        name: String!\n        AllowRegex: [String]\n        Allow: [NamedAllow]\n    }\n    type Program {\n        name: String\n        machineName: String\n        projectXSDs: String\n        projectFile: String\n        meta: String\n        groups: [Group]\n        collections: [Collection]\n        products: [Product]\n        hierarchy: String\n        role: String\n    }\n\n    type FileDownloadMeta {\n        key: String!\n        md5: String!\n        size: String\n        contentType: String\n        downloadUrl: String!\n        pendingSince: String\n    }\n\n    type FileUpload {\n        id: ID!\n        uploadUrls: [UploadUrl]\n    }\n\n    type UploadUrl {\n        url: String\n        fields: String\n        origPath: String\n    }\n\n    type FileUploadMeta {\n        key: String!\n        downloadUrl: String!\n    }\n\n    # Series Connection allows us to implement pagination easily\n    type PaginatedProjects {\n        projects: [Project]\n        nextToken: String\n    }\n\n    type PaginatedSearchResults {\n        projects: [ProjectSearchResult]\n        nextToken: Int\n        total: Int\n    }\n\n    type NewProject {\n        id: ID!\n    }\n\n    """\n    ProjectTreeLayerTypes is an enumeration to help us display layers with the\n    correct icon and assign them to the right slot\n    """\n    enum ProjectTreeLayerTypes {\n        ',"\n    }\n    enum SymbologyStatus {\n        ","\n    }\n    enum TilingStatus {\n        ","\n    }\n\n    type ProjectTreeBranch {\n        label: String!\n        collapsed: Boolean\n        # Branch ID and parent ID\n        bid: Int\n        pid: Int\n    }\n    type ProjectTreeLeaf {\n        id: Int # This is a global ID not an id within a branch\n        pid: Int\n        label: String!\n        layerId: ID\n        blLayerId: ID\n        layerType: ProjectTreeLayerTypes!\n        layerPath: String\n        layerName: String\n        nodeExists: Boolean\n        # This is the path that helps u\n        metaStr: String\n        symbology: String\n        transparency: Int\n    }\n\n    # The project tree comes back as non-recursive list of layers.\n    # The ProjectTree class will need to parse this into a typescript \n    # Recursive type\n    type ProjectTreeViewLayer {\n        id: ID!\n        visible: Boolean\n    }\n\n    type ProjectTreeViews {\n        id: ID!\n        name: String!\n        description: String\n        layers: [ProjectTreeViewLayer]\n    }\n\n    type ProjectTree {\n        name: String\n        description: String\n        projectType: String\n        metaStr: String\n        leaves: [ProjectTreeLeaf]\n        branches: [ProjectTreeBranch]\n        defaultView: ID\n        views: [ProjectTreeViews]\n    }\n\n    type TileServiceOriginFile {\n        lastModified: String\n        etag: String\n        size: Int\n        key: String\n    }\n\n    type TileService {\n        url: String\n        indexUrl: String\n        status: TilingStatus!\n        lastStatus: String\n        error: String\n        rasterStats: String\n        rsLayer: String        # Arbitrary depth so stringify rsLayer\n        started: String\n        duration: Float\n        format: String\n        bounds: [Float]\n        maxZoom: Int\n        minZoom: Int\n        originFile: TileServiceOriginFile\n    }\n    type Symbology {\n        name: String!\n        status: SymbologyStatus\n        symbologyJSON: String\n        url: String\n        error: String\n    }\n\n    # Just a nice convenience type for our lambda invoke methods\n    type WatcherOutput {\n        message: String\n        results: [String]\n        errors: [String]\n    }\n"])),Object.values(i.ProjectTreeLayerTypes).join("\n      "),Object.values(i.SymbologyStatus).join("\n      "),Object.values(i.TilingStatus).join("\n      "));t.default=s},651:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.Program=void 0;var n=function(){function e(e){Object.assign(this,e)}return e.fromGraphQL=function(t){if(!t)return null;var a=JSON.parse(t.meta);return new e(r(r({},t),{meta:a,role:t.role,products:t.products.map((function(e){return r(r({},e),{pathArr:JSON.parse(e.pathArr)})}))}))},e}();t.Program=n},652:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Project=void 0;var o=n(a(653));function l(e){e.sort((function(e,t){return e.children&&!t.children?-1:!e.children&&t.children?1:e.name.toLowerCase()<t.name.toLowerCase()?-1:e.name.toLowerCase()>t.name.toLowerCase()?1:0}))}var i=function(){function e(e){var t=this;this.treeIzeFilePaths=function(){var e=[];return t.files.forEach((function(t){var a=t.key,r=a.split("/");1===r.length&&a.indexOf("\\")>-1&&(r=a.split("\\"));for(var n=e,o=function(){var e={name:r.shift(),children:[]},t=n.find((function(t){return t.name===e.name}));t&&t.children?n=t.children:(n.push(e),n=e.children),l(n)};r.length>1;)o();n.push({name:r[0],path:a})})),l(e),e},Object.assign(this,e),this.files||(this.files=[]),this.tree&&this.tree.leaves&&(this.tree.leaves=this.tree.leaves.map((function(e){return r(r({},e),{meta:e&&e.metaStr?JSON.parse(e.metaStr):{}})})))}return e.fromGraphQL=function(t){return t?new e(r(r({},t),{createdOn:parseInt(t.createdOn,10),updatedOn:parseInt(t.updatedOn,10),meta:t.meta?JSON.parse(t.meta):{},tags:t.tags?t.tags.split(","):[]})):null},e.diff=function(e,t){var a=[],r=[];return t&&0!==t.length?e&&0!==e.length?{leftOnly:e.filter((function(e){var n=t.find((function(t){return e.key===t.key}));return n&&(n.md5===e.md5?r.push(e.key):a.push(e.key)),!n})).map((function(e){return e.key})),rightOnly:t.filter((function(t){return!e.find((function(e){return t.key===e.key}))})).map((function(e){return e.key})),different:a,same:r}:{leftOnly:[],rightOnly:t.map((function(e){return e.key})),different:[],same:[]}:{leftOnly:e.map((function(e){return e.key})),rightOnly:[],different:[],same:[]}},e.getProjectS3Keys=function(e,t,a){var r=o.default.join(e.machineName,a,t),n=r+".zip",l=o.default.join(r,e.projectFile),i=o.default.join(e.machineName,a,t+".zip.pending"),s=""+[e.machineName,a,t].join("-");return{prefix:r,zipKey:n,projFileKey:l,zipKeyPending:i,downloadFolderName:s,downloadZipFilename:s+".zip"}},e.parseDynamoMeta=function(e){var t=Object.keys(e).filter((function(e){return 0===e.indexOf("META_")})).reduce((function(t,a){var n,o=a.split("META_")[1];return r(r({},t),((n={})[o]=e[a],n))}),{});return JSON.stringify(t)},e.parseTagString=function(e){return e&&0!==e.trim().length?e.split(",").map((function(e){return e.trim()})).filter((function(e){return e.length>0&&"null"!==e&&"undefined"!==e})):[]},e.parseS3Key=function(t,a){if(a.split("/").length<3)throw new Error("Not a valid project key");var r=a.split("/"),n=r[0],o=r[1],l=r[2];if(t.machineName!==n)throw new Error("Program passed to parseS3 key "+t.machineName+" does not correspond to program in key: "+n);return e.getProjectS3Keys(t,l,o)},e.parseS3KeyDUMB=function(e){var t=e.split("/");if(t.length<3)throw new Error("Not a valid project key");var a=t[0],r=t[1],n=t[2],l=o.default.join(a,r,n);return{programMachineName:a,projType:r,id:n,zipKey:l+".zip",prefix:l}},e}();t.Project=i},654:function(e,t,a){"use strict";var r=this&&this.__extends||function(){var e=function(t,a){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(t,a)};return function(t,a){function r(){this.constructor=t}e(t,a),t.prototype=null===a?Object.create(a):(r.prototype=a.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0}),t.ValidationError=void 0;var n=function(e){function t(t,a){var r=e.call(this,t)||this;return r.name=r.constructor.name,r.reasons=a,Error.captureStackTrace(r,r.constructor),r}return r(t,e),t}(Error);t.ValidationError=n},655:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TileServiceJSONClass=void 0;var r=function(e){Object.assign(this,e)};t.TileServiceJSONClass=r},656:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(23);t.default=function(e){var t,a,n,o;return{appBar:{zIndex:e.zIndex.drawer+1},root:{display:"flex",alignItems:"center",width:"100%",padding:e.spacing(0,1),textShadow:"3px 3px 3px rgba(0,0,0,0.7)",backgroundImage:"url(/webrave-staging/HeaderBackground.png)",backgroundRepeat:"no-repeat",backgroundPosition:"0% 50%",backgroundSize:"cover",backgroundColor:"#444444"},logo:{height:40,width:40,marginRight:e.spacing(2)},programChooser:{margin:e.spacing(0,1),color:e.palette.primary.contrastText,"& svg":{color:e.palette.primary.contrastText},"&:before":{borderColor:e.palette.primary.contrastText},"&:after":{borderColor:e.palette.primary.contrastText}},transparent:{backgroundColor:"transparent",background:"none",color:e.palette.text.primary},search:(t={position:"relative",borderRadius:e.shape.borderRadius,backgroundColor:r.fade(e.palette.common.white,.15),"&:hover":{backgroundColor:r.fade(e.palette.common.white,.25)},marginRight:e.spacing(2),marginLeft:0,width:"100%",flexGrow:1},t[e.breakpoints.up("sm")]={marginLeft:e.spacing(3),width:"auto"},t),searchIcon:{width:e.spacing(7),height:"100%",position:"absolute",pointerEvents:"none",display:"flex",alignItems:"center",justifyContent:"center"},inputRoot:{color:"inherit"},spacer:{flexGrow:1},inputInput:(a={padding:e.spacing(1,1,1,7),transition:e.transitions.create("width"),width:"100%"},a[e.breakpoints.up("sm")]={width:200},a),sectionDesktop:(n={display:"none"},n[e.breakpoints.up("sm")]={display:"flex",flexGrow:1},n),sectionMobile:(o={display:"flex",flexGrow:1},o[e.breakpoints.up("sm")]={display:"none"},o)}}},660:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(87)),l=a(23).makeStyles((function(e){return{root:{},whBtnLogo:{height:20,width:20,marginRight:e.spacing(1)},whButton:{maxWidth:300}}}));t.default=function(e){var t=e.title,a=e.href,r=e.stay,i=l();return n.default.createElement(o.default,{className:i.whButton,target:r?void 0:"_blank",variant:"contained",href:a,color:"secondary",fullWidth:!0},n.default.createElement("img",{className:i.whBtnLogo,src:"https://riverscapes.xyz/assets/images/RiverscapesLogo.png",alt:"logo"}),t)}},662:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.isDisabled=void 0;var o=n(a(0)),l=n(a(48)),i=n(a(181)),s=n(a(32)),c=n(a(182)),u=n(a(216)),d=n(a(142)),p=n(a(183)),m=n(a(184)),g=n(a(663)),f=a(23),y=n(a(3)),h=a(459),b=f.makeStyles((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{},accessChip:r({},Object.keys(h.accessColors).reduce((function(t,a){var n;return r(r({},t),((n={})["&.access_"+a]={color:e.palette.getContrastText(h.accessColors[a][500]),background:h.accessColors[a][500]},n))}),{}))}}));function x(e){return(!e.meta||!e.meta.access||"PUBLIC"!==e.meta.access)&&null===e.role}t.isDisabled=x;t.default=function(e){var t=e.programs,a=e.history,r=e.navigate,n=b();return o.default.createElement("div",{className:n.rootContainer},o.default.createElement("div",{className:n.spacer}),o.default.createElement(l.default,{className:n.root,elevation:1},o.default.createElement("div",{className:n.logoContainer},o.default.createElement("img",{className:n.logo,src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"})),o.default.createElement(s.default,{variant:"h5"},"Choose a program:"),o.default.createElement(c.default,null,t&&t.map((function(e,t){var l=o.default.createElement(u.default,{icon:o.default.createElement(g.default,null),className:y.default(n.accessChip,"access_"+e.role),label:e.role||"Observer",color:"primary"}),s=x(e);return s&&(l=o.default.createElement(u.default,{label:"No Access",color:"default"})),o.default.createElement(d.default,{key:"progKey-"+t,disabled:s,button:!0,divider:!0,onClick:function(){return r(a,e)}},o.default.createElement(m.default,null,o.default.createElement(i.default,{alt:"programname"},e.name.substr(0,1))),o.default.createElement(p.default,{primary:e.name,secondary:e.meta.description}),l)}))),o.default.createElement(s.default,{paragraph:!0,variant:"caption"},"If there are programs labeled"," ",o.default.createElement(u.default,{label:"No Access",component:"span",color:"default",size:"small"})," and you think you should be able to see them please contact your program administrator.")),o.default.createElement("div",{className:n.spacer}))}},664:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__createBinding||(Object.create?function(e,t,a,r){void 0===r&&(r=a),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,r){void 0===r&&(r=a),e[r]=t[a]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.hasOwnProperty.call(e,a)&&n(t,e,a);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=l(a(0)),c=a(23),u=i(a(185)),d=i(a(101)),p=i(a(138)),m=i(a(87)),g=i(a(217)),f=i(a(140)),y=i(a(139)),h=i(a(57)),b=i(a(136)),x=i(a(230)),w=i(a(32)),j=i(a(186)),v=i(a(292)),S=i(a(460)),k=i(a(665)),O=i(a(666)),_=i(a(667)),z=i(a(461)),T=i(a(347)),E=i(a(348)),P=i(a(455)),C=i(a(3)),I=i(a(463)),N=i(a(315)),L=i(a(458)),R=i(a(456)),D=i(a(314)),A=i(a(668)),U=i(a(670)),M=c.makeStyles(U.default);t.default=function(e){var t=e.onClose,a=e.project,n=e.downloadFile,o=e.webRaveUrl,l=e.program,i=e.showFileTree,c=e.pendingZips,U=e.downloadZipFile,F=M(),B=s.useState(null),W=B[0],$=B[1],G=s.useState(!1),V=G[0],H=G[1],Z=c[a.id],J=[{pattern:/.*\.(png|gif|jpg|jpeg)$/i,icon:s.default.createElement(k.default,{className:F.photoIcon}),classStr:"photo"},{pattern:/.*\.(tif|img|shp)$/i,icon:s.default.createElement(O.default,{className:F.TerrainIcon}),classStr:"terrain"},{pattern:/.*\.(csv|pdf|doc)$/i,icon:s.default.createElement(_.default,{className:F.documentIcon}),classStr:"assignment"}],q=(a.files||[]).reduce((function(e,t){var a,n=J.find((function(e){var a=e.pattern;return t.key.match(a)}));return r(r({},e),((a={})[t.key]=r(r({},t),{icon:n?n.icon:s.default.createElement(S.default,{className:F.normalIcon}),classStr:n?n.classStr:"normalIcon"}),a))}),{}),X=a.treeIzeFilePaths(),K=l.products.find((function(e){return e.id===a.projType})),Q=K?K.name:"Unknown",Y=Object.keys(a.meta).find((function(e){return"description"===e.toLowerCase()}));return s.default.createElement(p.default,{onClose:t,open:!0,maxWidth:"md",fullWidth:!0,className:F.root,classes:{scrollPaper:F.scrollPaper}},s.default.createElement(D.default,{open:V,shareUrl:window.location.href,handleClose:function(){return H(!1)}}),s.default.createElement(f.default,{disableTypography:!0,className:F.titlebar},s.default.createElement("div",{className:F.titlebarLeft},s.default.createElement(d.default,{title:s.default.createElement(w.default,{variant:"body1"},a.name)},s.default.createElement(w.default,{variant:"h5",component:"div",className:C.default(F.name,F.allowSelect)},a.name)),s.default.createElement("div",{className:F.subHeader},s.default.createElement("div",{className:F.flexGrow},s.default.createElement(w.default,{variant:"caption",color:"inherit",component:"div"},"ID: ",s.default.createElement("span",{className:F.allowSelect},a.id))))),t?s.default.createElement("div",null,s.default.createElement(h.default,{"aria-label":"close",className:F.closeButton,onClick:t,size:"small"},s.default.createElement(x.default,null))):null),s.default.createElement(y.default,{dividers:!0},s.default.createElement("div",{className:C.default(F.allowSelect)},s.default.createElement("div",{className:F.header},s.default.createElement("div",{className:F.headerLeft},s.default.createElement(w.default,{variant:"caption",component:"div",color:"inherit"},s.default.createElement("strong",null,"Project Type"),": ",s.default.createElement("strong",null,Q)," (",K&&K.id,")"),s.default.createElement(w.default,{variant:"caption",component:"div",color:"inherit"},s.default.createElement("strong",null,"Created"),": ",N.default(a.createdOn,"x").fromNow()," (",N.default(a.createdOn,"x").format("lll"),")"),s.default.createElement(w.default,{variant:"caption",component:"div",color:"inherit"},s.default.createElement("strong",null,"Updated"),": ",N.default(a.updatedOn,"x").fromNow()," (",N.default(a.updatedOn,"x").format("lll"),")"),s.default.createElement(w.default,{variant:"caption",component:"div",color:"inherit"},s.default.createElement("strong",null,"Warehouse tags: "),s.default.createElement(P.default,{tags:a.tags})),s.default.createElement(w.default,{variant:"caption",component:"div",color:"inherit"},s.default.createElement("strong",null,"Size (Unzipped)"),":"," ",a.totalSize&&a.totalSize>-1?I.default(a.totalSize):"Not available")),s.default.createElement("div",{className:F.headerRight},s.default.createElement(g.default,{color:"primary"},o&&s.default.createElement(L.default,r({title:"Map",url:o},{project:a},{btnProps:{variant:"text"}})),s.default.createElement(m.default,{variant:"text",onClick:function(){return H(!0)},style:{cursor:"pointer"},startIcon:s.default.createElement(v.default,null)},"Share"),s.default.createElement(R.default,r({title:"Download"},{project:a,pendingSince:Z,downloadZipFile:U},{btnProps:{variant:"text"}}))))),Y&&s.default.createElement("div",null,s.default.createElement(w.default,{className:F.title,color:"inherit",component:"div",variant:"subtitle1"},"Description"),s.default.createElement(w.default,{color:"textSecondary",variant:"body2"},a.meta[Y])),s.default.createElement(w.default,{className:F.title,color:"inherit",variant:"subtitle1"},"Metadata"),s.default.createElement(b.default,null),s.default.createElement("div",{className:F.metaDisplay},Object.keys(a.meta).filter((function(e){return-1===["description"].indexOf(e.toLowerCase())})).map((function(e,t){var r=a.meta[e];return 0===a.meta[e].indexOf("http")&&(r=s.default.createElement(u.default,{href:a.meta[e],target:"_blank"},a.meta[e])),s.default.createElement(d.default,{key:"result-"+t,placement:"bottom",title:s.default.createElement(s.default.Fragment,null,s.default.createElement(w.default,{variant:"body1",component:"div"},s.default.createElement("strong",null,e)),s.default.createElement(w.default,{variant:"body2",component:"div"},r))},s.default.createElement("div",{className:F.metaDisplayItem},s.default.createElement(w.default,{variant:"caption",component:"div",color:"textPrimary"},s.default.createElement("strong",null,e)),s.default.createElement(w.default,{variant:"caption",component:"div",color:"textPrimary"},r)))})))),i&&s.default.createElement(s.default.Fragment,null,s.default.createElement(w.default,{className:F.title,color:"inherit",variant:"subtitle1"},"Files"),s.default.createElement(b.default,null),s.default.createElement(z.default,{className:F.treeRoot,defaultExpanded:["1"],disableSelection:!0,defaultCollapseIcon:s.default.createElement(T.default,{color:"inherit"}),defaultExpandIcon:s.default.createElement(E.default,{color:"inherit"})},X.map((function(e,t){return s.default.createElement(A.default,{project:a,key:"treeNode-"+t,keyStr:"treeNode-"+t,item:e,fileDict:q,fileClick:n})}))))),s.default.createElement(j.default,{open:Boolean(W),anchorEl:W?W[0]:null,onClose:function(){return $(null)},anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},s.default.createElement(w.default,{className:F.popOver},W?W[1]:"")))}},668:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=a(23),l=r(a(57)),i=r(a(32)),s=r(a(101)),c=r(a(457)),u=r(a(316)),d=r(a(463)),p=r(a(669)),m=o.makeStyles(p.default);t.default=function e(t){var a=t.item,r=t.fileDict,o=t.keyStr,p=t.project,g=t.fileClick,f=m();if(a.children){var y=a.children.map((function(t,a){return n.default.createElement(e,{keyStr:o+"-l"+a,key:o+"-l"+a,item:t,fileDict:r,project:p,fileClick:g})}));return n.default.createElement(u.default,{nodeId:o,className:f.treeFolder,classes:{content:f.treeFolderContent},label:n.default.createElement("div",{className:f.treeFolderText},a.name)},y)}var h=a.path?r[a.path]:{size:"0"};return n.default.createElement(u.default,{nodeId:o,className:f.treeFile,classes:{root:f.treeItemRoot,content:f.treeFileContent},label:n.default.createElement("div",{className:f.treeItemContainer},n.default.createElement("div",{className:f.treeItemText},n.default.createElement(i.default,{color:"textPrimary",component:"div",variant:"body1"},a.name),n.default.createElement(i.default,{color:"textSecondary",component:"div",variant:"caption"},d.default(parseInt(h.size,10))," --"," ",n.default.createElement("span",{className:f.allowSelect},a.path))),n.default.createElement(s.default,{title:n.default.createElement(n.default.Fragment,null,n.default.createElement(i.default,{variant:"body1"},"Download: ",a.path))},n.default.createElement(l.default,{disableRipple:!0,className:f.treeItemIcon,color:"primary",onClick:function(){return g(p,a.path)}},n.default.createElement(c.default,null)))),endIcon:h.icon})}},669:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return{treeItemRoot:{backgroundColor:e.palette.background.paper,"&:nth-child(odd)":{backgroundColor:e.palette.background.default}},treeItemContainer:{display:"flex"},treeItemText:{marginLeft:e.spacing(1),padding:e.spacing(1),flexGrow:1},treeItemIcon:{},treeFile:{},treeFileContent:{borderBottom:"1px solid "+e.palette.grey[100]},treeFolder:{},treeFolderContent:{},treeFolderText:{padding:e.spacing(1)},allowSelect:{"&,& *":{userSelect:"text",cursor:"auto"}}}}},670:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(124);t.default=function(e){return{root:{margin:0,padding:e.spacing(2)},allowSelect:{"&,& *":{userSelect:"text",cursor:"auto"}},scrollPaper:{alignItems:"baseline"},name:{maxWidth:"95%",whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis",marginBottom:e.spacing(1)},titlebar:{backgroundColor:"#444444",color:e.palette.primary.contrastText,display:"flex"},titlebarLeft:{flexGrow:1},header:{display:"flex"},headerLeft:{flex:"1 1 80%"},headerRight:{textAlign:"right",flex:"1 0"},flexGrow:{flexGrow:1},closeButton:{flex:"0 0",color:e.palette.grey[500]},normalIcon:{},documentIcon:{color:r.red[500]},photoIcon:{color:r.purple[500]},TerrainIcon:{color:r.green[500]},metaDisplay:{display:"flex",flexFlow:"wrap"},title:{marginTop:e.spacing(2)},treeItemContainer:{display:"flex"},treeItemText:{marginLeft:e.spacing(1),flexGrow:1},treeItemIcon:{},treeFileContent:{borderBottom:"1px solid "+e.palette.grey[100],padding:e.spacing(1)},treeFolder:{},treeFolderContent:{padding:e.spacing(1)},metaDisplayItem:{flex:"1 1",borderRadius:e.spacing(1),backgroundColor:"#fafafa",margin:e.spacing(1,.5),border:"#1px solid #e7e7e7",padding:e.spacing(1),maxWidth:"25%",minWidth:150,"&>*":{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"}},prodChip:{marginLeft:e.spacing(1),backgroundColor:e.palette.primary.light,color:"white"},popOver:{padding:e.spacing(2)},subHeader:{width:"100%",display:"flex"}}}},671:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(32)),l=r(a(87)),i=r(a(48)),s=r(a(120)),c=r(a(672)),u=a(23).makeStyles((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}}));t.default=function(e){var t=e.title,a=e.signIn,r=u();return n.default.createElement(s.default,{className:r.rootContainer,maxWidth:"md"},n.default.createElement("div",{className:r.spacer}),n.default.createElement(i.default,{className:r.root},n.default.createElement("div",{className:r.logoContainer},n.default.createElement("img",{className:r.logo,src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"})),n.default.createElement(o.default,{paragraph:!0,variant:"body1"},"Welcome to ",n.default.createElement("strong",null,t),". Please click the button below to log in."),n.default.createElement(o.default,{paragraph:!0,variant:"body1"},"If you don't have an account you will be prompted to use your Google account or create a new account using another email address."),n.default.createElement(l.default,{variant:"contained",onClick:a,color:"primary",fullWidth:!0,size:"large",startIcon:n.default.createElement(c.default,null)},"Sign In")),n.default.createElement("div",{className:r.spacer}))}},673:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=a(23),l=r(a(138)),i=r(a(140)),s=r(a(139)),c=r(a(218)),u=r(a(87)),d=r(a(674)),p=r(a(32)),m=o.makeStyles((function(e){return{root:{marginLeft:e.spacing(1)},titlebar:{display:"flex",background:e.palette.error.main,color:e.palette.error.contrastText},closeButton:{},name:{paddingLeft:e.spacing(1),flexGrow:1}}}));t.default=function(e){var t=e.onClose,a=e.program,r=m();return n.default.createElement(l.default,{onClose:t,open:!0,maxWidth:"xs",fullWidth:!0,className:r.root,classes:{}},n.default.createElement(i.default,{disableTypography:!0,className:r.titlebar},n.default.createElement(d.default,{color:"inherit"}),n.default.createElement(p.default,{className:r.name},"Access Denied")),n.default.createElement(s.default,{dividers:!0},a?n.default.createElement(p.default,{variant:"body1",component:"div",color:"inherit"},"You don't have access to the program ",n.default.createElement("strong",null,a.name),".","If you arrived here via URL you will be able to use the URL ","again once you have access."):n.default.createElement(p.default,{variant:"body1",component:"div",color:"inherit"},"This URL is not valid. If you arrived here via URL you will be able to use the URL again once you have access.")),n.default.createElement(c.default,null,n.default.createElement(u.default,{onClick:t,color:"primary"},"Back")))}},675:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(n,o){function l(e){try{s(r.next(e))}catch(t){o(t)}}function i(e){try{s(r.throw(e))}catch(t){o(t)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(l,i)}s((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var a,r,n,o,l={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"===typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;l;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return l.label++,{value:o[1],done:!1};case 5:l.label++,r=o[1],o=[0];continue;case 7:o=l.ops.pop(),l.trys.pop();continue;default:if(!(n=(n=l.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){l=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){l.label=o[1];break}if(6===o[0]&&l.label<n[1]){l.label=n[1],n=o;break}if(n&&l.label<n[2]){l.label=n[2],l.ops.push(o);break}n[2]&&l.ops.pop(),l.trys.pop();continue}o=t.call(e,l)}catch(i){o=[6,i],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=a(0),s=a(13),c=l(a(71)),u=l(a(18)),d=a(180);t.default=function(e,t){var a=i.useState({}),l=a[0],p=a[1],m=i.useRef();m.current=l;var g=i.useCallback((function(a,r){return n(void 0,void 0,void 0,(function(){var n,l,i;return o(this,(function(o){switch(o.label){case 0:if(!t)return[2,Promise.resolve()];o.label=1;case 1:return o.trys.push([1,4,,5]),[4,e.getCurrentToken()];case 2:return n=o.sent(),[4,s.downloadFile(d.endpoints.graphql,n,a.projType,t.machineName,a.id,r)];case 3:l=o.sent();try{l.data&&window.open(l.data.downloadFile.downloadUrl,"_self")}catch(c){u.default.error("DOWNLOAD err",c)}return[3,5];case 4:return i=o.sent(),u.default.error("DOWNLOAD err",i),[3,5];case 5:return[2]}}))}))}),[t,e]),f=i.useCallback((function(a){if(!t)return Promise.resolve();return function n(){return e.getCurrentToken().then((function(e){return s.downloadZipFile(d.endpoints.graphql,e,a.projType,t.machineName,a.id)})).then((function(e){var t;try{e.data&&!e.data.downloadZip.pendingSince?(p(c.default.pickBy(m.current,(function(e,t){return t!==a.id}))),window.open(e.data.downloadZip.downloadUrl,"_self")):(p(r(r({},m.current),((t={})[a.id]=e.data?e.data.downloadZip.pendingSince:Date.now(),t))),setTimeout(n,5e3))}catch(o){u.default.error("DOWNLOAD err",o)}})).catch((function(e){u.default.error("DOWNLOAD err",e)}))}()}),[t,e]);return{pendingZips:m.current,downloadFileFn:g,downloadZipFile:f}}},676:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=a(0),l=a(143),i=a(180),s=n(a(18));t.default=function(e,t){var a=o.useState(),n=a[0],c=a[1],u=l.useParams().programId,d=o.useRef();return d.current=n,o.useEffect((function(){if(u&&!(u.length<0))try{var n=null===e||void 0===e?void 0:e.find((function(e){return e.machineName===u}));!n||d.current&&d.current.machineName===n.machineName||(n.collections=n.collections.map((function(e,t){return r(r({},e),{color:i.mandatoryMetaColors[t%i.mandatoryMetaColors.length]})})),d.current=n,s.default.debug("useProgram",{programId:u,newProg:n,programs:e}),c(n),t&&t(n))}catch(a){return}}),[e,u,t]),n}},680:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=a(0),l=a(143),i=a(13),s=a(180),c=n(a(18));t.default=function(e,t,a,n){void 0===a&&(a=!1),void 0===n&&(n=!1);var u=l.useParams().projectId,d=o.useState({loading:!1,initialized:!1}),p=d[0],m=d[1],g=o.useRef();return g.current=p,o.useEffect((function(){if(!u||u.length<2)m({loading:!1,initialized:!0});else try{if(!t||!u)return;var o=t.machineName,l=!1;setTimeout((function(){l||m(r(r({},g.current),{loading:!0}))}),500),e.getCurrentToken().then((function(e){return i.getProject(s.endpoints.graphql,e,u,o,a,n)})).then((function(e){var t;l=!0,c.default.debug("getProjectById::Response",e),e.data&&e.data.project&&g.current&&g.current.project&&(null===(t=g.current)||void 0===t?void 0:t.project.id)===e.data.project.id||(e.data?m({project:e.data.project,loading:!1,initialized:!0}):m({project:void 0,loading:!1,initialized:!0}))})).catch((function(e){l=!0,m({project:void 0,loading:!1,initialized:!0}),c.default.error("api.getProjectById error",e)}))}catch(d){return}}),[u,t,e]),p}},681:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.hashHistory=void 0;var o=a(0),l=a(143),i=n(a(18)),s=n(a(682)),c=a(75),u=a(71);t.hashHistory=c.createHashHistory();t.default=function(e){var a=l.useParams(),n=o.useState(),c=n[0],d=n[1],p=o.useState(),m=p[0],g=p[1];return o.useEffect((function(){var e,t=(e=a,Object.keys(e).reduce((function(t,a){var n,o=null;try{e[a].length>0&&(o="~"===e[a][0]?JSON.parse(s.default.decode(e[a].slice(1))):e[a])}catch(p){o=e[a]}return r(r({},t),((n={})[a]=o,n))}),{}));u.isEqual(m,t)||(i.default.debug("DEBUG::useQueryParams setDecoded",{newDecoded:t,params:a}),g(t),d(t))}),[a]),{query:m,userQuery:c,setQuery:function(n){var o={};Object.keys(n).forEach((function(e){var t=function(e){if(null===e||u.isUndefined(e))return null;switch(typeof e){case"string":return e;default:return"object"===typeof e&&0===Object.keys(e).length?"":"~"+s.default(JSON.stringify(e))}}(n[e]);a[e]&&a[e]===t||(o[e]=t)})),Object.keys(o).length>0&&(i.default.debug("DEBUG::useQueryParams setQuery",{input:n,params:a,changes:o}),g(r(r({},a),n)),t.hashHistory.replace(l.generatePath(e,r(r({},a),o))))}}}},685:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var n=a(23),o=a(124),l={palette:{primary:{main:o.indigo[500]},secondary:{main:o.orange[600],contrastText:"#FFFFFF"},text:{}}},i=r(r({},l),{palette:r(r({},l.palette),{type:"dark"})});t.default={home:n.createMuiTheme(l),homeDark:n.createMuiTheme(i)}},686:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},704:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(37));t.default=o.default(n.default.createElement(n.default.Fragment,null,n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"5.5",cy:"5.5",r:"2.5"}),n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"5.5",cy:"18.5",r:"2.5"}),n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"12",cy:"12",r:"2.5"}),n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"18.5",cy:"10",r:"2.5"}),n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"17.5",cy:"16.5",r:"2.5"})),"Multidot")},705:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(37));t.default=o.default(n.default.createElement(n.default.Fragment,null,n.default.createElement("path",{d:" M 5.932 4.519 C 5.976 4.353 6 4.179 6 4 C 6 2.896 5.104 2 4 2 C 2.896 2 2 2.896 2 4 L 2 4 L 2 4 L 2 4 L 2 4 C 2 4.74 2.402 5.386 3 5.732 L 3 18.268 C 2.402 18.614 2 19.26 2 20 L 2 20 L 2 20 L 2 20 L 2 20 C 2 21.104 2.896 22 4 22 C 4.74 22 5.386 21.598 5.732 21 L 18.268 21 L 18.268 21 C 18.614 21.598 19.26 22 20 22 C 21.104 22 22 21.104 22 20 C 22 19.26 21.598 18.614 21 18.268 L 21 9.732 L 21 9.732 C 21.598 9.386 22 8.74 22 8 C 22 6.896 21.104 6 20 6 C 18.937 6 18.067 6.831 18.004 7.878 L 13.1 10.33 C 12.784 10.121 12.406 10 12 10 C 11.822 10 11.65 10.023 11.486 10.067 L 5.932 4.519 Z  M 5 18.268 C 5.303 18.444 5.556 18.697 5.732 19 L 18.268 19 C 18.444 18.697 18.697 18.444 19 18.268 L 19 9.732 C 18.966 9.712 18.933 9.692 18.9 9.67 L 13.996 12.122 C 13.933 13.169 13.063 14 12 14 C 10.896 14 10 13.104 10 12 L 10 12 C 10 11.822 10.023 11.649 10.067 11.485 L 5 6.41 L 5 18.268 Z ",fillRule:"evenodd"})),"Polygon")},706:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(37));t.default=o.default(n.default.createElement(n.default.Fragment,null,n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"4",cy:"13",r:"2"}),n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"12",cy:"9",r:"2"}),n.default.createElement("circle",{vectorEffect:"non-scaling-stroke",cx:"20",cy:"13",r:"2"}),n.default.createElement("path",{d:" M 4.45 13.89 L 3.55 14.34 L 2.66 12.55 L 3.55 12.11 L 12 7.88 L 20.45 12.11 L 21.34 12.55 L 20.45 14.34 L 19.55 13.89 L 12 10.12 L 4.45 13.89 Z "})),"Polyline")},707:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(37));t.default=o.default(n.default.createElement(n.default.Fragment,null,n.default.createElement("path",{d:"M22,2l0,20l-20,0l0,-20l20,0Zm-2,2l-16,0l0,16l16,0l0,-16Z"}),n.default.createElement("rect",{x:"5",y:"5",width:"4",height:"4"}),n.default.createElement("rect",{x:"15",y:"5",width:"4",height:"4"}),n.default.createElement("rect",{x:"5",y:"15",width:"4",height:"4"}),n.default.createElement("rect",{x:"10",y:"10",width:"1",height:"5"}),n.default.createElement("rect",{x:"11",y:"10",width:"6",height:"2"}),n.default.createElement("rect",{x:"11",y:"12",width:"2",height:"2"}),n.default.createElement("rect",{x:"13",y:"7",width:"1",height:"2"}),n.default.createElement("rect",{x:"14",y:"9",width:"1",height:"1"}),n.default.createElement("rect",{x:"8",y:"10",width:"1",height:"4"}),n.default.createElement("rect",{x:"7",y:"11",width:"1",height:"3"}),n.default.createElement("rect",{x:"9",y:"11",width:"1",height:"1"}),n.default.createElement("rect",{x:"10",y:"6",width:"2",height:"3"}),n.default.createElement("rect",{x:"12",y:"7",width:"1",height:"1"}),n.default.createElement("rect",{x:"15",y:"14",width:"2",height:"4"}),n.default.createElement("rect",{x:"14",y:"14",width:"1",height:"1"}),n.default.createElement("rect",{x:"17",y:"15",width:"2",height:"2"}),n.default.createElement("rect",{x:"11",y:"16",width:"1",height:"3"}),n.default.createElement("rect",{x:"12",y:"15",width:"2",height:"2"}),n.default.createElement("rect",{x:"10",y:"18",width:"1",height:"1"})),"QRCode")},708:function(e,t,a){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var n=r(a(0)),o=r(a(37));t.default=o.default(n.default.createElement(n.default.Fragment,null,n.default.createElement("g",null,n.default.createElement("g",{transform:"matrix(1,0,0,1,-1.77636e-15,3.97768)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,0,11.9777)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,8,4)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,8,12)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,4,-0.0223232)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,4,7.97768)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,12,0)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"})),n.default.createElement("g",{transform:"matrix(1,0,0,1,12,8)"},n.default.createElement("rect",{x:"4",y:"4.022",width:"4",height:"3.978"}))),n.default.createElement("g",{id:"Raster"},n.default.createElement("path",{d:"M21,5.432C21,4.09 19.91,3 18.568,3L5.432,3C4.09,3 3,4.09 3,5.432L3,18.568C3,19.91 4.09,21 5.432,21L18.568,21C19.91,21 21,19.91 21,18.568L21,5.432Z",style:{fillOpacity:0}}),n.default.createElement("path",{d:"M22,5.432C22,3.538 20.462,2 18.568,2L5.432,2C3.538,2 2,3.538 2,5.432L2,18.568C2,20.462 3.538,22 5.432,22L18.568,22C20.462,22 22,20.462 22,18.568L22,5.432ZM20,5.432L20,18.568C20,19.358 19.358,20 18.568,20C18.568,20 5.432,20 5.432,20C4.642,20 4,19.358 4,18.568C4,18.568 4,5.432 4,5.432C4,4.642 4.642,4 5.432,4C5.432,4 18.568,4 18.568,4C19.358,4 20,4.642 20,5.432Z"}))),"Multidot")},709:function(e,t,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(a(0)),l=a(13),i=a(23),s=n(a(460)),c=n(a(710)),u=a(126),d=i.makeStyles((function(){return{root:{}}}));t.default=function(e){var t=e.layerType,a=e.iconProps,n=e.className,i=d(),p=u.Multidot;switch(t){case l.ProjectTreeLayerTypes.POINT:p=u.Multidot;break;case l.ProjectTreeLayerTypes.LINE:p=u.Polyline;break;case l.ProjectTreeLayerTypes.POLYGON:p=u.Polygon;break;case l.ProjectTreeLayerTypes.RASTER:p=u.Raster;break;case l.ProjectTreeLayerTypes.FILE:p=s.default;break;case l.ProjectTreeLayerTypes.REPORT:p=c.default}return o.default.createElement(p,r({className:n||i.root},a))}},756:function(e,t){},758:function(e,t){},786:function(e,t){},787:function(e,t){},792:function(e,t){},794:function(e,t){},801:function(e,t){},820:function(e,t){},864:function(e,t,a){},869:function(e,t,a){"use strict";a.r(t);var r=a(0),n=a.n(r),o=a(26),l=a.n(o),i=a(15),s=a(17),c=a(44),u=a(18),d=a.n(u),p=a(927),m=a(89),g=a(34),f=a(6),y=function(e){var t=e.title,a=e.children,r=e.history,n=e.signOut,o=e.containerProps;return Object(f.jsx)(p.a,{theme:g.themes.home,children:Object(f.jsx)(m.a,{containerProps:Object(i.a)({maxWidth:"md"},o),noScroll:!0,fullWidth:!0,topbar:Object(f.jsx)(g.Topbar,{history:r,title:t,signOutHandler:n,shareUrl:window.location.href}),children:Object(f.jsx)(f.Fragment,{children:a})})})},h=a(444),b=a(91),x=function(e){var t=e.title;return Object(f.jsx)(m.b,{logoSVG:Object(f.jsx)(h.a,{size:"7rem",thickness:7}),status:Object(f.jsx)(b.a,{variant:"h5",component:"div",children:t||"Loading..."}),containerProps:{maxWidth:"xl",style:{position:"absolute",zIndex:1e3,top:0,left:0,width:"100%",height:"100%",background:"#FFFFFF77"}}})},w=a(13),j=a(11),v=a(29),S=a(158),k=a(161),O=a(160),_=a(159),z=a(439),T=a(440),E=a(441),P=a(442),C=a(548),I=a(549),N=a(550),L=a(939),R=a(940),D=a(941),A=[{id:"SATELLITE",title:"Satellite Imagery",toolTip:"Satellite Imagery",Icon:L.a,color:"green",style:C},{id:"STREET",title:"Street Map",toolTip:"Street Map",Icon:R.a,color:"blue",style:I},{id:"HILLSHADE",title:"Hillshade",toolTip:"Hillshade",Icon:D.a,color:"blue",style:N}],U=Object({NODE_ENV:"production",PUBLIC_URL:"/webrave-staging",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_VERSION:"0.1.14",REACT_APP_MAPBOX_TOKEN:"pk.eyJ1Ijoibm9ydGhhcnJvd3Jlc2VhcmNoIiwiYSI6ImNrbDhjN25hcTIxZnYyb2xjOXZzaGxoMDcifQ.JlXGE_yO53x3iVlUb4MCLg",REACT_APP_GRAPHQL:"https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api",REACT_APP_WAREHOUSE_URL:"https://northarrowresearchlabs.github.io/riverscapes-staging/"}).REACT_APP_DOMAIN;d.a.debug("config: ",{domain:U});var M={graphql:"".concat("https://w3sczcn3l5.execute-api.us-west-2.amazonaws.com/staging/api")},F="https://northarrowresearchlabs.github.io/riverscapes-staging/",B={appName:"Riverscapes Project Viewer (webRAVE)",zoomRange:[2,18],worldBounds:[-180,-90,180,90],baseLayer:A[0],drawerOpen:!0,init:!1,minFilterTextLength:3,maxMapLayers:5,retryDelayS:2,refreshDelayS:20},W=(S.a,k.a,O.a,_.a,z.a,T.a,E.a,P.a,[S.a,k.a,O.a,_.a,z.a,T.a,E.a,P.a]),$=new URL("/webrave-staging".endsWith("/")?"/webrave-staging":"/webrave-staging/",window.location.origin);console.log("RedirectUrl",{redirectUrl:$,publicUrl:"/webrave-staging"});var G=a(352);function V(e,t){var a=Object(G.decomposeColor)(e);return"rgb"!==a.type&&"hsl"!==a.type||(a.type+="a"),a.values[3]=t,Object(G.recomposeColor)(a)}function H(e,t){var a=B.worldBounds;return t||e?t&&!e?t:e&&!t?e:e&&t?[Math.max(B.worldBounds[0],Math.min(t[0],e[0])),Math.max(B.worldBounds[1],Math.min(t[1],e[1])),Math.min(B.worldBounds[2],Math.max(t[2],e[2])),Math.min(B.worldBounds[3],Math.max(t[3],e[3]))]:a:a}var Z=[w.ProjectTreeLayerTypes.POINT,w.ProjectTreeLayerTypes.LINE,w.ProjectTreeLayerTypes.POLYGON,w.ProjectTreeLayerTypes.TIN,w.ProjectTreeLayerTypes.RASTER];var J=Object(j.b)({key:"project",default:null}),q=Object(j.b)({key:"auth",default:null}),X=Object(j.b)({key:"drawerOpen",default:B.drawerOpen}),K=Object(j.b)({key:"map/activeLayerIds",default:[]}),Q=Object(j.e)({key:"activeTreeLeaves",get:function(e){var t=e.get,a=t(J),r=t(K);return(null===a||void 0===a?void 0:a.tree.leaves.filter((function(e){return r.indexOf(e.id)>-1})))||[]}}),Y=Object(j.e)({key:"map/activeLeavesSorted",get:function(e){return function(e){var t=Object(v.a)(e);return t.sort((function(e,t){return e.layerType!==t.layerType?Z.indexOf(e.layerType)-Z.indexOf(t.layerType):e.id-t.id})),t}((0,e.get)(Q))}}),ee=Object(j.e)({key:"project/mapLayerLeaves",get:function(e){var t=(0,e.get)(J);return t?t.tree.leaves.filter((function(e){var t=e.layerType,a=e.layerPath,r=e.nodeExists;return w.ProjectTreeLayerTileTypes.indexOf(t)>-1&&r&&a&&a.length>0})):[]}}),te=Object(j.e)({key:"project/layerPaths",get:function(e){return(0,e.get)(ee).reduce((function(e,t){return!t.layerPath||e.indexOf(t.layerPath)>-1?e:[].concat(Object(v.a)(e),[t.layerPath])}),[])}}),ae=Object(j.e)({key:"symbology/uniqueSymb",get:function(e){return(0,e.get)(ee).reduce((function(e,t){return!t.symbology||e.indexOf(t.symbology)>-1?e:[].concat(Object(v.a)(e),[t.symbology])}),[])}}),re=a(72),ne=Object(j.b)({key:"treeFilterText",default:""}),oe=Object(j.e)({key:"projectLeafHierarchy",get:function(e){var t=(0,e.get)(J);return t?t.tree.leaves.reduce((function(e,a){return Object(i.a)(Object(i.a)({},e),{},Object(re.a)({},a.id,function(e,t){for(var a=t.pid,r=[],n=[];a>-1&&r.length<e.tree.branches.length;){var o=e.tree.branches.find((function(e){return e.bid===a}));o&&r.indexOf(o.bid)<0?(r.push(o.bid),n.push(o.label.toLowerCase().trim()),a=o.pid):a=-1}return r.map((function(e,t){return[e,n[t]]}))}(t,a)))}),{}):{}}}),le=Object(j.b)({key:"tree/treeInfoPaneId",default:null}),ie=Object(j.b)({key:"tree/treeInfoPaneOpen",default:!1}),se=Object(j.f)({key:"treeLeafSelectorFamily",get:function(e){return function(t){var a=(0,t.get)(J);if(!a)throw new Error("treeLeafSelectorFamily: No project found");var r=a.tree.leaves.find((function(t){return t.id===e}));if(!r)throw new Error("treeLeafSelectorFamily: No leaf found");return r}}}),ce=Object(j.b)({key:"tree/selectedIds",default:[]}),ue=Object(j.e)({key:"tree/selectedIdsSelect",get:function(e){var t,a=(0,e.get)(ce);return{branches:(t=a).filter((function(e){return e.indexOf("b-")>-1})).map((function(e){return parseInt(e.replace("b-",""),10)})),leaves:t.filter((function(e){return e.indexOf("l-")>-1})).map((function(e){return parseInt(e.replace("l-",""),10)}))}}}),de=Object(j.e)({key:"projectHiddenNodes",get:function(e){var t=e.get,a=t(J),r={branches:[],leaves:[]};if(!a)return r;var n=t(oe),o=t(ne).toLowerCase().trim();if(o.length<B.minFilterTextLength)return r;var l=o.split(" ").filter((function(e){return e.length>0}));if(l.length<1)return r;var i=a.tree.leaves.filter((function(e){var t=n[e.id];return l.every((function(a){return e.label.toLowerCase().indexOf(a)>-1||t.find((function(e){return Object(s.a)(e,2)[1].indexOf(a)>-1}))}))})).map((function(e){return e.id})),c=Array.from(new Set(i.reduce((function(e,t){return[].concat(Object(v.a)(e),Object(v.a)(n[t].map((function(e){return Object(s.a)(e,1)[0]}))))}),[])));return r.leaves=a.tree.leaves.map((function(e){return e.id})).filter((function(e){return i.indexOf(e)<0})),r.branches=a.tree.branches.map((function(e){return e.bid})).filter((function(e){return c.indexOf(e)<0})),r}}),pe=Object(j.f)({key:"treeLeafStateFamily",get:function(e){return function(t){var a,r=t.get,n=r(Ie(e)),o=r(de).leaves.indexOf(e)>-1,l=r(K).indexOf(e)>-1,i=n.leaf.layerType===w.ProjectTreeLayerTypes.REPORT&&n.tileStatus===w.TilingStatus.SUCCESS&&(null===(a=n.tiles)||void 0===a?void 0:a.url)+"index.html";return{leaf:n.leaf,tilesState:n.tileStatus,treeAllowed:!0,reportUrl:i||void 0,renderable:n.renderable,hidden:o,active:l}}}}),me=Object(j.e)({key:"tree/rootBranchId",get:function(e){var t=(0,e.get)(J),a=null===t||void 0===t?void 0:t.tree.branches.find((function(e){return-1===e.pid}));return a?a.bid:null}}),ge=Object(j.f)({key:"tree/branches",get:function(e){return function(t){var a=(0,t.get)(J),r=null===a||void 0===a?void 0:a.tree.branches.find((function(t){return t.bid===e}));if(!a)throw new Error("treeBranchSelectorFamily: No project found");if(!r)throw new Error("treeBranchSelectorFamily: No branch found");return{branch:r,children:{branches:a.tree.branches.filter((function(t){return t.pid===e})).map((function(e){return e.bid})),leaves:a.tree.leaves.filter((function(t){return t.pid===e})).map((function(e){return e.id}))}}}}}),fe=Object(j.f)({key:"tree/branchState",get:function(e){return function(t){var a=t.get,r=a(ue),n=a(ge(e)),o=a(de),l=Boolean(a(be).indexOf(e)>-1),i=Boolean(r.branches.indexOf(e)>-1);return{branch:n,hidden:o.branches.indexOf(e)>-1,selected:i,collapsed:l}}}}),ye=Object(j.b)({key:"tree/contextMenu",default:null}),he=Object(j.b)({key:"tree/expandedIds",default:[]}),be=Object(j.e)({key:"tree/expandedIdsSelect",get:function(e){return(0,e.get)(he).filter((function(e){return e.indexOf("b-")>-1})).map((function(e){return parseInt(e.replace("b-",""),10)}))}}),xe=Object(j.e)({key:"tree/treeAllIds",get:function(e){var t=(0,e.get)(J);return t?[].concat(Object(v.a)(t.tree.branches.map((function(e){var t=e.bid;return"b-".concat(t)}))),Object(v.a)(t.tree.leaves.map((function(e){var t=e.id;return"l-".concat(t)})))):[]}}),we=a(33),je=a.n(we),ve=a(88),Se=a(551),ke=new(a.n(Se).a)({maxConcurrent:5}),Oe=Object(j.c)({key:"tiles/tileReq",default:0}),_e=Object(j.c)({key:"tiles/tileRetries",default:0}),ze=(Object(j.b)({key:"tiles/usableIds",default:[]}),Object(j.f)({key:"tiles/tiles",get:function(e){return function(){var t=Object(ve.a)(je.a.mark((function t(a){var r,n,o,l,s,c;return je.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if((r=a.get)(Oe(e)),r(_e(e)),n=r(q),o=r(J),l={status:w.TilingStatus.UNKNOWN},o&&n&&e){t.next=8;break}return t.abrupt("return",l);case 8:return t.prev=8,t.next=11,ke.schedule({priority:5},(function(){return n.getCurrentToken().then((function(t){return Object(w.getLayerTiles)(M.graphql,t,o.projType,null===o||void 0===o?void 0:o.program,null===o||void 0===o?void 0:o.id,e)}))}));case 11:(c=t.sent)&&!c.errors&&c.data||(l.status=w.TilingStatus.FETCH_ERROR,c.errors&&c.errors.length>0&&(l.error=c.errors.map((function(e){return JSON.stringify(e)})).join(", \n"))),l=Object(i.a)(Object(i.a)({},l),null===(s=c.data)||void 0===s?void 0:s.getLayerTiles),t.next=20;break;case 16:t.prev=16,t.t0=t.catch(8),l.status=w.TilingStatus.FETCH_ERROR,l.error=t.t0.toString();case 20:return t.abrupt("return",l);case 21:case"end":return t.stop()}}),t,null,[[8,16]])})));return function(e){return t.apply(this,arguments)}}()}})),Te=(Object(j.e)({key:"symbology/activeSymbologies",get:function(e){return(0,e.get)(Q).reduce((function(e,t){return!t.symbology||e.indexOf(t.symbology)>-1?e:[].concat(Object(v.a)(e),[t.symbology])}),[])}}),Object(j.f)({key:"symbology/symbology",get:function(e){return function(){var t=Object(ve.a)(je.a.mark((function t(a){var r,n,o,l,i,s;return je.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=a.get,o=n(J),l=n(q),o&&l&&e){t.next=5;break}return t.abrupt("return",null);case 5:return i={name:e,status:w.SymbologyStatus.UNKNOWN},t.next=8,ke.schedule({priority:5},(function(){return l.getCurrentToken().then((function(t){return Object(w.getWebVectorSymbology)(M.graphql,t,o.projType,e)})).catch((function(e){d.a.debug("symbologySelectorFamily",e)}))}));case 8:if((s=t.sent)&&!s.errors){t.next=13;break}return i.status=w.SymbologyStatus.ERROR,i.error="Error downloading symbology",t.abrupt("return",i);case 13:return t.abrupt("return",(null===(r=s.data)||void 0===r?void 0:r.getWebVectorSymbology)||i);case 14:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()}})),Ee=Object(j.b)({key:"map/assignedColors",default:[]}),Pe=Object(j.c)({key:"map/leafRandomCol",default:null}),Ce=Object(j.e)({key:"map/selectNextColor",get:function(e){for(var t=(0,e.get)(Ee),a=0;a<W.length;a++)if(t.indexOf(a)<0)return a;return 0}}),Ie=Object(j.f)({key:"map/layers",get:function(e){return function(t){var a,r=t.get,n=r(se(e)),o=r(ue),l=r(Object(j.d)(ze(n.layerPath))),i=r(Object(j.d)(Te(n.symbology))),s=r(K).indexOf(e)>-1,c=Boolean(o.leaves&&o.leaves.indexOf(e)>-1),u="hasValue"!==l.state?w.TilingStatus.FETCHING:l.contents.status;n.layerType===w.ProjectTreeLayerTypes.FILE&&w.TilingStatus.SUCCESS;var d="hasValue"!==i.state?w.SymbologyStatus.FETCHING:(null===(a=i.contents)||void 0===a?void 0:a.status)||w.SymbologyStatus.NOT_APPLICABLE,p={leaf:n,treeSelected:c,legendActive:s,renderable:u===w.TilingStatus.SUCCESS&&d!==w.SymbologyStatus.FETCHING,tileStatus:u,symbologyStatus:d};return"hasValue"===l.state&&(p.tiles=l.contents),"hasValue"===i.state&&(p.symbology=i.contents),p}}}),Ne=Object(j.e)({key:"map/viewProjLeafIds",get:function(e){var t=(0,e.get)(J);return t&&t.tree.views?t.tree.views.reduce((function(e,a){var r=a.layers.reduce((function(e,a){var r=t.tree.leaves.find((function(e){var t=e.blLayerId;return t&&t===a.id}));return r?[].concat(Object(v.a)(e),[r.id]):e}),[]);return Object(i.a)(Object(i.a)({},e),{},Object(re.a)({},a.id,r))}),{}):{}}}),Le=Object(j.b)({key:"map/baseLayer",default:B.baseLayer}),Re=(Object(j.b)({key:"map/viewport",default:null}),Object(j.b)({key:"map/mapError",default:""})),De=Object(j.b)({key:"map/mapLoading",default:!1}),Ae=Object(j.e)({key:"map/renderableMapLayers",get:function(e){var t=e.get,a=t(Y).map((function(e){var a=e.id;return t(Ie(a))})).filter((function(e){return e.tileStatus===w.TilingStatus.SUCCESS})),r=a.map((function(e){var a=e.leaf.id;return t(Pe(a))}));return a.reduce((function(e,t,a){var n=t.leaf.id,o=Object(i.a)(Object(i.a)({},t),{},{randomColor:r[a],lid:n,idStr:"mapLayer-".concat(n)});return e.length>0&&(o.beforeId=e[e.length-1].idStr),[].concat(Object(v.a)(e),[o])}),[])}}),Ue=Object(j.b)({key:"map/view",default:null}),Me=Object(j.b)({key:"map/bounds",default:null}),Fe=Object(j.b)({key:"map/zoomBounds",default:[B.zoomRange[0],B.zoomRange[1]]}),Be=Object(j.e)({key:"bounds",get:function(e){var t=e.get;return{zoom:t(Fe),bounds:t(Me)||[-180,-90,180,90]}}}),We=function(){var e=Object(j.h)(Ue),t=Object(s.a)(e,2),a=t[0],r=t[1],n=Object(j.i)(Ne),o=Object(j.i)(J),l=Object(j.k)(K),i=function(e){null!==e&&a!==e&&n[e]&&(r(e),l(n[e]))};return{setView:i,resetView:function(){o&&o.tree.defaultView&&i(o.tree.defaultView)}}},$e=function(e,t){var a=Object(j.h)(J),n=Object(s.a)(a,2),o=n[0],l=n[1],i=Object(j.k)(q),c=Object(j.i)(ae),u=Object(j.i)(te),d=Object(j.k)(he),p=We().resetView;Object(r.useEffect)((function(){return l(t||null)}),[t]),Object(r.useEffect)((function(){return i(e||null)}),[e]);var m=Object(j.g)((function(e){var t=e.snapshot;return function(e){t.getLoadable(ze(e))}})),g=Object(j.g)((function(e){var t=e.snapshot;return function(e){t.getLoadable(Te(e))}}));Object(r.useEffect)((function(){o?(p(),d(o.tree.branches.filter((function(e){return!e.collapsed})).map((function(e){return"b-".concat(e.bid)})))):d([])}),[o]),Object(r.useEffect)((function(){c.map(g)}),[c]),Object(r.useEffect)((function(){u.map(m)}),[u])},Ge=a(198),Ve=a(411),He=a(450),Ze=a(410),Je=Object(Ze.a)((function(e){return{rootContainer:{height:"100%",display:"flex",flexDirection:"column"},spacer:{flexGrow:1},root:{padding:e.spacing(2,4,4,4)},buttonContainer:{textAlign:"center"},logoContainer:{padding:e.spacing(2),textAlign:"center"},logo:{}}})),qe=function(){var e=Je();return Object(f.jsxs)(Ve.a,{className:e.rootContainer,maxWidth:"sm",children:[Object(f.jsx)("div",{className:e.spacer}),Object(f.jsxs)(Ge.a,{className:e.root,children:[Object(f.jsx)("div",{className:e.logoContainer,children:Object(f.jsx)("img",{className:e.logo,src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"})}),Object(f.jsx)(b.a,{paragraph:!0,variant:"body1",children:"The project you are looking for could not be found."}),Object(f.jsxs)(b.a,{paragraph:!0,variant:"body1",children:["Please go back to the ",Object(f.jsx)(He.a,{href:"".concat(F,"/#/"),children:"Riverscapes Data Warehouse"})," and choose a new project"]}),Object(f.jsx)("div",{className:e.buttonContainer,children:Object(f.jsx)(g.WarehouseButton,{title:"Warehouse",href:"".concat(F,"/#/"),stay:!0})})]}),Object(f.jsx)("div",{className:e.spacer})]})},Xe=a(571),Ke=Object(Ze.a)((function(){return{root:{height:"100%",position:"relative"},splitPane:{},resizer:{background:"#000",opacity:.2,zIndex:1,boxSizing:"border-box",backgroundClip:"padding-box","&:hover":{transition:"all 2s ease"},"&.horizontal":{height:11,margin:"-5px 0",borderTop:"5px solid rgba(255, 255, 255, 0)",borderBottom:"5px solid rgba(255, 255, 255, 0)",cursor:"row-resize",width:"100%","&:hover":{borderTop:"5px solid rgba(0, 0, 0, 0.5)",borderBottom:"5px solid rgba(0, 0, 0, 0.5)"}},"&.vertical":{width:11,margin:"0 -5px",borderLeft:"5px solid rgba(255, 255, 255, 0)",borderRight:"5px solid rgba(255, 255, 255, 0)",cursor:"col-resize",height:"100%","&:hover":{borderLeft:"5px solid rgba(0, 0, 0, 0.5)",borderRight:"5px solid rgba(0, 0, 0, 0.5)"}},"&.disabled":{cursor:"not-allowed","&:hover":{borderColor:"transparent"}}}}})),Qe=function(e){var t=e.open,a=e.child1,r=e.child2,n=e.split,o=e.primary,l=e.defaultSize,i=e.minSize,s=e.maxSize,c=Ke();return t?Object(f.jsx)("div",{className:c.root,children:Object(f.jsxs)(Xe.a,{className:c.splitPane,resizerClassName:c.resizer,split:n,primary:o,defaultSize:l,minSize:i,maxSize:s,pane1Style:{overflow:"hidden"},pane2Style:{overflow:"hidden"},children:[a,r]})}):Object(f.jsx)("div",{className:c.root,children:o&&"first"!==o?r:a})},Ye=a(944),et=a(932),tt=Object(Ze.a)((function(e){return{root:{height:"100%",display:"flex",flexDirection:"column",overflow:"hidden"},appBar:{flex:"0 0"},tabs:{},tabContents:{position:"relative",overflow:"hidden",flexGrow:1},closeButton:{zIndex:1e3,background:e.palette.secondary.main,color:e.palette.secondary.contrastText,position:"absolute",top:0,right:0}}})),at=function(e){var t=e.tabs,a=tt(),n=Object(r.useState)(0),o=Object(s.a)(n,2),l=o[0],i=o[1];return Object(f.jsxs)("div",{className:a.root,children:[Object(f.jsx)(Ye.a,{value:l,className:a.tabs,onChange:function(e,t){i(t)},indicatorColor:"primary",textColor:"primary",variant:"fullWidth","aria-label":"full width tabs example",children:t.map((function(e,t){return Object(f.jsx)(et.a,{label:e.label,value:t},"tab-".concat(t))}))}),t.map((function(e,t){var r=e.value;return Object(f.jsx)("div",{className:a.tabContents,style:{display:t===l?"block":"none"},children:r},"tab-".concat(t))}))]})},rt=function(){var e=Object(j.h)(Ue),t=Object(s.a)(e,2),a=t[0],r=t[1],n=Object(j.h)(K),o=Object(s.a)(n,2),l=o[0],i=o[1],c=Object(j.h)(Re),u=Object(s.a)(c,2),d=u[0],p=u[1],m=function(e){d&&p(""),null!==a&&r(null),i(l.filter((function(t){return t!==e})))},g=function(e){l.length!==B.maxMapLayers?(d&&p(""),null!==a&&r(null),i(Array.from(new Set([].concat(Object(v.a)(l),[e]))))):p("Only ".concat(B.maxMapLayers," layers are allowed at a time."))};return{removeLayer:m,addLayer:g,toggleLayer:function(e){l.indexOf(e)>-1?m(e):g(e)}}},nt=a(464),ot=a(552),lt=Object(Ze.a)((function(){return{normal:{fontStyle:"italic",opacity:.8},highlighted:{fontWeight:"bold"}}})),it=function(e){var t=e.text,a=e.query,r=lt();if(!a||0===a.length)return Object(f.jsx)("span",{children:t});var n=a.split(" ").map((function(e){return e.trim()})).filter((function(e){return e&&e.length>0})).join(" "),o=Object(ot.a)({text:t,query:n});return Object(f.jsx)("span",{children:o.map((function(e,t){return Object(f.jsx)("span",{className:e.match?r.highlighted:r.normal,children:e.text},"textMatch-".concat(t))}))})},st=a(126),ct=a(3),ut=Object(Ze.a)((function(e){return{leaf:{cursor:"context-menu",marginLeft:e.spacing(2)},active:{fontWeight:"bold"},treeLeafLabel:{display:"flex"},innerLabel:{flexGrow:0},spacer:{flexGrow:1},metaIcon:{margin:e.spacing(.25),opacity:.2,fontSize:e.spacing(2),lineHeight:"1rem"},loadingSpinner:{color:e.palette.text.secondary},tileStatus:{flexGrow:0,fontStyle:"italic"},leafQUEUED:{color:"#999999",fontStyle:"italic"},leafCREATING:{color:"orange"},leafTILING_ERROR:{color:"red",fontStyle:"italic"},leafFETCH_ERROR:{color:"red",fontStyle:"italic"},leafNOT_FOUND:{color:"red",fontStyle:"italic"},leafINDEX_NOT_FOUND:{color:"red",fontStyle:"italic"},leafLAYER_NOT_FOUND:{color:"red",fontStyle:"italic"},leafUNKNOWN:{color:e.palette.text.secondary,fontStyle:"italic"},leafFETCHING:{color:e.palette.text.secondary,fontStyle:"italic"},leafSUCCESS:{}}})),dt=function(e){var t=e.id,a=e.layerType,r=e.label,n=e.active,o=e.hidden,l=e.searchText,i=e.tilesState,s=e.handleContext,c=e.handleClick,u=e.handleDoubleClick,d=ut(),p=null;switch(i){case w.TilingStatus.SUCCESS:break;case w.TilingStatus.QUEUED:p="Queued...";break;case w.TilingStatus.CREATING:p="Building...";break;case w.TilingStatus.TILING_ERROR:p="Tile Error";break;case w.TilingStatus.INDEX_NOT_FOUND:p="Index Error";break;case w.TilingStatus.LAYER_NOT_FOUND:p="Layer Missing";break;case w.TilingStatus.FETCH_ERROR:p="Fetch Error";break;case w.TilingStatus.UNKNOWN:case w.TilingStatus.FETCHING:p=Object(f.jsx)(h.a,{className:d.loadingSpinner,color:"inherit",thickness:3,size:15})}return Object(f.jsx)(nt.a,{nodeId:"l-".concat(t),className:Object(ct.default)(d.leaf,i&&d["leaf".concat(i)]),hidden:o,onClick:function(){return c(t)},onDoubleClick:function(){return u(t)},label:Object(f.jsxs)("div",{className:d.treeLeafLabel,children:[Object(f.jsx)(b.a,{variant:"body2",color:"inherit",className:Object(ct.default)(d.innerLabel,n&&d.active),children:Object(f.jsx)(it,{text:r,query:l})}),Object(f.jsx)("div",{className:d.spacer}),p&&Object(f.jsx)(b.a,{variant:"caption",color:"inherit",className:Object(ct.default)(d.innerLabel,n&&d.active),children:p})]}),onContextMenu:function(e){e.preventDefault(),s(t,e.clientX-2,e.clientY-4)},icon:Object(f.jsx)(st.LayerIcon,{layerType:a})})},pt=Object(Ze.a)((function(e){return{branch:{marginTop:e.spacing(.5)},iconContainer:{width:e.spacing(4)},label:{}}})),mt=function(e){var t=e.id,a=e.hidden,r=e.label,n=e.searchText,o=e.children,l=pt();return Object(f.jsx)(nt.a,{nodeId:"b-".concat(t),className:Object(ct.default)(l.branch),classes:{label:l.label,iconContainer:l.iconContainer},onDoubleClick:function(e){e.preventDefault(),e.stopPropagation()},onContextMenu:function(e){e.preventDefault(),e.stopPropagation()},hidden:a,label:Object(f.jsx)(b.a,{variant:"body1",children:Object(f.jsx)(it,{text:r,query:n})}),children:o})},gt=a(462),ft=a(453),yt=a(930),ht=a(347),bt=a.n(ht),xt=a(348),wt=a.n(xt),jt=a(555),vt=a.n(jt),St=a(554),kt=a.n(St),Ot=a(553),_t=a.n(Ot),zt=a(71),Tt=a.n(zt),Et=Object(Ze.a)((function(e){return{container:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},folderIcon:{color:e.palette.secondary.main},tree:{flexGrow:1,overflow:"scroll",paddingBottom:e.spacing(5)},searchBox:{flexGrow:0,padding:e.spacing(.5)},searchBoxInput:{padding:e.spacing(.75,.5)}}})),Pt=function(e){var t=e.lyrInfoOpen,a=e.setSearchText,r=e.expanded,n=e.ctxMenu,o=e.lyrInfo,l=e.selected,i=e.setExpanded,s=e.setSelected,c=e.children,u=Et(),d=Object(zt.debounce)((function(e){return a(e)}),100);return Object(f.jsx)(Qe,{open:t,split:"horizontal",primary:"first",defaultSize:"60%",maxSize:"80%",minSize:"30%",child1:Object(f.jsxs)("div",{className:u.container,children:[Object(f.jsx)(ft.a,{fullWidth:!0,className:u.searchBox,placeholder:"Filter Project Layers...",variant:"outlined",onChange:function(e){d(e.target.value.toLowerCase().trim())},InputProps:{classes:{input:u.searchBoxInput},startAdornment:Object(f.jsx)(yt.a,{position:"start",children:Object(f.jsx)(_t.a,{})})}}),Object(f.jsx)(gt.a,{className:u.tree,defaultCollapseIcon:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(bt.a,{}),Object(f.jsx)(kt.a,{className:u.folderIcon})]}),defaultExpandIcon:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(wt.a,{}),Object(f.jsx)(vt.a,{className:u.folderIcon})]}),onNodeToggle:function(e,t){i(t)},onNodeSelect:function(e,t){s(Array.isArray(t)?t:[t])},selected:l,expanded:r,children:c}),n]}),child2:o||Object(f.jsx)("div",{})})},Ct=a(229),It=a(415),Nt=Object(Ze.a)((function(e){return{root:{},item:{},error:{color:e.palette.error.main}}})),Lt=function(e){var t=e.open,a=e.position,r=e.onClose,n=e.menuItems,o=Nt();return Object(f.jsx)(Ct.a,{keepMounted:!0,open:t,onClose:r,anchorReference:"anchorPosition",anchorPosition:a,className:o.root,children:n.map((function(e,t){var a=e.label,r=e.handleClick,n=e.disabled,l=e.error;return Object(f.jsx)(It.a,{onClick:r,disabled:n,className:Object(ct.default)(o.item,l&&o.error),children:a},"ctxMenuIt-".concat(t))}))})},Rt=function(e){var t,a=e.ctxState,r=e.onClose,n=Object(j.i)(Ie(a.leafId)),o=Object(j.k)(le),l=Object(j.k)(ie),i=rt(),s=i.addLayer,c=i.removeLayer,u=[];n.leaf.layerType===w.ProjectTreeLayerTypes.REPORT?n.tileStatus===w.TilingStatus.FETCHING||n.tileStatus===w.TilingStatus.QUEUED?u.push({label:"Report queued for upload...",disabled:!0}):u.push({label:"Open Report",disabled:!((null===(t=n.tiles)||void 0===t?void 0:t.url)&&n.tileStatus===w.TilingStatus.SUCCESS),handleClick:function(){var e,t=window.open((null===(e=n.tiles)||void 0===e?void 0:e.url)+"index.html","_blank","noopener,noreferrer");t&&(t.opener=null),r()}}):n.tileStatus===w.TilingStatus.FETCHING||n.symbologyStatus===w.SymbologyStatus.FETCHING?u.push({label:"Loading tile data...",disabled:!0}):(n.legendActive?u.push({label:"Remove from map",handleClick:function(){c(n.leaf.id),r()}}):!n.legendActive&&n.renderable?u.push({label:"Add to map",handleClick:function(){s(n.leaf.id),r()}}):n.tileStatus===w.TilingStatus.QUEUED?u.push({label:"Queued for tiling...",disabled:!0}):n.tileStatus===w.TilingStatus.CREATING?u.push({label:"Currently building tiles...",disabled:!0}):n.tileStatus===w.TilingStatus.TILING_ERROR?u.push({label:"Tiles did not build",disabled:!0,error:!0}):n.tileStatus===w.TilingStatus.INDEX_NOT_FOUND?u.push({label:"Error fetching tile info",disabled:!0,error:!0}):n.tileStatus===w.TilingStatus.LAYER_NOT_FOUND?u.push({label:"The original GIS layer is missing",disabled:!0,error:!0}):n.tileStatus===w.TilingStatus.FETCH_ERROR&&u.push({label:"Error fetching tile info",disabled:!0,error:!0}),u.push({label:"Layer Information",handleClick:function(){o(a.leafId),l(!0),r()}}));return Object(f.jsx)(Lt,{open:Boolean(a),position:a.position,onClose:r,menuItems:u})},Dt=a(413),At=a(454),Ut=a(416),Mt=a(230),Ft=a.n(Mt),Bt=a(933),Wt=a(934),$t=a(935),Gt=a(936),Vt=a(937),Ht=a(56),Zt=Object(Ze.a)((function(e){return{root:{padding:e.spacing(1)},table:{},section:{marginBottom:e.spacing(3)},sectionHeader:{borderBottom:"1px solid"},metaKey:{fontWeight:"bold"},metaValue:{color:e.palette.text.secondary}}})),Jt={datecreated:function(e){var t=Ht.dates.HTML5InputToTimestamp(e);return t>0?"".concat(Ht.dates.formatDate(t,"lll")," (").concat(Ht.dates.formatDateAgo(t),")"):"unknown"}},qt=function(e,t){var a=e.toLowerCase();return Object.keys(Jt).indexOf(a)>-1?Jt[a](t):t},Xt=function(e){var t=e.title,a=e.meta,r=Zt();return 0===Object.keys(a).length?null:Object(f.jsxs)("div",{className:r.section,children:[Object(f.jsx)(b.a,{variant:"subtitle1",className:r.sectionHeader,children:t}),Object(f.jsx)(Gt.a,{children:Object(f.jsx)(Bt.a,{className:r.table,size:"small","aria-label":"a dense table",children:Object(f.jsx)(Wt.a,{children:Object.keys(a).map((function(e){return Object(f.jsxs)(Vt.a,{children:[Object(f.jsx)($t.a,{component:"th",scope:"row",className:r.metaKey,children:e}),Object(f.jsx)($t.a,{align:"right",className:r.metaValue,children:qt(e,a[e])})]},e)}))})})})]})},Kt=["_rs_lyr_origin_url"],Qt=Object(Ze.a)((function(e){return{root:{padding:e.spacing(1)},minimal:{},whNote:{padding:e.spacing(2,1)}}}));var Yt=function(e){var t=e.meta,a=e.minimal,r=Qt(),n=function(e){var t=Object.keys(e).filter((function(e){return Kt.indexOf(e)<0})),a=function(a){return t.filter((function(e){return 0===e.indexOf(a)})).reduce((function(t,r){return Object(i.a)(Object(i.a)({},t),{},Object(re.a)({},r.replace(a,""),e[r]))}),{})};return{upstreamWarehouse:a("_rs_wh_"),upstreamProject:a("_rs_prj_"),upstreamLayer:a("_rs_lyr_"),Layer:t.filter((function(e){return 0!==e.indexOf("_rs")})).reduce((function(t,a){return Object(i.a)(Object(i.a)({},t),{},Object(re.a)({},a,e[a]))}),{})}}(t);return Object(f.jsxs)(Ge.a,{className:a?r.minimal:r.root,children:[Object.keys(n.Layer).length>0&&Object(f.jsx)(Xt,{title:"Layer Metadata",meta:n.Layer}),!a&&Object.keys(n.upstreamWarehouse).length>0&&Object(f.jsxs)("div",{className:r.whNote,children:[Object(f.jsxs)(b.a,{variant:"caption",component:"div",children:["This layer was imported from a ",t._rs_prj_projType," project in the Riverscapes warehouse. You can visit the original project using the button below."]}),Object(f.jsx)(g.WarehouseButton,{title:"Original ".concat(t._rs_prj_projType," Project"),href:"".concat(F,"#/").concat(t._rs_wh_program,"/").concat(t._rs_wh_id)})]}),Object.keys(n.upstreamProject).length>0&&Object(f.jsx)(Xt,{title:"Original Project Metadata",meta:n.upstreamProject}),Object.keys(n.upstreamLayer).length>0&&Object(f.jsx)(Xt,{title:"Original Layer Metadata",meta:n.upstreamLayer})]})},ea=a(349),ta=a.n(ea),aa=Object(Ze.a)((function(e){return{root:{padding:e.spacing(1)},sectionHeader:{borderBottom:"1px solid"},table:{},metaKey:{fontWeight:"bold"},metaValue:{color:e.palette.text.secondary}}})),ra=function(e){var t,a,r,n,o=e.tiles,l=aa(),i={Status:o.status,Error:o.error,Started:o?"".concat(Ht.dates.formatDate(o.started,"lll")," (").concat(Ht.dates.formatDateAgo(o.started),")"):"unknown","Last status":o?"".concat(Ht.dates.formatDate(o.lastStatus,"lll")," (").concat(Ht.dates.formatDateAgo(o.lastStatus),")"):"unknown","Creation time":o?"".concat(((o.duration||0)/60).toFixed(0)," minutes"):"unknown","Original Size":o&&o.originFile?ta()(o.originFile.size).format("0.0 b"):"unknown","Relative path":(null===(t=o.rsLayer)||void 0===t?void 0:t.path)||"unknown","Physical path":o?null===(a=o.originFile)||void 0===a?void 0:a.key:"unknown","Modified (origin)":o?"".concat(Ht.dates.formatDate(null===(r=o.originFile)||void 0===r?void 0:r.lastModified,"lll")," (").concat(Ht.dates.formatDateAgo(null===(n=o.originFile)||void 0===n?void 0:n.lastModified),")"):"unknown"};return Object(f.jsx)(Ge.a,{className:l.root,children:Object(f.jsx)(Xt,{title:"Webtile information",meta:i})})},na=Object(Ze.a)((function(e){return{root:{height:"100%",overflow:"hidden",display:"flex",flexDirection:"column"},toolbar:{flex:"0 0 ",padding:e.spacing(0,1),minHeight:e.spacing(6),background:e.palette.primary.dark,color:e.palette.primary.contrastText},spacer:{flexGrow:1},layerTitle:{},layerIcon:{},layerMeta:{flexGrow:1,overflowY:"scroll",userSelect:"text","& *":{userSelect:"text"}},typeContainer:{},closeButton:{}}})),oa=function(e){var t=e.leaf,a=e.tiles,r=e.handleClose,n=na();return Object(f.jsxs)("div",{className:n.root,children:[Object(f.jsxs)(Dt.a,{className:n.toolbar,children:[Object(f.jsx)(At.a,{title:"This is a ".concat(t.layerType," layer"),children:Object(f.jsx)(Ut.a,{edge:"start",className:n.layerIcon,color:"inherit","aria-label":"menu",children:Object(f.jsx)(st.LayerIcon,{layerType:t.layerType})})}),Object(f.jsx)(b.a,{variant:"body2",className:n.layerTitle,children:t.label}),Object(f.jsx)("div",{className:n.spacer}),Object(f.jsx)(Ut.a,{edge:"start",className:n.closeButton,color:"inherit","aria-label":"menu",onClick:r,children:Object(f.jsx)(Ft.a,{})})]}),Object(f.jsxs)("div",{className:n.layerMeta,children:[t.meta&&Object(f.jsx)(Yt,{meta:t.meta||{}}),a&&Object(f.jsx)(ra,{tiles:a})]})]})},la=function(e){var t=e.leafID,a=e.handleClose,r=Object(j.i)(Ie(t));return Object(f.jsx)(oa,{leaf:r.leaf,tiles:r.tiles,handleClose:a})},ia=function e(t){var a=t.branchId,r=t.depth,n=Object(j.i)(fe(a)),o=Object(j.i)(ne);if(!n||!n.branch)return null;var l=null===n||void 0===n?void 0:n.branch.children.branches.map((function(t,a){return Object(f.jsx)(e,{branchId:t,depth:r+1},"".concat(null===n||void 0===n?void 0:n.branch.branch.label,"-").concat(t,"-").concat(a))})).filter((function(e){return e})),i=null===n||void 0===n?void 0:n.branch.children.leaves.map((function(e,t){return Object(f.jsx)(sa,{leafId:e,depth:r+1},"".concat(null===n||void 0===n?void 0:n.branch.branch.label,"-").concat(e,"-").concat(t))})).filter((function(e){return e}));return 0===i.length&&0===l.length?null:Object(f.jsx)(mt,{id:a,label:null===n||void 0===n?void 0:n.branch.branch.label,hidden:null===n||void 0===n?void 0:n.hidden,searchText:o,children:[].concat(Object(v.a)(l),Object(v.a)(i))})},sa=function(e){var t=e.leafId,a=Object(j.i)(pe(t)),r=Object(j.i)(ne),n=Object(j.k)(ye),o=Object(j.k)(le),l=rt().toggleLayer;if(!a||!a.leaf||!a.leaf.nodeExists)return null;var i=a.leaf,s=i.id,c=i.layerType,u=i.label;return Object(f.jsx)(dt,{id:s,layerType:c,label:u,active:a.active,hidden:a.hidden,tilesState:a.tilesState,searchText:r,handleClick:o,handleDoubleClick:function(){if(a.leaf.layerType===w.ProjectTreeLayerTypes.REPORT&&a.renderable){var e=window.open(a.reportUrl,"_blank","noopener,noreferrer");e&&(e.opener=null)}else a.leaf.layerType===w.ProjectTreeLayerTypes.FILE?d.a.error("FILE DOWNLOADING NOT HANDLED YET"):a.renderable&&l(a.leaf.id)},handleContext:function(e,t,a){return n({leafId:e,position:{left:t,top:a}})}})},ca=function(){var e=Object(j.k)(ne),t=Object(j.i)(me),a=Object(j.h)(he),r=Object(s.a)(a,2),n=r[0],o=r[1],l=Object(j.h)(ce),i=Object(s.a)(l,2),c=i[0],u=i[1],p=Object(j.h)(ye),m=Object(s.a)(p,2),g=m[0],y=m[1],h=Object(j.i)(le),b=Object(j.i)(xe),x=Object(j.i)(de),w=Object(j.h)(ie),v=Object(s.a)(w,2),S=v[0],k=v[1],O=x.branches.length>0?b:n,_=x.branches.length>0?function(){d.a.debug("collapsing turned off")}:o,z=S&&null!==h?Object(f.jsx)(la,{leafID:h,handleClose:function(){return k(!1)}}):null,T=g&&Object(f.jsx)(Rt,{ctxState:g,onClose:function(){return y(null)}}),E=null!==t?Object(f.jsx)(ia,{branchId:t,depth:0}):Object(f.jsx)("div",{});return Object(f.jsx)(Pt,{lyrInfoOpen:S,setSearchText:e,expanded:O,ctxMenu:T,lyrInfo:z,selected:c,setExpanded:_,setSelected:function(e){Object(zt.isEqual)(e,c)||u(e)},children:E})},ua=function(e){var t=e.layerPath,a=Object(j.j)(ze(t)),n=Object(j.g)((function(e){var a=e.snapshot,r=e.set;return Object(ve.a)(je.a.mark((function e(){var n,o,l,i,s,c;return je.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("hasValue"===(n=a.getLoadable(ze(t))).state){e.next=3;break}return e.abrupt("return");case 3:return o=n.contents,e.next=6,a.getPromise(Oe(t));case 6:return l=e.sent,e.next=9,a.getPromise(_e(t));case 9:return i=e.sent,e.next=12,a.getPromise(Me);case 12:return s=e.sent,e.next=15,a.getPromise(Fe);case 15:if(c=e.sent,r(Me,H(s,o.bounds)),r(Fe,(u=c,d=[o.minZoom,o.maxZoom],u||d?d?[u?u[0]:B.zoomRange[0],Math.min(B.zoomRange[1],Math.max(u[1],d[1]||u[1]))]:u:B.zoomRange)),o.status!==w.TilingStatus.SUCCESS){e.next=22;break}return e.abrupt("return");case 22:o.status===w.TilingStatus.FETCH_ERROR?i<5&&setTimeout((function(){return r(_e(t),i+1)}),1e3*B.retryDelayS):o.status!==w.TilingStatus.QUEUED&&o.status!==w.TilingStatus.UNKNOWN&&o.status!==w.TilingStatus.CREATING||setTimeout((function(){return r(Oe(t),l+1)}),1e3*B.refreshDelayS);case 23:case"end":return e.stop()}var u,d}),e)})))}));return Object(r.useEffect)((function(){n()}),[a]),null},da=a(880),pa=a(346),ma=a(884),ga=Object(Ze.a)((function(e){return{root:{margin:e.spacing(1,0)}}})),fa="custom",ya=function(e){var t=e.activeView,a=e.defaultView,n=e.projectViews,o=e.handleChange,l=ga(),i=null===t?fa:t,s=Object(r.useMemo)((function(){if(!n||0===n.length)return[Object(f.jsx)(It.a,{value:"custom",disabled:!0,children:Object(f.jsx)(b.a,{variant:"subtitle1",color:"textSecondary",children:Object(f.jsx)("em",{children:"No custom views"})})},fa)];var e=n.map((function(e,t){var r=e.id===a?"(default)":"";return Object(f.jsxs)(It.a,{value:e.id,children:[e.name," ",r]},"view-".concat(t))}))||[];return[].concat(Object(v.a)(e),[null===t&&Object(f.jsx)(It.a,{value:"custom",children:Object(f.jsx)(b.a,{variant:"subtitle1",color:"textSecondary",children:Object(f.jsx)("em",{children:"Custom View"})})},fa)])}),[n,t]);return Object(f.jsxs)(pa.a,{className:l.root,fullWidth:!0,children:[Object(f.jsx)(da.a,{htmlFor:"grouped-native-select",children:"Curated Views"}),Object(f.jsx)(ma.a,{id:"view",value:i,disabled:!n||0===n.length,variant:"filled",onChange:function(e){return e.target.value!==fa&&o(e.target.value)},children:s})]})},ha=Object(Ze.a)((function(e){return{root:{},menuIcon:{marginRight:e.spacing(1)},menuItem:{display:"flex"}}})),ba=function(e){var t=e.baseLayer,a=e.baseLayers,r=e.setBaseLayer,n=ha(),o=a.map((function(e,t){var a=e.Icon;return Object(f.jsxs)(It.a,{value:e.id,className:n.menuItem,children:[Object(f.jsx)(a,{className:n.menuIcon}),Object(f.jsx)(b.a,{children:e.title})]},"view-".concat(t))}));return Object(f.jsxs)(pa.a,{className:n.root,fullWidth:!0,children:[Object(f.jsx)(da.a,{children:"Basemap"}),Object(f.jsx)(ma.a,{id:"baselayer",value:t.id,variant:"filled",classes:{selectMenu:n.menuItem},onChange:function(e){var t=a.find((function(t){return t.id===e.target.value}));t&&r(t)},children:o})]})},xa=a(344),wa=function(e){var t=e.error;return Object(f.jsx)(b.a,{color:"error",children:t||" "})},ja=Object(Ze.a)((function(e){return{root:{},legendBox:{padding:e.spacing(1),border:"1px solid #999999",borderRadius:5,position:"absolute",background:"white",width:270,boxShadow:"3px 3px 3px #00000066",top:15,right:15},subheaders:{background:"white"},container:{}}})),va=function(e){var t=e.views,a=e.defaultView,r=e.children,n=e.baseLayer,o=e.baseLayers,l=e.setBaseLayer,i=e.error,s=e.viewId,c=e.setViewId,u=ja();return Object(f.jsx)("div",{className:u.legendBox,children:Object(f.jsxs)("div",{className:u.root,children:[Object(f.jsx)(ba,{baseLayer:n,baseLayers:o,setBaseLayer:l}),Object(f.jsx)(ya,{activeView:s,defaultView:a,handleChange:c,projectViews:t}),Object(f.jsx)("div",{className:u.container,children:Object(f.jsx)(xa.a,{dense:!0,disablePadding:!0,children:r})}),Object(f.jsx)(wa,{error:i})]})})},Sa=a(342),ka=a(451),Oa=a(544),_a=a(931),za=a(452),Ta=a(556),Ea=a.n(Ta),Pa=Object(Ze.a)((function(e){return{container:{},listItem:{paddingLeft:0},listItemAvatar:{minWidth:e.spacing(6)},avatar:{},root:{marginTop:e.spacing(2)},heading:{marginTop:e.spacing(1)},loadingSpinner:{color:e.palette.text.secondary},layerItem:{display:"flex"},legendName:{flexGrow:1},deleteButtonHover:{},legendColor:{border:"1px solid black",width:"20px",display:"inline-block",height:"14px",marginRight:"5px"},deleteButton:{flexGrow:0,color:"#AAAAAA"}}})),Ca=function(e){var t=e.label,a=e.leafId,r=e.loading,n=e.fgColor,o=e.bgColor,l=e.subLabel,i=e.layerType,s=e.removeLayer,c=Pa(),u=i===w.ProjectTreeLayerTypes.RASTER?"#FFFFFF":o||"#66666666",d=i===w.ProjectTreeLayerTypes.RASTER?"#000000":n||"#000000";return Object(f.jsxs)(Sa.a,{dense:!0,className:c.listItem,children:[Object(f.jsx)(ka.a,{className:c.listItemAvatar,children:Object(f.jsx)(Oa.a,{style:{background:u},children:Object(f.jsx)(st.LayerIcon,{layerType:i,iconProps:{style:{color:d}}})})}),Object(f.jsx)(za.a,{primary:t,secondary:l}),Object(f.jsxs)(_a.a,{children:[r&&Object(f.jsx)(h.a,{className:c.loadingSpinner,color:"inherit",thickness:3,size:15}),!r&&Object(f.jsx)(Ut.a,{edge:"end","aria-label":"delete",onClick:function(e){e.stopPropagation(),s(a)},children:Object(f.jsx)(Ea.a,{})})]})]})},Ia=function(){var e=Object(j.i)(J),t=Object(j.i)(Re),a=Object(j.i)(Y),r=Object(j.h)(Le),n=Object(s.a)(r,2),o=n[0],l=n[1],i=Object(j.i)(Ue),c=We().setView;if(!e)return null;var u=e.tree.views?e.tree.views:[],d=u.length>0&&e.tree.defaultView?e.tree.defaultView:"";return Object(f.jsx)(va,{views:u,defaultView:d,baseLayer:o,baseLayers:A,error:t,setBaseLayer:l,viewId:i,setViewId:c,children:a.map((function(e,t){var a=e.id;return Object(f.jsx)(Na,{lid:a},"lgdLyr-".concat(t))}))})},Na=function(e){var t,a,r,n=e.lid,o=Object(j.i)(se(n)),l=Object(j.i)(Ie(n)),i=Object(j.i)(Pe(n)),s=rt().removeLayer,c=function(e,t){var a=t?t[500]:"#44444400",r={fg:a,bg:V(a,.5)};if(!e)return r;try{var n=e.find((function(e){return"line"===e.type})),o=n&&n["line-color"],l=e.find((function(e){return"fill"===e.type})),i=l&&l["fill-color"],s=e.find((function(e){return"circle"===e.type})),c=s&&s["circle-color"];return{fg:o||i||c||a,bg:V(o||i||c||a,.5)}}catch(u){return r}}(null===(t=l.symbology)||void 0===t?void 0:t.symbologyJSON,null!==i?W[i]:void 0),u=null===(a=l.tiles)||void 0===a||null===(r=a.rasterStats)||void 0===r?void 0:r.stats,p="";if(u&&u.maximum&&u.minimum)try{p="min: ".concat(u.minimum.toFixed(2)," max: ").concat(u.maximum.toFixed(2))}catch(h){d.a.error("Could not get stats using object: ".concat(JSON.stringify(u)))}var m=o.id,g=o.layerType,y=o.label;return Object(f.jsx)(Ca,{leafId:m,fgColor:c.fg,bgColor:c.bg,layerType:g,label:y,subLabel:p,loading:l.tileStatus===w.TilingStatus.FETCHING||l.symbologyStatus===w.SymbologyStatus.FETCHING,removeLayer:s})},La=a(257),Ra=(a(753),function(){return Object(f.jsx)(m.b,{logoSVG:Object(f.jsx)(h.a,{size:"3rem",thickness:4}),status:Object(f.jsx)(b.a,{variant:"h5",component:"div",children:"Loading Map..."}),containerProps:{maxWidth:"xl",style:{position:"absolute",zIndex:1e3,top:0,left:0,width:"100%",height:"100%",background:"#FFFFFF33"}}})}),Da=Object(Ze.a)((function(e){return{root:{marginLeft:e.spacing(1)},container:{display:"flex",height:"100%"},mapContainer:{position:"relative",background:"#CCCCCC",height:"100%",width:"100%","&>h1":{color:"#9999FF",position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},drawerContents:{height:"100%",display:"flex"},drawerSpacer:{flex:"0 0 0%"},drawerSpacerOpen:{},dialogContainer:{alignItems:"left",justifyContent:"left"},loaderSpinner:{position:"absolute",bottom:10,right:10,color:e.palette.secondary.main},dialog:{position:"absolute",margin:0,left:"20px",top:"20px"},subheaders:{background:"white"},dummyText:{}}})),Aa={zoom:8},Ua=Tt.a.debounce((function(){var e;return(e=console).log.apply(e,arguments)}),1500),Ma=function(e){var t=e.children,a=e.baseLayer,n=e.styleLoading,o=e.bounds,l=e.zoomBounds,c=Da(),u=Object(r.useState)(Aa),d=Object(s.a)(u,2),p=d[0],m=d[1],y=Object(r.useRef)();y.current=p;var b=function(e){var t=Object(i.a)(Object(i.a)(Object(i.a)({},y.current),e),{},{pitch:0,bearing:0});l&&t.zoom&&(t.zoom>l[1]?t.zoom=l[1]:t.zoom<l[0]&&(t.zoom=l[0])),o&&t.longitude&&t.latitude&&(t.longitude<o[0]?t.longitude=o[0]:t.longitude>o[2]&&(t.longitude=o[2]),t.latitude<o[1]?t.latitude=o[1]:t.latitude>o[3]&&(t.latitude=o[3])),Ua("setViewport DEBOUNCED",{inV:e,outV:t,bounds:o}),m(t)},x=A.find((function(e){return e.id===a.id}));Object(r.useEffect)((function(){var e=Object(i.a)({},y.current);!e.latitude&&o&&b(Object(i.a)(Object(i.a)({},e),{},{longitude:(o[0]+o[2])/2,latitude:(o[1]+o[3])/2}))}),[o,l]);var w=n&&Object(f.jsx)(h.a,{size:"2rem",thickness:6,className:c.loaderSpinner});return x&&o?Object(f.jsx)("div",{className:c.mapContainer,children:Object(f.jsxs)(La.b,Object(i.a)(Object(i.a)({},p),{},{width:"100%",height:"100%",minZoom:l[0]||4,maxZoom:l[1]||20,mapStyle:x.style,clickRadius:2,onViewportChange:b,mapboxApiAccessToken:g.config.mapConfig.mapBoxToken,children:[w,t]}))}):Object(f.jsx)(Ra,{})},Fa=a(929),Ba=a(558),Wa=a.n(Ba),$a=a(559),Ga=a.n($a),Va=Object(Ze.a)((function(e){return{root:{position:"absolute",top:e.spacing(1),left:e.spacing(1)}}})),Ha=function(e){var t=e.drawerOpen,a=e.toggleDrawer,r=Va();return Object(f.jsx)(Fa.a,{color:"primary","aria-label":"add",onClick:a,size:"small",className:r.root,children:t?Object(f.jsx)(Wa.a,{}):Object(f.jsx)(Ga.a,{})})};function Za(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=Math.max(0,Math.min(100,e));return 1-t/100}function Ja(e,t){var a,r={minzoom:(null===t||void 0===t?void 0:t.minZoom)||0,maxzoom:24,layout:{}};if(null===t||void 0===t||null===(a=t.rsLayer)||void 0===a?void 0:a.subLayers){var n=t.rsLayer.subLayers.find((function(t){return t.id===e}));r["source-layer"]=n.path}else{var o;r["source-layer"]=null===t||void 0===t||null===(o=t.rsLayer)||void 0===o?void 0:o.id}return r}var qa={line:function(e,t,a){return Object(i.a)(Object(i.a)({},Ja(e.layerId,a)),{},{type:"line",paint:{"line-color":t[500],"line-opacity":Za(e.transparency)}})},point:function(e,t,a){return Object(i.a)(Object(i.a)({},Ja(e.layerId,a)),{},{type:"circle",paint:{"circle-stroke-opacity":1,"circle-stroke-width":2,"circle-stroke-color":Za(e.transparency),"circle-opacity":.5,"circle-radius":4,"circle-color":t[700]}})},polygon:function(e,t,a){return Object(i.a)(Object(i.a)({},Ja(e.layerId,a)),{},{type:"fill",paint:{"fill-opacity":Za(e.transparency),"fill-color":t[700]}})},outline:function(e,t,a){return Object(i.a)(Object(i.a)({},Ja(e.layerId,a)),{},{type:"line",paint:{"line-color":t[500],"line-opacity":Za(e.transparency)}})}};var Xa=function(){var e=Object(r.useState)(0),t=Object(s.a)(e,2),a=t[0],o=t[1],l=n.a.useContext(La.a).map,c=Object(j.i)(Le),u=Object(j.h)(De),p=Object(s.a)(u,2),m=p[0],g=p[1],f=Object(j.i)(Ae),y=Object(r.useCallback)((function(){if(!l||!l.isStyleLoaded())throw g(!0),new Error("Map is still loading");g(!1);var e,t=function(){try{var e=l.getStyle(),t=e.layers,a=e.sources;return{layers:t.map((function(e){return e.id})).filter((function(e){return 0===e.indexOf("webRAVE")})),sources:Object.keys(a).filter((function(e){return 0===e.indexOf("webRAVE")}))}}catch(r){return{layers:[],sources:[]}}},a=f.reduce((function(e,t){return Object(i.a)(Object(i.a)({},e),{},Object(re.a)({},(r=t.leaf.id,"webRAVE_".concat(r||"UNKNOWN")),{layer:t,sourceId:(a=t.leaf.layerPath||"UNKNOWN","webRAVE_".concat(a))}));var a,r}),{});Object.keys(a).forEach((function(r){var n,o,s=a[r],c=s.layer,u=s.sourceId,p=[],m=t();if(m.layers.indexOf(r)<0){if(m.sources.indexOf(u)<0&&(c.leaf.layerType===w.ProjectTreeLayerTypes.RASTER?l.addSource(u,(n=c.tiles,o=c.leaf.symbology,{type:"raster",scheme:"tms",maxzoom:n.maxZoom||20,minzoom:n.minZoom||4,tiles:["".concat(n.url).concat(o||"raster","/{z}/{x}/{y}.").concat(n.format||"png")]})):l.addSource(u,function(e){return{type:"vector",maxzoom:e.maxZoom||20,minzoom:e.minZoom||4,tiles:["".concat(e.url,"{z}/{x}/{y}.").concat(e.format||"pbf")]}}(c.tiles))),c.leaf.layerType===w.ProjectTreeLayerTypes.RASTER)l.addLayer(function(e,t,a){var r;return{type:"raster",id:t,source:a,minzoom:(null===(r=e.tiles)||void 0===r?void 0:r.minZoom)||0,maxzoom:24,layout:{},paint:{}}}(c,r,u)),p.push(r);else{var g,f=(null===(g=c.symbology)||void 0===g?void 0:g.symbologyJSON)||[];if(f&&null!==c.randomColor){var y=W[c.randomColor];switch(c.leaf.layerType){case w.ProjectTreeLayerTypes.LINE:f=[qa.line(c.leaf,y,c.tiles)];break;case w.ProjectTreeLayerTypes.POLYGON:f=[qa.polygon(c.leaf,y,null===c||void 0===c?void 0:c.tiles),qa.outline(c.leaf,y,null===c||void 0===c?void 0:c.tiles)];break;case w.ProjectTreeLayerTypes.POINT:f=[qa.line(c.leaf,y,c.tiles)]}}f.forEach((function(e,t){var a=0===t?r:"".concat(r,"-").concat(t),n=function(e,t,a,r){var n;return Object(i.a)(Object(i.a)({type:"fill",minzoom:(null===(n=e.tiles)||void 0===n?void 0:n.minZoom)||0,maxzoom:24,layout:{},paint:{}},t),{},{id:a,source:r})}(c,e,a,u);l.addLayer(n),p.push(a)}))}d.a.debug("MapLayers::AddLayer",{layer:c,sourceId:u,newKey:r,lastId:e})}else{t().layers.filter((function(e){return e.indexOf(r)>-1})).forEach((function(e){return p.push(e)}))}p.forEach((function(t){e&&(d.a.debug("MapLayers:: Moving ".concat(t," before ").concat(e)),l.moveLayer(t,e)),e=t}))})),t().layers.forEach((function(e){Object.keys(a).find((function(t){return 0==e.indexOf(t)}))||l.removeLayer(e)})),o(0)}),[l,m,f,c]);return Object(r.useEffect)((function(){try{d.a.info("recalcMapLayers:Regular"),y()}catch(e){a<20&&setTimeout((function(){return o(a+1)}),2e3)}}),[l,m,f,c]),Object(r.useEffect)((function(){try{d.a.info("recalcMapLayers:Regular"),a>0&&y()}catch(e){a<20&&setTimeout((function(){return o(a+1)}),2e3)}}),[a]),null};var Ka=function(){var e=Object(j.i)(Be),t=Object(j.i)(De),a=Object(j.i)(Le),r=Object(j.h)(X),o=Object(s.a)(r,2),l=o[0],i=o[1];return Object(f.jsx)(n.a.Fragment,{children:Object(f.jsx)(Ma,{baseLayer:a,zoomBounds:e.zoom,bounds:e.bounds,styleLoading:t,children:[Object(f.jsx)(Ha,{drawerOpen:l,toggleDrawer:function(){return i(!l)}},"treeToggleBtn"),Object(f.jsx)(Ia,{},"legend"),Object(f.jsx)(Xa,{},"mapLayers")]})})},Qa=a(414),Ya=Object(Ze.a)((function(e){return{root:{padding:e.spacing(1),height:"100%",overflowY:"scroll",userSelect:"text","& *":{userSelect:"text"}},btnGroup:{width:"100%",display:"flex",justifyContent:"space-between","&>*":{flex:"0 0 calc(50% - 0.5em)"},margin:e.spacing(1,1,3,1)},divider:{marginTop:e.spacing(3)},footerLogo:{}}})),er=function(e){var t=e.project,a=e.downloadZipFile,r=e.pendingZips,n=Ya(),o={Title:t.name,Type:t.projType,"Warehouse ID":t.id,"Warehouse Tags":Array.isArray(t.tags)?t.tags.join(", "):"<None>","Project Created":"".concat(Ht.dates.formatDate(t.createdOn,"lll")," (").concat(Ht.dates.formatDateAgo(t.createdOn),")"),"Project Updated":"".concat(Ht.dates.formatDate(t.updatedOn,"lll")," (").concat(Ht.dates.formatDateAgo(t.updatedOn),")")},l=t&&r[t.id];return Object(f.jsxs)(Ge.a,{className:n.root,children:[Object(f.jsxs)(b.a,{variant:"h4",paragraph:!0,color:"textPrimary",children:[t.projType," Project"]}),Object(f.jsx)(Qa.a,{}),Object(f.jsxs)(b.a,{component:"div",paragraph:!0,children:["This project exists within the Riverscapes Data Warehouse. You can download this project and view it using the free"," ",Object(f.jsx)("a",{href:"https://rave.riverscapes.xyz",target:"_blank",rel:"noreferrer",children:"RAVE"})," ","plugin for ArcGIS."]}),Object(f.jsxs)("div",{className:n.btnGroup,children:[Object(f.jsx)(g.WarehouseButton,{title:"Warehouse",href:"".concat(F,"/#/").concat(t.program,"/").concat(t.id)}),Object(f.jsx)(g.DownloadZipBtn,{downloadZipFile:a,pendingSince:l,project:t,title:"Download"})]}),Object(f.jsx)(Xt,{title:"Project Information",meta:o}),Object(f.jsx)(Xt,{title:"Project Metadata",meta:t.meta}),Object(f.jsx)(Qa.a,{className:n.divider}),Object(f.jsx)("a",{href:"http://riverscapes.xyz",target:"_blank",rel:"noreferrer",children:Object(f.jsx)("img",{className:n.footerLogo,alt:"footer",src:"".concat("/webrave-staging","/cc-watermarks-riverscapes_orig.png")})})]})},tr=function(){var e=Object(j.i)(Q),t=Object(j.g)((function(e){var t=e.snapshot,a=e.set;return function(){var e=Object(ve.a)(je.a.mark((function e(r){var n,o,l,i,s;return je.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getPromise(Ee);case 2:return n=e.sent,e.next=5,t.getPromise(Pe(r));case 5:return o=e.sent,e.next=8,t.getPromise(Ie(r));case 8:return l=e.sent,e.next=11,t.getPromise(Ce);case 11:i=e.sent,s=!1,l.symbology&&l.symbology.status===w.SymbologyStatus.FOUND||(s=!0),s&&null===o?(a(Ee,[].concat(Object(v.a)(n),[i])),a(Pe(r),i)):s||null===o||(a(Ee,n.filter((function(e){return e===o}))),a(Pe(r),null));case 15:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()}));Object(r.useEffect)((function(){(function(){var a=Object(ve.a)(je.a.mark((function a(){var r;return je.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:r=0;case 1:if(!(r<e.length)){a.next=8;break}if(e[r].layerType===w.ProjectTreeLayerTypes.RASTER){a.next=5;break}return a.next=5,t(e[r].id);case 5:r++,a.next=1;break;case 8:case"end":return a.stop()}}),a)})));return function(){return a.apply(this,arguments)}})()()}),[e])},ar=function(e){var t=e.history,a=e.auth,r=e.programs,n=Object(g.useProgram)(r),o=Object(j.i)(X),l=Object(j.i)(te),i=n&&Object.values(w.WarehouseRoleEnum).indexOf(n.role)>-1,s=Object(g.useProject)(a,n,!1,!0),c=s.project,u=s.loading,d=s.initialized,p=Object(g.useDownloads)(a,n),m=p.downloadZipFile,h=p.pendingZips;return $e(a,c),tr(),i?!d||u?Object(f.jsx)(y,{title:"Loading",history:t,signOut:a.signOut,children:Object(f.jsx)(x,{title:u?"Loading Project...":"Initializing..."})}):c?Object(f.jsxs)(f.Fragment,{children:[l.map((function(e){return Object(f.jsx)(ua,{layerPath:e},e)})),Object(f.jsx)(y,{title:c.name,history:t,signOut:a.signOut,children:Object(f.jsx)(Qe,{open:o,split:"vertical",primary:"second",minSize:500,maxSize:"85%",defaultSize:"75%",child1:Object(f.jsx)(at,{tabs:[{label:"Project Tree",value:Object(f.jsx)(ca,{})},{label:"Project Info",value:Object(f.jsx)(er,{project:c,downloadZipFile:m,pendingZips:h})}]}),child2:Object(f.jsx)(Ka,{})})})]}):Object(f.jsx)(y,{title:"Project not found",history:t,signOut:a.signOut,children:Object(f.jsx)(qe,{})}):Object(f.jsx)(y,{title:"Access Denied",history:t,signOut:a.signOut,children:Object(f.jsx)(g.NotAllowedModal,{program:n,onClose:function(){return t.push("/")}})})},rr=a(570),nr=function(){var e=Object(r.useState)(),t=Object(s.a)(e,2),a=t[0],n=t[1],o=Object(r.useState)(),l=Object(s.a)(o,2),u=l[0],p=l[1],h=Object(r.useState)(!0),b=Object(s.a)(h,2),x=b[0],j=b[1],v=Object(rr.a)(a,!1,!1),S=Object(c.k)();Object(r.useEffect)((function(){Object(w.authCheck)(g.config.endpoints.graphql,"").then((function(e){var t;d.a.debug("authResp",e);var a=null===(t=e.data)||void 0===t?void 0:t.auth;a&&a.region&&(n({region:a.region,userPoolId:a.userPool,userPoolWebClientId:a.clientId,mandatorySignIn:!0,oauth:{domain:a.domain,scope:["email","profile","openid"],redirectSignIn:g.config.redirectUrl.toString(),redirectSignOut:g.config.redirectUrl.toString(),responseType:"code"}}),j(!1))})).catch((function(e){d.a.error("api.getPrograms error",e)}))}),[]),Object(r.useEffect)((function(){if(S){var e=localStorage.getItem("RSUrl"),t=S.location.pathname;d.a.debug("LOCALSTORAGE:::REDIRECT checking",e,t,v),v.isAuthenticated||v.error||!v.isAuthComplete||(d.a.debug("LOCALSTORAGE:::SET",t),localStorage.setItem("RSUrl",t)),e&&v.isAuthenticated&&v.isAuthComplete&&!v.error&&(t!==e&&(d.a.debug("LOCALSTORAGE:::REDIRECT",t,e),S.push(e)),localStorage.removeItem("RSUrl"))}}),[S,v]);var k=Object(r.useCallback)((function(e,t,a){a?e.push("/"+t.machineName+"/"+a.id):e.push("/"+t.machineName)}),[]);Object(r.useEffect)((function(){v.isAuthenticated&&!(null===u||void 0===u?void 0:u.programs)&&(p({programs:[],loading:!0}),v.getCurrentToken().then((function(e){return Object(w.getPrograms)(g.config.endpoints.graphql,e)})).then((function(e){d.a.debug("API GetPrograms",e),e.data&&e.data.programs&&p({programs:e.data.programs,loading:!1})})).catch((function(e){d.a.error("api.getPrograms error",e)})))}),[v,u]);var O=Object(f.jsx)("img",{src:"/webrave-staging/RiverscapesLogo.png",alt:"logo"});if(x)return Object(f.jsx)(y,{title:"Loading authentication info",children:Object(f.jsx)(m.b,{logoSVG:O,title:B.appName,message:"Loading authentication info",version:g.config.version})});if(v.isAuthenticated){if(!u||(null===u||void 0===u?void 0:u.loading))return Object(f.jsx)(y,{title:"webRAVE",children:Object(f.jsx)(m.b,{logoSVG:O,title:"Riverscapes Warehouse",message:"Loading Programs",version:g.config.version})});var _={navigate:k,signOut:v.signOut};return Object(f.jsxs)(c.g,{children:[Object(f.jsx)(c.d,{path:"/:programId/:projectId/:config?",render:function(e){return Object(f.jsx)(ar,Object(i.a)(Object(i.a)({},e),{},{auth:v,programs:null===u||void 0===u?void 0:u.programs}))}}),Object(f.jsx)(c.d,{path:"*",render:function(e){return Object(f.jsx)(y,Object(i.a)(Object(i.a)(Object(i.a)({},e),_),{},{children:Object(f.jsx)(qe,{})}))}})]})}return v.isAuthComplete?Object(f.jsx)(y,{title:"Sign in",children:Object(f.jsx)(g.LoginScreen,{signIn:v.signIn,title:"Riverscapes Map Viewer"})}):Object(f.jsx)(y,{title:"webRAVE",children:Object(f.jsx)(m.b,{logoSVG:O,title:"Authenticating",message:"Authenticating",version:g.config.version})})},or=(a(864),a(231));a.n(or).a.workerClass=a(865).default,d.a.setDefaultLevel(d.a.levels.DEBUG),a(866),l.a.render(Object(f.jsx)(j.a,{children:Object(f.jsx)(c.e,{basename:"/",history:g.hashHistory,children:Object(f.jsx)(nr,{})})}),document.getElementById("root")),window.addEventListener("load",(function(){window.history.pushState({},"")})),navigator.storage&&navigator.storage.persist?navigator.storage.persist().then((function(e){e?d.a.debug("Storage will not be cleared except by explicit user action"):d.a.warn("Storage may be cleared by the UA under storage pressure.")})):d.a.warn("navigator.storage API not implemented.")}},[[869,1,2]]]);
//# sourceMappingURL=main.384984c3.chunk.js.map